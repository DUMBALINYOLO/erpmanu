{"version":3,"sources":["reducers/accounttypescategorychoices.js","reducers/accounttypesclassificationchoices.js","reducers/assetsdepriciationmethodchoices.js","reducers/assettypeschoices.js","reducers/accounttypechoices.js","reducers/billfrequencychoices.js","reducers/accountbalancesheetcategorieschoices.js","reducers/interestintervalaccountchoices.js","reducers/accountinterestmethodchoices.js","reducers/inventoryvaluationperiodchoices.js","reducers/inventoryvaluationmethodschoices.js","reducers/inventorycheckfrequencychoices.js","reducers/inventorycheckdatechoices.js","reducers/unitofmeasurechoices.js","reducers/customeraddresstypechoices.js","reducers/employeesattendancestatuschoices.js","reducers/employeestypechoices.js","reducers/billpaymentstatuschoices.js","reducers/supplieraddresstypechoices.js","reducers/supplierstatuschoices.js","reducers/customerstatuschoices.js","reducers/billingchoices.js","reducers/billpaymentmethodschoices.js","reducers/invoicesalestypeschoices.js","reducers/inventoryorderpaymentmethodschoices.js","reducers/manufactringshifttimechoices.js","reducers/eventprioritychoices.js","reducers/eventparticipanttypeschoices.js","reducers/eventreminderchoices.js","reducers/eventtimechoices.js","reducers/eventiconchoices.js","reducers/eventrepeatchoices.js","reducers/employeepayrolltaxchoices.js","reducers/natureofemploymentchoices.js","reducers/employeeyearchoices.js","reducers/employeetimesheetmonthchoices.js","reducers/employeepayslipstatuschoices.js","reducers/employeepayrolldatechoices.js","reducers/employeedeductionmethods.js","reducers/employeepayfrequencies.js","reducers/employeelunchchoices.js","reducers/employeeleavestatuschoices.js","reducers/employeeleavecategorychoices.js","reducers/employeecategorychoices.js","reducers/employmentcontractterminationreasons.js","reducers/accountingperiodschoices.js","reducers/journalentrytypeschoices.js","reducers/employeesgenderchoices.js","reducers/inventorytypeschoices.js","reducers/productcomponentpricingchoices.js","reducers/equipmentcomponentconditionchoices.js","reducers/inventoryorderstatuschoices.js","reducers/invoicesaleschoices.js","reducers/invoicelinechoices.js","reducers/manufacturingprocesschoices.js","reducers/customerpaymentmethodschoices.js","reducers/processrateunittimechoices.js","reducers/manufacturingproducttypeschoices.js","reducers/billofmaterialslinechoices.js","reducers/processedproductsstockstatuschoices.js","reducers/accounts.js","reducers/interestbearingaccounts.js","reducers/journals.js","reducers/ledgers.js","reducers/accountingposts.js","reducers/workbooks.js","reducers/accountingadjustments.js","reducers/debits.js","reducers/credits.js","reducers/fullypaidnotverifiedbills.js","reducers/fullypaidbills.js","reducers/unpostedandunadjustedjournalentries.js","reducers/unadjustedjournalentries.js","reducers/unpostedjournalentries.js","reducers/postedjournalentries.js","reducers/inactiveaccounts.js","reducers/assets.js","reducers/taxes.js","reducers/currencies.js","reducers/bills.js","reducers/billpayments.js","reducers/unverifiedproductionprocesses.js","reducers/verifiedproductionprocesses.js","reducers/processmachines.js","reducers/processmachinegroups.js","reducers/shifts.js","reducers/shiftschedules.js","reducers/processrates.js","reducers/productionorders.js","reducers/manufacturingteams.js","reducers/manufacturingpersonels.js","reducers/processproducts.js","reducers/wastegenerationreports.js","reducers/processedproductstockreceipts.js","reducers/processedproductstockadjustments.js","reducers/processedproductstocktakes.js","reducers/inventorycategories.js","reducers/debitnotes.js","reducers/inventoryorders.js","reducers/inventoryorderpayments.js","reducers/warehouses.js","reducers/inventorystockitems.js","reducers/storagemedias.js","reducers/orderitems.js","reducers/inventoryreceipts.js","reducers/stockadjustments.js","reducers/inventorystocktakes.js","reducers/activesuppliers.js","reducers/deactivedsuppliers.js","reducers/supplieraddresses.js","reducers/rawmaterials.js","reducers/equipments.js","reducers/upcomingevents.js","reducers/consumables.js","reducers/completedevents.js","reducers/eventconfigs.js","reducers/fullyreceivedandtotalpaidfororders.js","reducers/fullyreceivedtotalpaidforandverifiedorders.js","reducers/employeeconfigs.js","reducers/employeecontracts.js","reducers/employeecontractsterminations.js","reducers/employeedepartments.js","reducers/employeeleaves.js","reducers/employees.js","reducers/employeepaygrades.js","reducers/employeeallowances.js","reducers/employeepaydeductions.js","reducers/employeepaycommissionrules.js","reducers/employeepayrolltaxes.js","reducers/employeepayrollschedules.js","reducers/employeepayrolldates.js","reducers/employeepayslips.js","reducers/employeeattendancetimesheets.js","reducers/companyshareholders.js","reducers/companymanagers.js","reducers/companybookkeepers.js","reducers/companypayrollofficers.js","reducers/companydrivers.js","reducers/companymanufacturingpersonells.js","reducers/companyinventorycontrollers.js","reducers/companysalesreps.js","reducers/pendingemployeeleaves.js","reducers/authorisedemployeeleaves.js","reducers/declinedemployeeleaves.js","reducers/deactivatedcustomers.js","reducers/customeraddresses.js","reducers/activecustomers.js","reducers/creditnotes.js","reducers/payments.js","reducers/receipts.js","reducers/invoicelines.js","reducers/salesgroupspricingdiscounts.js","reducers/quotations.js","reducers/unverifiedinvoices.js","reducers/overdueinvoices.js","reducers/voidedinvoices.js","reducers/refundedinvoices.js","reducers/fullypaidnotyetsalesinvoices.js","reducers/sales.js","reducers/manufacturedstockitems.js","reducers/journalentries.js","reducers/errors.js","reducers/messages.js","reducers/productionprocesses.js","reducers/inventoryitems.js","reducers/cashdrawers.js","reducers/invoices.js","reducers/index.js","actions/types.js","types/creditnoteTypes.js","types/manufacturedstockitemTypes.js","types/paymentTypes.js","types/receiptTypes.js","types/invoicelineTypes.js","types/salesgroupspricingdiscountTypes.js","types/quotationTypes.js","types/unverifiedinvoiceTypes.js","types/overdueinvoiceTypes.js","types/voidedinvoiceTypes.js","types/refundedinvoiceTypes.js","types/fullypaidnotyetsalesinvoiceTypes.js","types/saleTypes.js","types/deactivatedcustomerTypes.js","types/customeraddressTypes.js","types/activecustomerTypes.js","types/companyshareholderTypes.js","types/companymanagerTypes.js","types/companybookkeeperTypes.js","types/companypayrollofficerTypes.js","types/companydriverTypes.js","types/companymanufacturingpersonellTypes.js","types/companyinventorycontrollerTypes.js","types/companysalesrepTypes.js","types/pendingemployeeleaveTypes.js","types/authorisedemployeeleaveTypes.js","types/declinedemployeeleaveTypes.js","types/employeeconfigTypes.js","types/employeesTypes.js","types/employeecontractTypes.js","types/employeecontractsterminationTypes.js","types/employeedepartmentTypes.js","types/employeeleaveTypes.js","types/employeepaygradeTypes.js","types/employeeallowanceTypes.js","types/employeepaydeductionTypes.js","types/employeepaycommissionruleTypes.js","types/employeepayrolltaxeTypes.js","types/employeepayrollscheduleTypes.js","types/employeepayrolldateTypes.js","types/employeepayslipTypes.js","types/employeeattendancetimesheetTypes.js","types/inventorycategoryTypes.js","types/debitnoteTypes.js","types/eventconfigTypes.js","types/completedeventTypes.js","types/upcomingeventTypes.js","types/fullyreceivedtotalpaidforandverifiedorderTypes.js","types/fullyreceivedandtotalpaidfororderTypes.js","types/consumableTypes.js","types/equipmentTypes.js","types/rawmaterialTypes.js","types/supplieraddressTypes.js","types/deactivedsupplierTypes.js","types/activesupplierTypes.js","types/inventorystocktakeTypes.js","types/inventoryreceiptTypes.js","types/stockadjustmentTypes.js","types/orderitemTypes.js","types/storagemediaTypes.js","types/inventorystockitemTypes.js","types/warehouseTypes.js","types/inventoryorderpaymentTypes.js","types/inventoryorderTypes.js","types/processedproductstocktakeTypes.js","types/processedproductstockadjustmentTypes.js","types/processedproductstockreceiptTypes.js","types/wastegenerationreportTypes.js","types/productionorderTypes.js","types/processproductTypes.js","types/manufacturingpersonelTypes.js","types/manufacturingteamTypes.js","types/shiftscheduleTypes.js","types/processrateTypes.js","types/shiftTypes.js","types/processmachineTypes.js","types/processmachinegroupTypes.js","types/verifiedproductionprocessTypes.js","types/inactiveaccountTypes.js","types/assetTypes.js","types/unverifiedproductionprocessTypes.js","types/billpaymentTypes.js","types/billTypes.js","types/currencyTypes.js","types/taxTypes.js","types/postedjournalentryTypes.js","types/unpostedjournalentryTypes.js","types/unadjustedjournalentryTypes.js","types/unpostedandunadjustedjournalentryTypes.js","types/fullypaidbillTypes.js","types/fullypaidnotverifiedbillTypes.js","types/creditTypes.js","types/debitTypes.js","types/workbookTypes.js","types/accountingadjustmentTypes.js","types/ledgerTypes.js","types/accountingpostTypes.js","types/accountTypes.js","types/journalTypes.js","types/interestbearingaccountTypes.js","store.js","components/Home/Home.js","components/Home/Default.js","dashboard/AppTopbar.js","dashboard/AppFooter.js","dashboard/AppMenu.js","dashboard/AppProfile.js","dashboard/service/CarService.js","dashboard/components/Dashboard.js","dashboard/Content.js","actions/choices.js","constants.js","actions/currencies.js","actions/employees.js","accounts/accountingconfiguration/AccountingConfigurationForm.js","actions/taxes.js","accounts/taxes/Taxes.js","actions/journals.js","accounts/journals/Journals.js","actions/accounts.js","accounts/assets/Assets.js","actions/assets.js","accounts/currencies/Currencies.js","accounts/accounts/Accounts.js","accounts/interestbearingaccounts/InterestBearingAccounts.js","actions/interestbearingaccounts.js","actions/bills.js","accounts/billpayments/BillPayments.js","actions/billpayments.js","actions/ledgers.js","accounts/ledgers/Ledgers.js","actions/debits.js","actions/credits.js","accounts/accountingposts/AccountingPosts.js","actions/accountingposts.js","actions/workbooks.js","accounts/workbooks/Workbooks.js","accounts/accountingadjustments/AccountingAdjustments.js","actions/accountingadjustments.js","accounts/debits/Debits.js","accounts/credits/Credits.js","accounts/fullypaidnotverifiedbills/FullyPaidNotVerifiedBills.js","actions/fullypaidnotverifiedbills.js","accounts/fullypaidbills/FullyPaidBills.js","actions/fullypaidbills.js","accounts/unpostedandunadjustedjournalentries/UnpostedAndUnadjustedJournalEntries.js","actions/unpostedandunadjustedjournalentries.js","accounts/unadjustedjournalentries/UnadjustedJournalEntries.js","actions/unadjustedjournalentries.js","accounts/unpostedjournalentries/UnpostedJournalEntries.js","actions/unpostedjournalentries.js","accounts/postedjournalentries/PostedJournalEntries.js","actions/postedjournalentries.js","accounts/inactiveaccounts/InActiveAccounts.js","actions/inactiveaccounts.js","accounts/bills/Bills.js","actions/activesuppliers.js","accounts/bills/BillLines.js","accounts/bills/BillForm.js","customers/deactivatedcustomers/DeactivatedCustomers.js","actions/deactivatedcustomers.js","actions/activecustomers.js","customers/customeraddresses/CustomerAddresses.js","actions/customeraddresses.js","customers/activecustomers/ActiveCustomers.js","actions/employeepayrollschedules.js","employees/employeepayrollschedules/EmployeePayrollSchedules.js","employees/employees/Employees.js","actions/employeepaygrades.js","employees/employees/EmployeeForm.js","employees/companyshareholders/CompanyShareholders.js","actions/companyshareholders.js","employees/companymanagers/CompanyManagers.js","actions/companymanagers.js","employees/companybookkeepers/CompanyBookkeepers.js","actions/companybookkeepers.js","employees/companypayrollofficers/CompanyPayrollOfficers.js","actions/companypayrollofficers.js","employees/companydrivers/CompanyDrivers.js","actions/companydrivers.js","employees/companymanufacturingpersonells/CompanyManufacturingPersonells.js","actions/companymanufacturingpersonells.js","employees/companyinventorycontrollers/CompanyInventoryControllers.js","actions/companyinventorycontrollers.js","employees/companysalesreps/CompanySalesreps.js","actions/companysalesreps.js","employees/pendingemployeeleaves/PendingEmployeeLeaves.js","actions/pendingemployeeleaves.js","employees/authorisedemployeeleaves/AuthorisedEmployeeLeaves.js","actions/authorisedemployeeleaves.js","employees/declinedemployeeleaves/DeclinedEmployeeLeaves.js","actions/declinedemployeeleaves.js","actions/employeecontracts.js","actions/employeedepartments.js","employees/employeecontracts/EmployeeContracts.js","employees/employeecontractsterminations/EmployeeContractsTerminations.js","actions/employeecontractsterminations.js","employees/employeedepartments/EmployeeDepartments.js","employees/employeeleaves/EmployeeLeaves.js","actions/employeeleaves.js","actions/employeepaycommissionrules.js","actions/employeeallowances.js","actions/employeepaydeductions.js","actions/employeepayrolltaxes.js","employees/employeepaygrades/EmployeePaygrades.js","employees/employeeallowances/EmployeeAllowances.js","employees/employeepaydeductions/EmployeePayDeductions.js","employees/employeepaycommissionrules/EmployeePayCommissionRules.js","employees/employeepayrolltaxes/EmployeePayrollTaxes.js","employees/employeepayrolldates/EmployeePayrollDates.js","actions/employeepayrolldates.js","employees/employeepayslips/EmployeePayslips.js","actions/employeepayslips.js","employees/employeeconfig/EmployeeConfigForm.js","actions/employeeconfigs.js","employees/employeeattendancetimesheets/EmployeeAttendanceTimesheets.js","actions/employeeattendancetimesheets.js","events/eventconfig/EventConfigForm.js","actions/eventconfig.js","events/upcomingevents/UpcomingEvents.js","actions/upcomingevents.js","events/completedevents/CompletedEvents.js","actions/completedevents.js","actions/inventorycategories.js","inventory/inventorycategories/InventoryCategories.js","inventory/debitnotes/DebitNotes.js","actions/debitnotes.js","actions/inventoryorders.js","inventory/debitnotes/DebitNoteLines.js","actions/orderitems.js","inventory/debitnotes/DebitNoteForm.js","inventory/inventoryorders/InventoryOrders.js","actions/warehouses.js","actions/inventoryitems.js","inventory/inventoryorders/OrderItems.js","inventory/inventoryorders/InventoryOrderForm.js","inventory/inventoryorderpayments/InventoryOrderpayments.js","actions/inventoryorderpayments.js","inventory/warehouses/Warehouses.js","actions/inventorystockitems.js","actions/storagemedias.js","inventory/inventorystockitems/InventoryStockItems.js","inventory/storagemedias/StorageMedias.js","inventory/inventoryreceipts/InventoryReceipts.js","actions/inventoryreceipts.js","inventory/stockadjustments/StockAdjustments.js","actions/stockadjustments.js","inventory/inventorystocktakes/InventoryStockTakes.js","actions/inventorystocktakes.js","inventory/activesuppliers/ActiveSuppliers.js","inventory/deactivedsuppliers/DeActivedSuppliers.js","actions/deactivedsuppliers.js","inventory/supplieraddresses/SupplierAddresses.js","actions/supplieraddresses.js","actions/rawmaterials.js","inventory/rawmaterials/RawMaterials.js","actions/equipments.js","inventory/equipments/Equipments.js","inventory/consumables/Consumables.js","actions/consumables.js","inventory/fullyreceivedandtotalpaidfororders/FullyReceivedAndTotalPaidForOrders.js","actions/fullyreceivedandtotalpaidfororders.js","inventory/fullyreceivedtotalpaidforandverifiedorders/FullyReceivedTotalPaidForAndVerifiedOrders.js","actions/fullyreceivedtotalpaidforandverifiedorders.js","invoicing/creditnotes/CreditNotes.js","actions/creditnotes.js","invoicing/payments/Payments.js","actions/payments.js","actions/cashdrawers.js","actions/invoices.js","invoicing/receipts/Receipts.js","actions/receipts.js","invoicing/invoicelines/InvoiceLines.js","actions/invoicelines.js","actions/salesgroupspricingdiscounts.js","invoicing/salesgroupspricingdiscounts/SalesGroupsPricingDiscounts.js","invoicing/salesgroupspricingdiscounts/SalesGroupsPricingDiscountForm.js","invoicing/quotations/Quotations.js","actions/quotations.js","invoicing/unverifiedinvoices/UnverifiedInvoices.js","actions/unverifiedinvoices.js","invoicing/overdueinvoices/OverdueInvoices.js","actions/overdueinvoices.js","invoicing/voidedinvoices/VoidedInvoices.js","actions/voidedinvoices.js","invoicing/refundedinvoices/RefundedInvoices.js","actions/refundedinvoices.js","invoicing/fullypaidnotyetsalesinvoices/FullypaidNotYetSalesInvoices.js","actions/fullypaidnotyetsalesinvoices.js","invoicing/sales/Sales.js","actions/sales.js","actions/processproducts.js","invoicing/sales/Lines.js","invoicing/sales/SalesForm.js","manufacture/unverifiedproductionprocesses/UnverifiedProductionProcesses.js","actions/unverifiedproductionprocesses.js","manufacture/verifiedproductionprocesses/VerifiedProductionProcesses.js","actions/verifiedproductionprocesses.js","actions/manufacturedstockitems.js","manufacture/manufacturedstockitems/ManufacturedStockItems.js","manufacture/manufacturedstockitems/ManufacturedStockItemForm.js","actions/processmachines.js","manufacture/processmachines/ProcessMachines.js","actions/processmachinegroups.js","manufacture/processmachinegroups/ProcessMachineGroups.js","manufacture/processmachinegroups/Machines.js","manufacture/processmachinegroups/ProcessMachineGroupForm.js","actions/shifts.js","actions/manufacturingteams.js","manufacture/shifts/Shifts.js","manufacture/shifts/ShiftForm.js","manufacture/shiftschedules/ShiftScheduleForm.js","actions/shiftschedules.js","actions/processrates.js","manufacture/processrates/ProcessRates.js","manufacture/processrates/ProcessRateForm.js","manufacture/productionprocess/Ingridients.js","manufacture/productionprocess/ProductionProcessForm.js","manufacture/productionorders/ProductionOrders.js","actions/productionorders.js","actions/manufacturingpersonels.js","manufacture/manufacturingteams/ManufacturingTeams.js","manufacture/manufacturingteams/ManufacturingTeamForm.js","manufacture/manufacturingpersonels/ManufacturingPersonels.js","manufacture/manufacturingpersonels/ManufacturingPersonelForm.js","manufacture/processproducts/ProcessProducts.js","manufacture/processproducts/ProcessProductForm.js","actions/wastegenerationreports.js","manufacture/wastegenerationreports/WasteGenerationReports.js","manufacture/wastegenerationreports/WasteGenerationReportForm.js","manufacture/processedproductstockreceipts/ProcessedProductStockReceipts.js","actions/processedproductstockreceipts.js","manufacture/processedproductstockreceipts/ProcessedProductStockReceiptLine.js","manufacture/processedproductstockreceipts/ProcessedProductStockReceiptForm.js","actions/productionprocesses.js","actions/processedproductstockadjustments.js","actions/processedproductstocktakes.js","manufacture/processedproductstockadjustments/ProcessedProductStockAdjustments.js","manufacture/processedproductstockadjustments/ProcessedProductStockAdjustmentForm.js","manufacture/processedproductstocktakes/ProcessedProductStockTakes.js","manufacture/processedproductstocktakes/ProcessedProductStockTakeForm.js","components/alerts/Alert.js","App.js","ScrollToTop.js","index.js"],"names":["initialState","accounttypescategorychoices","accounttypesclassificationchoices","assetsdepriciationmethodchoices","assettypeschoices","accounttypechoices","billfrequencychoices","accountbalancesheetcategorieschoices","interestintervalaccountchoices","accountinterestmethodchoices","inventoryvaluationperiodchoices","inventoryvaluationmethodschoices","inventorycheckfrequencychoices","inventorycheckdatechoices","unitofmeasurechoices","customeraddresstypechoices","employeesattendancestatuschoices","employeetypechoices","billpaymentstatuschoices","supplieraddresstypechoices","supplierstatuschoices","customerstatuschoices","billingchoices","billpaymentmethodschoices","invoicesalestypeschoices","inventoryorderpaymentmethodschoices","manufactringshifttimechoices","eventprioritychoices","eventparticipanttypeschoices","eventreminderchoices","eventtimechoices","eventiconchoices","eventrepeatchoices","employeepayrolltaxchoices","natureofemploymentchoices","employeeyearchoices","employeetimesheetmonthchoices","employeepayslipstatuschoices","employeepayrolldatechoices","employeedeductionmethods","employeepayfrequencies","employeelunchchoices","employeeleavestatuschoices","employeeleavecategorychoices","employeecategorychoices","employmentcontractterminationreasons","accountingperiodschoices","journalentrytypeschoices","employeesgenderchoices","inventorytypeschoices","productcomponentpricingchoices","equipmentcomponentconditionchoices","inventoryorderstatuschoices","invoicesaleschoices","invoicelinechoices","manufacturingprocesschoices","customerpaymentmethodschoices","processrateunittimechoices","manufacturingproducttypeschoices","billofmaterialslinechoices","processedproductsstockstatuschoices","accounts","account","loading","interestbearingaccounts","interestbearingaccount","journals","journal","ledgers","ledger","accountingposts","accountingpost","workbooks","workbook","accountingadjustments","accountingadjustment","debits","debit","credits","credit","fullypaidnotverifiedbills","fullypaidnotverifiedbill","fullypaidbills","fullypaidbill","unpostedandunadjustedjournalentries","unpostedandunadjustedjournalentry","unadjustedjournalentries","unadjustedjournalentry","unpostedjournalentries","unpostedjournalentry","postedjournalentries","postedjournalentry","inactiveaccounts","inactiveaccount","assets","asset","taxes","tax","currencies","currency","bills","bill","billpayments","billpayment","unverifiedproductionprocesses","unverifiedproductionprocess","verifiedproductionprocesses","verifiedproductionprocess","processmachines","processmachine","processmachinegroups","processmachinegroup","shifts","shift","shiftschedules","shiftschedule","processrates","processrate","productionorders","productionorder","manufacturingteams","manufacturingteam","manufacturingpersonels","manufacturingpersonel","processproducts","processproduct","wastegenerationreports","wastegenerationreport","processedproductstockreceipts","processedproductstockreceipt","processedproductstockadjustments","processedproductstockadjustment","processedproductstocktakes","processedproductstocktake","inventorycategories","inventorycategory","debitnotes","debitnote","inventoryorders","inventoryorder","inventoryorderpayments","inventoryorderpayment","warehouses","warehouse","inventorystockitems","inventorystockitem","storagemedias","storagemedia","orderitems","orderitem","inventoryreceipts","inventoryreceipt","stockadjustments","stockadjustment","inventorystocktakes","inventorystocktake","activesuppliers","activesupplier","deactivedsuppliers","deactivedsupplier","supplieraddresses","supplieraddress","rawmaterials","rawmaterial","equipments","equipment","upcomingevents","upcomingevent","consumables","consumable","completedevents","completedevent","eventconfigs","eventconfig","fullyreceivedandtotalpaidfororders","fullyreceivedandtotalpaidfororder","fullyreceivedtotalpaidforandverifiedorders","fullyreceivedtotalpaidforandverifiedorder","employeeconfigs","employeeconfig","employeecontracts","employeecontract","employeecontractsterminations","employeecontractstermination","employeedepartments","employeedepartment","employeeleaves","employeeleave","employees","employee","employeepaygrades","employeepaygrade","employeeallowances","employeeallowance","employeepaydeductions","employeepaydeduction","employeepaycommissionrules","employeepaycommissionrule","employeepayrolltaxes","employeepayrolltax","employeepayrollschedules","employeepayrollschedule","employeepayrolldates","employeepayrolldate","employeepayslips","employeepayslip","employeeattendancetimesheets","employeeattendancetimesheet","companyshareholders","companyshareholder","companymanagers","companymanager","companybookkeepers","companybookkeeper","companypayrollofficers","companypayrollofficer","companydrivers","companydriver","companymanufacturingpersonells","companymanufacturingpersonell","companyinventorycontrollers","companyinventorycontroller","companysalesreps","companysalesrep","pendingemployeeleaves","pendingemployeeleave","authorisedemployeeleaves","authorisedemployeeleave","declinedemployeeleaves","declinedemployeeleave","deactivatedcustomers","customeraddresses","customeraddress","activecustomers","activecustomer","creditnotes","creditnote","payments","payment","receipts","receipt","invoicelines","salesgroupspricingdiscounts","salesgroupspricingdiscount","quotations","quotation","unverifiedinvoices","unverifiedinvoice","overdueinvoices","overdueinvoice","voidedinvoices","voidedinvoice","refundedinvoices","refundedinvoice","fullypaidnotyetsalesinvoices","fullypaidnotyetsalesinvoice","sales","sale","manufacturedstockitems","manufacturedstockitem","journalentries","msg","status","productionprocesses","inventoryitems","cashdrawers","invoices","combineReducers","errors","state","action","type","payload","messages","invoice","filter","id","arrayList","splice","findIndex","item","data","process","employeestypechoices","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Home","Component","Default","AppTopbar","className","onClick","this","props","onToggleMenu","placeholder","defaultProps","AppFooter","style","AppSubmenu","activeIndex","event","index","disabled","preventDefault","command","originalEvent","setState","onMenuItemClick","submenuIcon","items","badge","Fragment","icon","label","i","content","renderLinkContent","to","activeClassName","e","exact","target","href","url","map","active","styleClass","classNames","badgeStyleClass","key","root","renderLink","AppMenu","model","AppProfile","expanded","bind","src","alt","logout","connect","auth","CarService","axios","get","then","res","Dashboard","tasks","selectedCar","lineData","labels","datasets","fill","borderColor","fullcalendarOptions","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","defaultDate","header","left","center","right","editable","events","onTaskChange","carservice","selectedTasks","checked","push","value","indexOf","getCarsSmall","cars","backgroundColor","color","height","onChange","options","autoWidth","width","fontSize","marginBottom","responsive","selectionMode","selection","onSelectionChange","field","sortable","fontWeight","textAlign","Content","layoutMode","layoutColorMode","staticMenuInactive","overlayMenuActive","mobileMenuActive","onWrapperClick","onSidebarClick","createMenu","menuClick","isDesktop","menu","window","location","element","classList","add","remove","replace","RegExp","split","join","innerWidth","addClass","document","body","removeClass","wrapperClass","sidebarClassName","ref","el","sidebar","getProcessedProductsStockStatusChoices","dispatch","catch","err","console","log","getManufacturingProductTypesChoices","getProcessRateUnitTimeChoices","getInventoryTypesChoices","getUnitOfMeasureChoices","getAccountBalanceSheetCategoriesChoices","getAccountTypeChoices","endpoint","accountsURL","interestbearingaccountsURL","journalsURL","ledgersURL","accountingpostsURL","workbooksURL","accountingadjustmentsURL","debitsURL","creditsURL","fullypaidnotverifiedbillsURL","fullypaidbillsURL","unpostedandunadjustedjournalentriesURL","unadjustedjournalentriesURL","unpostedjournalentriesURL","postedjournalentriesURL","inactiveaccountsURL","assetsURL","taxesURL","currenciesURL","billsURL","billpaymentsURL","unverifiedproductionprocessesURL","verifiedproductionprocessesURL","processmachinesURL","processmachinegroupsURL","shiftsURL","shiftschedulesURL","processratesURL","productionordersURL","manufacturingteamsURL","manufacturingpersonelsURL","processproductsURL","wastegenerationreportsURL","processedproductstockreceiptsURL","processedproductstockadjustmentsURL","processedproductstocktakesURL","manufacturedstockitemsURL","productionprocessesURL","inventorycategoriesURL","debitnotesURL","inventoryordersURL","inventoryorderpaymentsURL","warehousesURL","inventoryitemsURL","inventorystockitemsURL","storagemediasURL","orderitemsURL","inventoryreceiptsURL","stockadjustmentsURL","inventorystocktakesURL","activesuppliersURL","deactivedsuppliersURL","supplieraddressesURL","rawmaterialsURL","equipmentsURL","consumablesURL","fullyreceivedandtotalpaidforordersURL","fullyreceivedtotalpaidforandverifiedordersURL","upcomingeventsURL","completedeventsURL","eventconfigURL","deactivatedcustomersURL","customeraddressesURL","activecustomersURL","cashdrawersURL","employeesURL","employeeconfigURL","employeecontractsURL","employeecontractsterminationsURL","employeedepartmentsURL","employeeleavesURL","employeepaygradesURL","employeeallowancesURL","employeepaydeductionsURL","employeepaycommissionrulesURL","employeepayrolltaxesURL","employeepayrollschedulesURL","employeepayrolldatesURL","employeepayslipsURL","employeeattendancetimesheetsURL","companyshareholdersURL","companymanagersURL","companybookkeepersURL","companypayrollofficersURL","companydriversURL","companymanufacturingpersonellsURL","companyinventorycontrollersURL","companysalesrepsURL","pendingemployeeleavesURL","authorisedemployeeleavesURL","declinedemployeeleavesURL","creditnotesURL","paymentsURL","invoicesURL","receiptsURL","invoicelinesURL","salesgroupspricingdiscountsURL","quotationsURL","unverifiedinvoicesURL","overdueinvoicesURL","voidedinvoicesURL","refundedinvoicesURL","fullypaidnotyetsalesinvoicesURL","salesURL","getCurrencies","getEmployees","AccountingConfigurationForm","name","onSubmit","accountingconfiguration","start_of_financial_year","default_accounting_period","default_bookkeeper","equipment_capitalization_limit","is_configured","active_currency","addAccountingConfiguration","onTypeChange","onDefaultBookkeeper","onActiveCurrency","onIsConfigured","getAccountingPeriodsChoices","mode","showButtons","buttonLayout","decrementButtonClassName","incrementButtonClassName","incrementButtonIcon","decrementButtonIcon","step","showIcon","dateFormat","htmlFor","inputId","filterBy","showClear","optionLabel","optionValue","getTaxes","Taxes","emptyTax","rate","saveTax","addTax","taxDialog","history","globalFilter","dateFilter","selectedTaxes","deleteTaxDialog","deleteTaxesDialog","visibleNewDialog","visibleEditDialog","visibleDeleteDialog","selectRow","newData","submitted","actionBodyTemplate","filterDate","export","renderDateFilter","onDateFilterChange","formatDate","openNew","hideDialog","editTax","onOpenEditDialog","onHideEditDialog","editDataValidateError","confirmDeleteTax","deleteTax","confirmDeleteSelected","deleteSelectedTaxes","hideDeleteTaxDialog","hideDeleteTaxesDialog","rowData","length","growl","show","severity","summary","detail","errorList","accept","maxFileSize","chooseLabel","iconPos","onInput","activity","showValue","marginRight","dt","undefined","trim","exportCSV","date","month","getMonth","day","getDate","getFullYear","taxDialogFooter","editDialogFooter","deleteTaxesDialogFooter","renderHeader","dataKey","rowHover","paginator","rows","emptyMessage","currentPageReportTemplate","paginatorTemplate","rowsPerPageOptions","filterPlaceholder","headerStyle","bodyStyle","overflow","visible","modal","footer","onHide","marginLeft","post","put","delete","getJournals","Journals","selectedJournals","getAccounts","Assets","emptyAsset","description","category","initial_value","credit_account","depreciation_period","init_date","depreciation_method","salvage_value","created_by","entry","saveAsset","addAsset","assetDialog","selectedAssets","deleteAssetDialog","deleteAssetsDialog","editAsset","confirmDeleteAsset","deleteAsset","deleteSelectedAssets","hideDeleteAssetDialog","hideDeleteAssetsDialog","onCategory","onCreditAccount","onDepreciationMethod","onCreatedBy","onEntry","getAssetTypesChoices","getAssetsDepriciationMethodChoices","getAssets","assetDialogFooter","deleteAssetsDialogFooter","Currencies","emptyCurrency","symbol","saveCurrency","addCurrency","currencyDialog","selectedCurrencies","deleteCurrencyDialog","deleteCurrenciesDialog","editCurrency","confirmDeleteCurrency","deleteCurrency","deleteSelectedCurrencies","hideDeleteCurrencyDialog","hideDeleteCurrenciesDialog","currencyDialogFooter","deleteCurrenciesDialogFooter","Accounts","emptyAccount","balance","bank_account","control_account","parent_account","balance_sheet_category","saveAccount","addAccount","selectedAccounts","accountDialog","deleteAccountDialog","deleteAccountsDialog","onParentAccount","onBalanceSheetCategory","onControlAccount","onActive","onBankAccount","editAccount","confirmDeleteAccount","deleteAccount","deleteSelectedAccounts","hideDeleteAccountDialog","hideDeleteAccountsDialog","accountDialogFooter","InterestBearingAccounts","emptyInterestBearingAccount","interest_rate","interest_interval","interest_method","last_interest_earned_date","saveInterestBearingAccount","addInterestBearingAccount","billpaymentDialog","selectedInterestBearingAccounts","interestbearingaccountDialog","deleteInterestBearingAccountDialog","deleteInterestBearingAccountsDialog","editInterestBearingAccount","confirmDeleteInterestBearingAccount","deleteInterestBearingAccount","deleteSelectedInterestBearingAccounts","hideDeleteInterestBearingAccountDialog","hideDeleteInterestBearingAccountsDialog","onInterestInterval","onInterestMethod","is_active","getInterestBearingAccounts","getInterestIntervalAccountChoices","getAccountInterestMethodChoices","interestbearingaccountDialogFooter","deleteInterestBearingAccountsDialogFooter","getBills","BillPayments","emptyBillPayment","amount","memo","paid_by","saveBillPayment","addBillPayment","selectedBillPayments","deleteBillPaymentDialog","deleteBillPaymentsDialog","editBillPayment","confirmDeleteBillPayment","deleteBillPayment","deleteSelectedBillPayments","hideDeleteBillPaymentDialog","hideDeleteBillPaymentsDialog","onAccount","onBill","onPaidBy","getBillPayments","billpaymentDialogFooter","deleteBillPaymentsDialogFooter","getLedgers","Ledgers","emptyLedger","saveLedger","addLedger","ledgerDialog","selectedLedgers","deleteLedgerDialog","deleteLedgersDialog","editLedger","confirmDeleteLedger","deleteLedger","deleteSelectedLedgers","hideDeleteLedgerDialog","hideDeleteLedgersDialog","ledgerDialogFooter","deleteLedgersDialogFooter","getDebits","getCredits","AccountingPosts","emptyAccountingPost","saveAccountingPost","addAccountingPost","accountingpostDialog","selectedAccountingPosts","deleteAccountingPostDialog","deleteAccountingPostsDialog","editAccountingPost","confirmDeleteAccountingPost","deleteAccountingPost","deleteSelectedAccountingPosts","hideDeleteAccountingPostDialog","hideDeleteAccountingPostsDialog","onDebit","onCredit","onLedger","getAccountingPosts","accountingpostDialogFooter","deleteAccountingPostsDialogFooter","getWorkbooks","Workbooks","emptyWorkbook","saveWorkbook","addWorkbook","workbookDialog","selectedWorkbooks","deleteWorkbookDialog","deleteWorkbooksDialog","editWorkbook","confirmDeleteWorkbook","deleteWorkbook","deleteSelectedWorkbooks","hideDeleteWorkbookDialog","hideDeleteWorkbooksDialog","workbookDialogFooter","deleteWorkbooksDialogFooter","AccountingAdjustments","emptyAccountingAdjustment","adjusting_entry","date_created","saveAccountingAdjustment","addAccountingAdjustment","accountingadjustmentDialog","selectedAccountingAdjustments","deleteAccountingAdjustmentDialog","deleteAccountingAdjustmentsDialog","editAccountingAdjustment","confirmDeleteAccountingAdjustment","deleteAccountingAdjustment","deleteSelectedAccountingAdjustments","hideDeleteAccountingAdjustmentDialog","hideDeleteAccountingAdjustmentsDialog","onAdjustingEntry","onWorkbook","getAccountingAdjustments","accountingadjustmentDialogFooter","deleteAccountingAdjustmentsDialogFooter","Debits","Credits","FullyPaidNotVerifiedBills","getFullyPaidNotVerifiedBills","FullyPaidBills","getFullyPaidBills","UnpostedAndUnadjustedJournalEntries","getUnpostedAndUnadjustedJournalEntries","UnadjustedJournalEntries","getUnadjustedJournalEntries","UnpostedJournalEntries","getUnpostedJournalEntries","PostedJournalEntries","getPostedJournalEntries","InActiveAccounts","getInActiveAccounts","Bills","getActiveSuppliers","BillLines","debitAccounts","lines","val","idx","debit_account","data-id","BillForm","handleChange","includes","dataset","addNewRow","prevState","Math","random","deleteRow","s","sindex","vendor","reference","due","bill_frequency_type","payment_status","addBill","render","onBillingChoices","onVendor","onBillPayment","onBillingFrequency","clickOnDelete","colSpan","formData","record","r","getBillingChoices","getBillFrequencyChoices","getBillPaymentStatusChoices","DeactivatedCustomers","getDeactivatedCustomers","getActiveCustomers","CustomerAddresses","emptyCustomerAddress","owner","street_address","floor_number","city","apartment_number","postal_code","saveCustomerAddress","addCustomerAddress","activecustomerDialog","selectedCustomerAddresses","customeraddressDialog","deleteCustomerAddressDialog","deleteCustomerAddressesDialog","editCustomerAddress","confirmDeleteCustomerAddress","deleteCustomerAddress","deleteSelectedCustomerAddresses","hideDeleteCustomerAddressDialog","hideDeleteCustomerAddressesDialog","onOwner","onType","getCustomerAddresses","getCustomerAddressTypeChoices","customeraddressDialogFooter","deleteCustomerAddressesDialogFooter","ActiveCustomers","emptyActiveCustomer","is_organization","is_individual","banking_details","website","bp_number","email","phone","saveActiveCustomer","addActiveCustomer","selectedActiveCustomers","deleteActiveCustomerDialog","deleteActiveCustomersDialog","editActiveCustomer","confirmDeleteActiveCustomer","deleteActiveCustomer","deleteSelectedActiveCustomers","hideDeleteActiveCustomerDialog","hideDeleteActiveCustomersDialog","onStatus","onIsOrganization","onIsIndividual","getCustomerStatusChoices","activecustomerDialogFooter","deleteActiveCustomersDialogFooter","getEmployeePayrollSchedules","EmployeePayrollSchedules","emptyEmployeePayrollSchedule","saveEmployeePayrollSchedule","addEmployeePayrollSchedule","employeepayrollscheduleDialog","selectedEmployeePayrollSchedules","deleteEmployeePayrollScheduleDialog","deleteEmployeePayrollSchedulesDialog","editEmployeePayrollSchedule","confirmDeleteEmployeePayrollSchedule","deleteEmployeePayrollSchedule","deleteSelectedEmployeePayrollSchedules","hideDeleteEmployeePayrollScheduleDialog","hideDeleteEmployeePayrollSchedulesDialog","employeepayrollscheduleDialogFooter","deleteEmployeePayrollSchedulesDialogFooter","Employees","getEmployeePaygrades","EmployeeForm","first_name","middle_name","last_name","address","date_of_birth","id_number","gender","pay_grade","leave_days","last_leave_day_increment","uses_timesheet","addEmployee","onGender","onPayGrade","onUsesTimesheet","getEmployeesTypeChoices","getEmployeesGenderChoices","CompanyShareholders","getCompanyShareholders","CompanyManagers","getCompanyManagers","CompanyBookkeepers","getCompanyBookkeepers","CompanyPayrollOfficers","getCompanyPayrollOfficers","CompanyDrivers","getCompanyDrivers","CompanyManufacturingPersonells","getCompanyManufacturingPersonells","CompanyInventoryControllers","getCompanyInventoryControllers","CompanySalesreps","getCompanySalesreps","PendingEmployeeLeaves","getPendingEmployeeLeaves","AuthorisedEmployeeLeaves","getAuthorisedEmployeeLeaves","DeclinedEmployeeLeaves","getDeclinedEmployeeLeaves","getEmployeeContracts","getEmployeeDepartments","EmployeeContracts","emptyEmployeeContract","start_date","department","job_position","end_of_probation","termination_date","employee_category","nature_of_employment","saveEmployeeContract","addEmployeeContract","employeecontractDialog","selectedEmployeeContracts","deleteEmployeeContractDialog","deleteEmployeeContractsDialog","editEmployeeContract","confirmDeleteEmployeeContract","deleteEmployeeContract","deleteSelectedEmployeeContracts","hideDeleteEmployeeContractDialog","hideDeleteEmployeeContractsDialog","onDepartment","onEmployee","onEmployeeCategory","onNatureOfEmployment","getNatureOfEmploymentChoices","getEmployeeCategoryChoices","employeecontractDialogFooter","deleteEmployeeContractsDialogFooter","EmployeeContractsTerminations","emptyEmployeeContractsTermination","reason_for_termination","contract","saveEmployeeContractsTermination","addEmployeeContractsTermination","employeecontractsterminationDialog","deleteEmployeeContractsTerminationDialog","deleteEmployeeContractsTerminationsDialog","editEmployeeContractsTermination","confirmDeleteEmployeeContractsTermination","deleteEmployeeContractsTermination","deleteSelectedEmployeeContractsTerminations","hideDeleteEmployeeContractsTerminationDialog","hideDeleteEmployeeContractsTerminationsDialog","onReasonForTermination","onContract","getEmployeeContractsTerminations","getEmploymentContractTerminationReasons","employeecontractsterminationDialogFooter","deleteEmployeeContractsTerminationsDialogFooter","EmployeeDepartments","emptyEmployeeDepartment","manager","saveEmployeeDepartment","addEmployeeDepartment","employeedepartmentDialog","selectedEmployeeDepartments","deleteEmployeeDepartmentDialog","deleteEmployeeDepartmentsDialog","editEmployeeDepartment","confirmDeleteEmployeeDepartment","deleteEmployeeDepartment","deleteSelectedEmployeeDepartments","hideDeleteEmployeeDepartmentDialog","hideDeleteEmployeeDepartmentsDialog","onManager","onEmployees","employeedepartmentDialogFooter","deleteEmployeeDepartmentsDialogFooter","EmployeeLeaves","emptyEmployeeLeave","end_date","authorized_by","notes","recorded","saveEmployeeLeave","addEmployeeLeave","employeeleaveDialog","selectedEmployeeLeaves","deleteEmployeeLeaveDialog","deleteEmployeeLeavesDialog","editEmployeeLeave","confirmDeleteEmployeeLeave","deleteEmployeeLeave","deleteSelectedEmployeeLeaves","hideDeleteEmployeeLeaveDialog","hideDeleteEmployeeLeavesDialog","onAuthorizedBy","onRecorded","getEmployeeLeaves","getEmployeeLeaveCategoryChoices","getEmployeeLeaveStatusChoices","employeeleaveDialogFooter","deleteEmployeeLeavesDialogFooter","getEmployeePayCommissionRules","getEmployeeAllowances","getEmployeePayDeductions","getEmployeePayrollTaxes","EmployeePaygrades","emptyEmployeePaygrade","salary","pay_frequency","monthly_leave_days","hourly_rate","overtime_rate","overtime_two_rate","commission","allowances","deductions","payroll_taxes","subtract_lunch_time_from_working_hours","lunch_duration","maximum_leave_days","saveEmployeePaygrade","addEmployeePaygrade","employeepaygradeDialog","selectedEmployeePaygrades","deleteEmployeePaygradeDialog","deleteEmployeePaygradesDialog","editEmployeePaygrade","confirmDeleteEmployeePaygrade","deleteEmployeePaygrade","deleteSelectedEmployeePaygrades","hideDeleteEmployeePaygradeDialog","hideDeleteEmployeePaygradesDialog","onPayFrequency","onCommission","onAllowances","onDeductions","onPayrollTaxes","onLunchDuration","onCheck","getEmployeePayFrequencies","getEmployeeLunchChoices","employeepaygradeDialogFooter","deleteEmployeePaygradesDialogFooter","EmployeeAllowances","taxable","saveEmployeeAllowance","addEmployeeAllowance","employeeallowanceDialog","selectedEmployeeAllowances","deleteEmployeeAllowanceDialog","deleteEmployeeAllowancesDialog","editEmployeeAllowance","confirmDeleteEmployeeAllowance","deleteEmployeeAllowance","deleteSelectedEmployeeAllowances","hideDeleteEmployeeAllowanceDialog","hideDeleteEmployeeAllowancesDialog","onTaxable","emptyEmployeeAllowance","employeeallowanceDialogFooter","deleteEmployeeAllowancesDialogFooter","EmployeePayDeductions","emptyEmployeePayDeduction","deduction_method","tax_deductable","basic_income","hourly_income","overtime_income","benefits","fixed_amount","employer_contribution","liability_account","account_paid_into","archived","saveEmployeePayDeduction","addEmployeePayDeduction","employeepaydeductionDialog","selectedEmployeePayDeductions","deleteEmployeePayDeductionDialog","deleteEmployeePayDeductionsDialog","editEmployeePayDeduction","confirmDeleteEmployeePayDeduction","deleteEmployeePayDeduction","deleteSelectedEmployeePayDeductions","hideDeleteEmployeePayDeductionDialog","hideDeleteEmployeePayDeductionsDialog","onDeductionMethods","onBenefits","onLiabilityAccount","onAccountPaidInto","onTaxDeductable","onBasicIncome","onHourlyIncome","onOvertimeIncome","onArchived","getEmployeeDeductionMethods","employeepaydeductionDialogFooter","deleteEmployeePayDeductionsDialogFooter","EmployeePayCommissionRules","emptyEmployeePayCommissionRule","min_sales","saveEmployeePayCommissionRule","addEmployeePayCommissionRule","employeepaycommissionruleDialog","selectedEmployeePayCommissionRules","deleteEmployeePayCommissionRuleDialog","deleteEmployeePayCommissionRulesDialog","editEmployeePayCommissionRule","confirmDeleteEmployeePayCommissionRule","deleteEmployeePayCommissionRule","deleteSelectedEmployeePayCommissionRules","hideDeleteEmployeePayCommissionRuleDialog","hideDeleteEmployeePayCommissionRulesDialog","employeepaycommissionruleDialogFooter","deleteEmployeePayCommissionRulesDialogFooter","EmployeePayrollTaxes","emptyEmployeePayrollTax","saveEmployeePayrollTax","addEmployeePayrollTax","employeepayrolltaxDialog","selectedEmployeePayrollTaxes","deleteEmployeePayrollTaxDialog","deleteEmployeePayrollTaxesDialog","editEmployeePayrollTax","confirmDeleteEmployeePayrollTax","deleteEmployeePayrollTax","deleteSelectedEmployeePayrollTaxes","hideDeleteEmployeePayrollTaxDialog","hideDeleteEmployeePayrollTaxesDialog","getEmployeePayrollTaxChoices","employeepayrolltaxDialogFooter","deleteEmployeePayrollTaxesDialogFooter","EmployeePayrollDates","emptyEmployeePayrollDate","departments","pay_grades","schedule","saveEmployeePayrollDate","addEmployeePayrollDate","employeepayrolldateDialog","selectedEmployeePayrollDates","deleteEmployeePayrollDateDialog","deleteEmployeePayrollDatesDialog","editEmployeePayrollDate","confirmDeleteEmployeePayrollDate","deleteEmployeePayrollDate","deleteSelectedEmployeePayrollDates","hideDeleteEmployeePayrollDateDialog","hideDeleteEmployeePayrollDatesDialog","onDate","onDepartments","onPayGrades","onSchedule","getEmployeePayrollDates","getEmployeePayrollDateChoices","employeepayrolldateDialogFooter","deleteEmployeePayrollDatesDialogFooter","EmployeePayslips","selectedEmployeePayslips","getEmployeePayslips","background","EmployeeConfigForm","last_payroll_date","require_verification_before_posting_payslips","salary_follows_profits","payroll_officer","payroll_account","payroll_counter","business_social_security_number","addEmployeeConfig","onPayrollOfficer","onPayrollAccount","onSalaryFollowsProfits","EmployeeAttendanceTimesheets","emptyEmployeeAttendanceTimesheet","year","recorded_by","complete","saveEmployeeAttendanceTimesheet","addEmployeeAttendanceTimesheet","employeeattendancetimesheetDialog","selectedEmployeeAttendanceTimesheets","deleteEmployeeAttendanceTimesheetDialog","deleteEmployeeAttendanceTimesheetsDialog","editEmployeeAttendanceTimesheet","confirmDeleteEmployeeAttendanceTimesheet","deleteEmployeeAttendanceTimesheet","deleteSelectedEmployeeAttendanceTimesheets","hideDeleteEmployeeAttendanceTimesheetDialog","hideDeleteEmployeeAttendanceTimesheetsDialog","onMonth","onYear","onRecordedBy","onComplete","getEmployeeAttendanceTimesheets","getEmployeeTimesheetMonthChoices","getEmployeeYearChoices","employeeattendancetimesheetDialogFooter","deleteEmployeeAttendanceTimesheetsDialogFooter","EventConfigForm","number_of_agenda_items","autogenerate_events_from_models","addEventConfig","onCompleted","UpcomingEvents","selectedEvents","getUpcomingEvents","CompletedEvents","getCompletedEvents","getInventoryCategories","InventoryCategories","emptyInventoryCategory","parent","saveInventoryCategory","addInventoryCategory","inventorycategoryDialog","selectedInventoryCategories","deleteInventoryCategoryDialog","deleteInventoryCategoriesDialog","editInventoryCategory","confirmDeleteInventoryCategory","deleteInventoryCategory","deleteSelectedInventoryCategories","hideDeleteInventoryCategoryDialog","hideDeleteInventoryCategoriesDialog","onParent","inventorycategoryDialogFooter","DebitNotes","getDebitNotes","getInventoryOrders","getOrderItems","useEffect","fetched","orderItems","quantity","DebitNoteForm","note","comments","order","addDebitNote","InventoryOrders","getWarehouses","getInventoryItems","OrderItems","unitOfMeasures","inventoryItems","unit","order_price","InventoryOrderForm","validated_by","expected_receipt_date","supplier","ship_to","issuing_inventory_controller","addInventoryOrder","supplier_invoice_number","onValidatedBy","onIssuingInventoryController","onShipTo","onSupplier","onTax","ndex","getInventoryOrderStatusChoices","response","InventoryOrderpayments","emptyInventoryOrderpayment","saveInventoryOrderpayment","addInventoryOrderpayment","inventoryorderpaymentDialog","selectedInventoryOrderpayments","deleteInventoryOrderpaymentDialog","deleteInventoryOrderpaymentsDialog","editInventoryOrderpayment","confirmDeleteInventoryOrderpayment","deleteInventoryOrderpayment","deleteSelectedInventoryOrderpayments","hideDeleteInventoryOrderpaymentDialog","hideDeleteInventoryOrderpaymentsDialog","getInventoryOrderpayments","inventoryorderpaymentDialogFooter","Warehouses","emptyWarehouse","inventory_controller","last_inventory_check_date","saveWarehouse","addWarehouse","warehouseDialog","selectedWarehouses","deleteWarehouseDialog","deleteWarehousesDialog","editWarehouse","confirmDeleteWarehouse","deleteWarehouse","deleteSelectedWarehouses","hideDeleteWarehouseDialog","hideDeleteWarehousesDialog","storagemediaDialogFooter","getInventoryStockItems","getStoragemedias","InventoryStockItems","emptyInventoryStockItem","verified","saveInventoryStockItem","addInventoryStockItem","inventorystockitemDialog","selectedInventoryStockItems","deleteInventoryStockItemDialog","deleteInventoryStockItemsDialog","editInventoryStockItem","confirmDeleteInventoryStockItem","deleteInventoryStockItem","deleteSelectedInventoryStockItems","hideDeleteInventoryStockItemDialog","hideDeleteInventoryStockItemsDialog","onItem","onWarehouse","onLocation","onVerified","inventorystockitemDialogFooter","Storagemedias","emptyStoragemedia","capacity","saveStoragemedia","addStoragemedia","storagemediaDialog","selectedStoragemedias","deleteStoragemediaDialog","deleteStoragemediasDialog","editStoragemedia","confirmDeleteStoragemedia","deleteStoragemedia","deleteSelectedStoragemedias","hideDeleteStoragemediaDialog","hideDeleteStoragemediasDialog","InventoryReceipts","getInventoryReceipts","StockAdjustments","emptyStockAdjustment","warehouse_item","adjustment","saveStockAdjustment","addStockAdjustment","selectedStockAdjustments","stockadjustmentDialog","deleteStockAdjustmentDialog","deleteStockAdjustmentsDialog","editStockAdjustment","confirmDeleteStockAdjustment","deleteStockAdjustment","deleteSelectedStockAdjustments","hideDeleteStockAdjustmentDialog","hideDeleteStockAdjustmentsDialog","getStockAdjustments","stockadjustmentDialogFooter","InventoryStockTakes","emptyInventoryStockTake","adjusted_by","adjustments","saveInventoryStockTake","addInventoryStockTake","inventorystocktakeDialog","selectedInventoryStockTakes","deleteInventoryStockTakeDialog","deleteInventoryStockTakesDialog","editInventoryStockTake","confirmDeleteInventoryStockTake","deleteInventoryStockTake","deleteSelectedInventoryStockTakes","hideDeleteInventoryStockTakeDialog","hideDeleteInventoryStockTakesDialog","onAdjustedBy","getInventoryStockTakes","inventorystocktakeDialogFooter","ActiveSuppliers","DeActivedSuppliers","getDeActivedSuppliers","SupplierAddresses","emptySupplierAddress","saveSupplierAddress","addSupplierAddress","supplieraddressDialog","selectedSupplierAddresses","deleteSupplierAddressDialog","deleteSupplierAddressesDialog","editSupplierAddress","confirmDeleteSupplierAddress","deleteSupplierAddress","deleteSelectedSupplierAddresses","hideDeleteSupplierAddressDialog","hideDeleteSupplierAddressesDialog","getSupplierAddresses","getSupplierAddressTypeChoices","supplieraddressDialogFooter","deleteSupplierAddressesDialogFooter","getRawMaterials","RawMaterials","emptyRawMaterial","unit_purchase_price","minimum_order_level","maximum_stock_level","saveRawMaterial","addRawMaterial","rawmaterialDialog","selectedRawMaterials","deleteRawMaterialDialog","deleteRawMaterialsDialog","editRawMaterial","confirmDeleteRawMaterial","deleteRawMaterial","deleteSelectedRawMaterials","hideDeleteRawMaterialDialog","hideDeleteRawMaterialsDialog","onUnit","rawmaterialDialogFooter","getEquipments","Equipments","emptyEquipment","saveEquipment","addEquipment","equipmentDialog","selectedEquipments","deleteEquipmentDialog","deleteEquipmentsDialog","editEquipment","confirmDeleteEquipment","deleteEquipment","deleteSelectedEquipments","hideDeleteEquipmentDialog","hideDeleteEquipmentsDialog","equipmentDialogFooter","Consumables","emptyConsumable","saveConsumable","addConsumable","consumableDialog","selectedConsumables","deleteConsumableDialog","deleteConsumablesDialog","editConsumable","confirmDeleteConsumable","deleteConsumable","deleteSelectedConsumables","hideDeleteConsumableDialog","hideDeleteConsumablesDialog","getConsumables","consumableDialogFooter","FullyReceivedAndTotalPaidForOrders","getFullyReceivedAndTotalPaidForOrders","FullyReceivedTotalPaidForAndVerifiedOrders","getFullyReceivedTotalPaidForAndVerifiedOrders","CreditNotes","getCreditNotes","Payments","cashier","method","cash","savePayment","addPayment","selectedPayments","paymentDialog","editPayment","onMethod","onInvoice","onCash","getPayments","getCustomerPaymentMethodsChoices","getCashDrawers","getInvoices","paymentDialogFooter","Receipts","getReceipts","InvoiceLines","getInvoiceLines","getSalesGroupsPricingDiscounts","SalesGroupsPricingDiscounts","SalesGroupsPricingDiscountForm","group_name","product_name","group_discount_rate","addSalesGroupsPricingDiscount","Quotations","getQuotations","UnverifiedInvoices","getUnverifiedInvoices","OverdueInvoices","getOverdueInvoices","VoidedInvoices","getVoidedInvoices","RefundedInvoices","getRefundedInvoices","FullypaidNotYetSalesInvoices","getFullypaidNotYetSalesInvoices","Sales","getSales","getProcessProducts","addProcessProduct","Lines","products","discounts","discount","product","SalesForm","customer","sale_type","terms","ship_from","addInvoice","onCustomer","onInvoiceValidator","onSale","onShipFrom","onCashier","getInvoiceSalesTypesChoices","getInvoiceSalesChoices","UnverifiedProductionProcesses","getUnverifiedProductionProcesses","VerifiedProductionProcesses","getVerifiedProductionProcesses","getManufacturedStockItems","addManufacturedStockItem","ManufacturedStockItems","emptyManufacturedStockItem","saveManufacturedStockItem","manufacturedstockitemDialog","selectedManufacturedStockItems","deleteManufacturedStockItemDialog","deleteManufacturedStockItemsDialog","editManufacturedStockItem","confirmDeleteManufacturedStockItem","deleteManufacturedStockItem","deleteSelectedManufacturedStockItems","hideDeleteManufacturedStockItemDialog","hideDeleteManufacturedStockItemsDialog","manufacturedstockitemDialogFooter","ManufacturedStockItemForm","getProcessMachines","ProcessMachines","selectedProcessMachines","filterMatchMode","filterFunction","filterElement","getProcessMachineGroups","ProcessMachineGroups","selectedProcessGroups","selectedProcessgroups","Machines","EquipmentOptions","machines","date_commissioned","format","ProcessMachineGroupForm","addProcessMachineGroup","addShift","getManufacturingTeams","addManufacturingTeam","Shifts","emptyShift","team","supervisor","machine","saveShift","shiftDialog","selectedShifts","deleteShiftDialog","deleteShiftsDialog","editShift","confirmDeleteShifts","deleteShift","deleteSelectedShifts","hideDeleteShiftDialog","hideDeleteShiftsDialog","onTeam","onSupervisor","onMachine","getShifts","shiftDialogFooter","ShiftForm","ShiftScheduleForm","addShiftSchedule","getProcessRates","addProcessRate","emptyProcessRate","unit_time","saveProcessRate","processrateDialog","selectedProcessRates","deleteProcessRateDialog","deleteProcessRatesDialog","editProcessRate","confirmDeleteProcessRate","deleteProcessRate","deleteSelectedProcessRates","hideDeleteProcessRateDialog","hideDeleteProcessRatesDialog","onUnitTime","processrateDialogFooter","ProcessRateForm","Ingridients","ingridients","locations","raw_material","ProductionProcessForm","process_equipment","duration","addProcess","onRate","onEquipment","onChoices","getManufacturingProcessChoices","ProductionOrders","selectedProductionorders","getProductionOrders","getManufacturingPersonels","addManufacturingPersonel","ManufacturingTeams","emptyManufacturingTeam","members","saveManufacturingTeam","manufacturingteamDialog","selectedManufacturingTeams","deleteManufacturingTeamDialog","deleteManufacturingTeamsDialog","editManufacturingTeam","confirmDeleteManufacturingTeam","deleteManufacturingTeam","deleteSelectedManufacturingTeams","hideDeleteManufacturingTeamDialog","hideDeleteManufacturingTeamsDialog","onMembers","manufacturingteamDialogFooter","ManufacturingTeamForm","ManufacturingPersonels","emptyManufacturingPersonel","is_manager","can_authorize_equipment_requisitions","can_authorize_consumables_requisitions","saveManufacturingPersonel","manufacturingpersonelDialog","selectedManufacturingPersonels","deleteManufacturingPersonelDialog","deleteManufacturingPersonelsDialog","editManufacturingPersonel","confirmDeleteManufacturingPersonel","deleteManufacturingPersonel","deleteSelectedManufacturingPersonels","hideDeleteManufacturingPersonelDialog","hideDeleteManufacturingPersonelsDialog","handleIsManger","handleEquipment","handleConsumables","manufacturingpersonelDialogFooter","ManufacturingPersonelForm","ProcessProducts","emptyProcessProduct","finished_goods","unit_price","saveProcessProduct","processproductDialog","selectedProcessProducts","deleteProcessProductDialog","deleteProcessProductsDialog","editProcessProduct","confirmDeleteProcessProduct","deleteProcessProduct","deleteSelectedProcessProducts","hideDeleteProcessProductDialog","hideDeleteProcessProductsDialog","handleFinished","processproductDialogFooter","ProcessProductForm","onlocation","processedproductstockstatuschoices","addWasteGenerationReport","WasteGenerationReports","emptyWasteGenerationReport","saveWasteGenerationReport","wastegenerationreportDialog","selectedWasteGenerationReports","deleteWasteGenerationReportDialog","deleteWasteGenerationReportsDialog","editWasteGenerationReport","deleteWasteGenerationReport","deleteSelectedWasteGenerationReports","hideDeleteWasteGenerationReportDialog","hideDeleteWasteGenerationReportsDialog","onProduct","getWasteGenerationReports","wastegenerationreportDialogFooter","WasteGenerationReportForm","wastereportgeneration","ProcessedProductStockReceipts","selectedProcessedProductStockReceipts","getProcessedProductStockReceipts","ProcessedProductStockReceiptLine","ProductOptions","ProcessedProductStockReceipt","received_by","receive_date","addProcessedProductStockReceipt","onProcess","getProductionProcesses","addProcessedProductStockAdjustment","getProcessedProductStockTakes","ProcessedProductStockAdjustments","emptyProcessedProductStockAdjustment","inventory_check","saveProcessedProductStockAdjustment","processedproductstockadjustmentDialog","selectedProcessedProductStockAdjustments","deleteProcessedProductStockAdjustmentDialog","deleteProcessedProductStockAdjustmentsDialog","editProcessedProductStockAdjustment","confirmDeleteProcessedProductStockAdjustment","deleteProcessedProductStockAdjustment","deleteSelectedProcessedProductStockAdjustments","hideDeleteProcessedProductStockAdjustmentDialog","hideDeleteProcessedProductStockAdjustmentsDialog","onWarehouseItem","onInventoryCheck","getProcessedProductStockAdjustments","processedproductstockadjustmentDialogFooter","ProcessedProductStockAdjustmentForm","ProcessedProductStockTakes","selectedProcessedProductStockTakes","ProcessedProductStockTakeForm","addProcessedProductStockTake","Alerts","prevProps","error","alert","message","account_type","initial_balance","is_contra","pricing_method","direct_price","margin","markup","sku","review_needed","updated","product_component","maximum_stock_leve","purchase_order_number","draft","entries","shipping_cost_entries","inventory_product","product_list","non_field_errors","taxDeleted","success","withAlert","alertOptions","timeout","position","App","template","AlertTemplate","Alert","path","component","ShiftSchedules","ProcessRates","ProcessedProductStockReceiptForm","StorageMedias","ScrollToTop","scrollTo","children","withRouter","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.438c9eed.chunk.js","sourcesContent":["import { GET_ACCOUNT_TYPES_CATEGORY_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   accounttypescategorychoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNT_TYPES_CATEGORY_CHOICES:\r\n            return {\r\n                ...state,\r\n                accounttypescategorychoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ACCOUNT_TYPES_CLASSIFICATION_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   accounttypesclassificationchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNT_TYPES_CLASSIFICATION_CHOICES:\r\n            return {\r\n                ...state,\r\n                accounttypesclassificationchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ASSETS_DEPRECIATION_METHOD_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   assetsdepriciationmethodchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ASSETS_DEPRECIATION_METHOD_CHOICES:\r\n            return {\r\n                ...state,\r\n                assetsdepriciationmethodchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ASSET_TYPES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   assettypeschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ASSET_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                assettypeschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ACCOUNT_TYPE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   accounttypechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNT_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                accounttypechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BILL_FREQUENCY_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   billfrequencychoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILL_FREQUENCY_CHOICES:\r\n            return {\r\n                ...state,\r\n                billfrequencychoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   accountbalancesheetcategorieschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountbalancesheetcategorieschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INTEREST_INTERVAL_ACCOUNT_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   interestintervalaccountchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INTEREST_INTERVAL_ACCOUNT_CHOICES:\r\n            return {\r\n                ...state,\r\n                interestintervalaccountchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ACCOUNT_INTEREST_METHOD_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   accountinterestmethodchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNT_INTEREST_METHOD_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountinterestmethodchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_VALUATION_PERIOD_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventoryvaluationperiodchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_VALUATION_PERIOD_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventoryvaluationperiodchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_VALUATION_METHODS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventoryvaluationmethodschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_VALUATION_METHODS_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventoryvaluationmethodschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_CHECK_FREQUENCY_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventorycheckfrequencychoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_CHECK_FREQUENCY_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventorycheckfrequencychoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_CHECK_DATE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventorycheckdatechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_CHECK_DATE_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventorycheckdatechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_UNIT_OF_MEASURE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   unitofmeasurechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UNIT_OF_MEASURE_CHOICES:\r\n            return {\r\n                ...state,\r\n                unitofmeasurechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_CUSTOMER_ADDRESS_TYPE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   customeraddresstypechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CUSTOMER_ADDRESS_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                customeraddresstypechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEES_ATTENDANCE_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeesattendancestatuschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEES_ATTENDANCE_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeesattendancestatuschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEES_TYPE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeetypechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEES_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeestypechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BILL_PAYMENT_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   billpaymentstatuschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILL_PAYMENT_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                billpaymentstatuschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_SUPPLIER_ADDRESS_TYPE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   supplieraddresstypechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SUPPLIER_ADDRESS_TYPE_CHOICES:\r\n            return {\r\n                ...state,\r\n                supplieraddresstypechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_SUPPLIER_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   supplierstatuschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SUPPLIER_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                supplierstatuschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_CUSTOMER_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   customerstatuschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CUSTOMER_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                customerstatuschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BILLING_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   billingchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILLING_CHOICES:\r\n            return {\r\n                ...state,\r\n                billingchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BILL_PAYMENT_METHODS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   billpaymentmethodschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILL_PAYMENT_METHODS_CHOICES:\r\n            return {\r\n                ...state,\r\n                billpaymentmethodschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVOICE_SALES_TYPES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   invoicesalestypeschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVOICE_SALES_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                invoicesalestypeschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_ORDER_PAYMENT_METHODS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventoryorderpaymentmethodschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_ORDER_PAYMENT_METHODS_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventoryorderpaymentmethodschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_MANUFACTURING_SHIFT_TIME_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   manufactringshifttimechoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_MANUFACTURING_SHIFT_TIME_CHOICES:\r\n            return {\r\n                ...state,\r\n                manufactringshifttimechoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EVENT_PRIORITY_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   eventprioritychoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EVENT_PRIORITY_CHOICES:\r\n            return {\r\n                ...state,\r\n                eventprioritychoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EVENT_PARTICIPANT_TYPES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   eventparticipanttypeschoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EVENT_PARTICIPANT_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                eventparticipanttypeschoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EVENT_REMINDER_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   eventreminderchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EVENT_REMINDER_CHOICES:\r\n            return {\r\n                ...state,\r\n                eventreminderchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EVENT_TIME_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   eventtimechoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EVENT_TIME_CHOICES:\r\n            return {\r\n                ...state,\r\n                eventtimechoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EVENT_ICON_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   eventiconchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EVENT_ICON_CHOICES:\r\n            return {\r\n                ...state,\r\n                eventiconchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EVENT_REPEAT_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   eventrepeatchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EVENT_REPEAT_CHOICES:\r\n            return {\r\n                ...state,\r\n                eventrepeatchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_PAYROLL_TAX_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeepayrolltaxchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYROLL_TAX_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeepayrolltaxchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { GET_NATURE_OF_EMPLOYMENT_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   natureofemploymentchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_NATURE_OF_EMPLOYMENT_CHOICES:\r\n            return {\r\n                ...state,\r\n                natureofemploymentchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_YEAR_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeeyearchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_YEAR_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeeyearchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_TIMESHEET_MONTH_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeetimesheetmonthchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_TIMESHEET_MONTH_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeetimesheetmonthchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_PAYSLIP_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeepayslipstatuschoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYSLIP_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeepayslipstatuschoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_PAYROLL_DATE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeepayrolldatechoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYROLL_DATE_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeepayrolldatechoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_DEDUCTION_METHODS } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeedeductionmethods: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_DEDUCTION_METHODS:\r\n            return {\r\n                ...state,\r\n                employeedeductionmethods: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_PAY_FREQUENCIES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeepayfrequencies: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAY_FREQUENCIES:\r\n            return {\r\n                ...state,\r\n                employeepayfrequencies: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_LUNCH_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeelunchchoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_LUNCH_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeelunchchoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_LEAVE_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeeleavestatuschoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_LEAVE_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeeleavestatuschoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_LEAVE_CATEGORY_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeeleavecategorychoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_LEAVE_CATEGORY_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeeleavecategorychoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEE_CATEGORY_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeecategorychoices: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_CATEGORY_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeecategorychoices: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYMENT_CONTRACT_TERMINATION_REASONS } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employmentcontractterminationreasons: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYMENT_CONTRACT_TERMINATION_REASONS:\r\n            return {\r\n                ...state,\r\n                employmentcontractterminationreasons: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ACCOUNTING_PERIODS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   accountingperiodschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTING_PERIODS_CHOICES:\r\n            return {\r\n                ...state,\r\n                accountingperiodschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_JOURNAL_ENTRY_TYPES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   journalentrytypeschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_JOURNAL_ENTRY_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                journalentrytypeschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEES_GENDER_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   employeesgenderchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEES_GENDER_CHOICES:\r\n            return {\r\n                ...state,\r\n                employeesgenderchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_TYPES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventorytypeschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventorytypeschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PRODUCT_COMPONENT_PRICING_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   productcomponentpricingchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PRODUCT_COMPONENT_PRICING_CHOICES:\r\n            return {\r\n                ...state,\r\n                productcomponentpricingchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EQUIPMENT_COMPONENT_CONDITION_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   equipmentcomponentconditionchoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EQUIPMENT_COMPONENT_CONDITION_CHOICES:\r\n            return {\r\n                ...state,\r\n                equipmentcomponentconditionchoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVENTORY_ORDER_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventoryorderstatuschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_ORDER_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                inventoryorderstatuschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVOICE_SALES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   invoicesaleschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVOICE_SALES_CHOICES:\r\n            return {\r\n                ...state,\r\n                invoicesaleschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVOICE_LINE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   invoicelinechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVOICE_LINE_CHOICES:\r\n            return {\r\n                ...state,\r\n                invoicelinechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_MANUFACTURING_PROCESS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   manufacturingprocesschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_MANUFACTURING_PROCESS_CHOICES:\r\n            return {\r\n                ...state,\r\n                manufacturingprocesschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_CUSTOMER_PAYMENT_METHODS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   customerpaymentmethodschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CUSTOMER_PAYMENT_METHODS_CHOICES:\r\n            return {\r\n                ...state,\r\n                customerpaymentmethodschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROCESS_RATE_UNIT_TIME_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   processrateunittimechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESS_RATE_UNIT_TIME_CHOICES:\r\n            return {\r\n                ...state,\r\n                processrateunittimechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_MANUFACTURING_PRODUCT_TYPES_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   manufacturingproducttypeschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_MANUFACTURING_PRODUCT_TYPES_CHOICES:\r\n            return {\r\n                ...state,\r\n                manufacturingproducttypeschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BILL_OF_MATERIALS_LINE_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   billofmaterialslinechoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILL_OF_MATERIALS_LINE_CHOICES:\r\n            return {\r\n                ...state,\r\n                billofmaterialslinechoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROCESSED_PRODUCTS_STOCK_STATUS_CHOICES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   processedproductsstockstatuschoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESSED_PRODUCTS_STOCK_STATUS_CHOICES:\r\n            return {\r\n                ...state,\r\n                processedproductsstockstatuschoices : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_ACCOUNT,\r\n    GET_ACCOUNTS ,\r\n    DELETE_ACCOUNT,\r\n    GET_ACCOUNT,\r\n    EDIT_ACCOUNT,\r\n\r\n\r\n} from '../types/accountTypes';\r\n\r\nconst initialState = {\r\n    accounts: [],\r\n    account: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTS:\r\n            return {\r\n                ...state,\r\n                accounts: action.payload\r\n            };\r\n        case DELETE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: state.accounts.filter(account=> account.id !== action.payload)\r\n            };\r\n        case ADD_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: [...state.accounts, action.payload]\r\n            }\r\n        case GET_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account:action.payload\r\n                };\r\n        case EDIT_ACCOUNT:\r\n            const arrayList = state.accounts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                accounts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_INTEREST_BEARING_ACCOUNT,\r\n        GET_INTEREST_BEARING_ACCOUNTS,\r\n        DELETE_INTEREST_BEARING_ACCOUNT,\r\n        GET_INTEREST_BEARING_ACCOUNT,\r\n        EDIT_INTEREST_BEARING_ACCOUNT\r\n    } from '../types/interestbearingaccountTypes';\r\n\r\nconst initialState = {\r\n    interestbearingaccounts: [],\r\n    interestbearingaccount: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INTEREST_BEARING_ACCOUNTS:\r\n            return {\r\n                ...state,\r\n                interestbearingaccounts: action.payload\r\n            };\r\n        case DELETE_INTEREST_BEARING_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                interestbearingaccount: state.interestbearingaccounts.filter(interestbearingaccount=> interestbearingaccount.id !== action.payload)\r\n            };\r\n        case ADD_INTEREST_BEARING_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                interestbearingaccount: [...state.interestbearingaccounts, action.payload]\r\n            }\r\n        case GET_INTEREST_BEARING_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                interestbearingaccount:action.payload\r\n                };\r\n        case EDIT_INTEREST_BEARING_ACCOUNT:\r\n            const arrayList = state.interestbearingaccounts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                interestbearingaccounts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_JOURNALS,\r\n        DELETE_JOURNAL,\r\n        GET_JOURNAL\r\n    } from '../types/journalTypes';\r\n\r\nconst initialState = {\r\n    journals: [],\r\n    journal: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_JOURNALS:\r\n            return {\r\n                ...state,\r\n                journals: action.payload\r\n            };\r\n        case DELETE_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal: state.journals.filter(journal=> journal.id !== action.payload)\r\n            };\r\n        case GET_JOURNAL:\r\n            return {\r\n                ...state,\r\n                journal:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_LEDGERS,\r\n        DELETE_LEDGER,\r\n        GET_LEDGER,\r\n        EDIT_LEDGER,\r\n        ADD_LEDGER\r\n    } from '../types/ledgerTypes';\r\n\r\nconst initialState = {\r\n    ledgers: [],\r\n    ledger: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_LEDGERS:\r\n            return {\r\n                ...state,\r\n                ledgers: action.payload\r\n            };\r\n        case DELETE_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledgers.filter(ledger=> ledger.id !== action.payload)\r\n            };\r\n        case GET_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger:action.payload\r\n                };\r\n        case ADD_LEDGER:\r\n            return {\r\n                ...state,\r\n                ledger: [...state.ledgers, action.payload]\r\n            };\r\n        case EDIT_LEDGER:\r\n            const arrayList = state.ledgers;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                ledgers: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_ACCOUNTING_POST,\r\n        GET_ACCOUNTING_POSTS,\r\n        DELETE_ACCOUNTING_POST,\r\n        GET_ACCOUNTING_POST,\r\n        EDIT_ACCOUNTING_POST\r\n    } from '../types/accountingpostTypes';\r\n\r\nconst initialState = {\r\n    accountingposts: [],\r\n    accountingpost: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTING_POSTS:\r\n            return {\r\n                ...state,\r\n                accountingposts: action.payload\r\n            };\r\n        case DELETE_ACCOUNTING_POST:\r\n            return {\r\n                ...state,\r\n                accountingpost: state.accountingposts.filter(accountingpost=> accountingpost.id !== action.payload)\r\n            };\r\n        case ADD_ACCOUNTING_POST:\r\n            return {\r\n                ...state,\r\n                accountingpost: [...state.accountingposts, action.payload]\r\n            }\r\n        case GET_ACCOUNTING_POST:\r\n            return {\r\n                ...state,\r\n                accountingpost:action.payload\r\n                };\r\n        case EDIT_ACCOUNTING_POST:\r\n            const arrayList = state.accountingposts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                accountingposts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_WORKBOOK,\r\n        GET_WORKBOOKS,\r\n        DELETE_WORKBOOK,\r\n        GET_WORKBOOK,\r\n        EDIT_WORKBOOK\r\n    } from '../types/workbookTypes';\r\n\r\nconst initialState = {\r\n    workbooks: [],\r\n    workbook: [],\r\n    loading: false\r\n\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_WORKBOOKS:\r\n            return {\r\n                ...state,\r\n                workbooks: action.payload\r\n            };\r\n        case DELETE_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: state.workbooks.filter(workbook=> workbook.id !== action.payload)\r\n            };\r\n        case ADD_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook: [...state.workbooks, action.payload]\r\n            }\r\n        case GET_WORKBOOK:\r\n            return {\r\n                ...state,\r\n                workbook:action.payload\r\n                };\r\n        case EDIT_WORKBOOK:\r\n            const arrayList = state.workbooks;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                workbooks: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_ACCOUNTING_ADJUSTMENT,\r\n        GET_ACCOUNTING_ADJUSTMENTS,\r\n        DELETE_ACCOUNTING_ADJUSTMENT,\r\n        GET_ACCOUNTING_ADJUSTMENT,\r\n        EDIT_ACCOUNTING_ADJUSTMENT\r\n    } from '../types/accountingadjustmentTypes';\r\n\r\nconst initialState = {\r\n    accountingadjustments: [],\r\n    accountingadjustment: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACCOUNTING_ADJUSTMENTS:\r\n            return {\r\n                ...state,\r\n                accountingadjustments: action.payload\r\n            };\r\n        case DELETE_ACCOUNTING_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                accountingadjustment: state.accountingadjustments.filter(accountingadjustment=> accountingadjustment.id !== action.payload)\r\n            };\r\n        case ADD_ACCOUNTING_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                accountingadjustment: [...state.accountingadjustments, action.payload]\r\n            }\r\n        case GET_ACCOUNTING_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                accountingadjustment:action.payload\r\n                };\r\n        case EDIT_ACCOUNTING_ADJUSTMENT:\r\n            const arrayList = state.accountingadjustments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                accountingadjustments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_DEBITS,\r\n        DELETE_DEBIT,\r\n        GET_DEBIT\r\n    } from '../types/debitTypes';\r\n\r\nconst initialState = {\r\n    debits: [],\r\n    debit: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DEBITS:\r\n            return {\r\n                ...state,\r\n                debits: action.payload\r\n            };\r\n        case DELETE_DEBIT:\r\n            return {\r\n                ...state,\r\n                debit: state.debits.filter(debit=> debit.id !== action.payload)\r\n            };\r\n        case GET_DEBIT:\r\n            return {\r\n                ...state,\r\n                debit:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_CREDITS,\r\n        DELETE_CREDIT,\r\n        GET_CREDIT\r\n    } from '../types/creditTypes';\r\n\r\nconst initialState = {\r\n    credits: [],\r\n    credit: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CREDITS:\r\n            return {\r\n                ...state,\r\n                credits: action.payload\r\n            };\r\n        case DELETE_CREDIT:\r\n            return {\r\n                ...state,\r\n                credit: state.credits.filter(credit=> credit.id !== action.payload)\r\n            };\r\n        case GET_CREDIT:\r\n            return {\r\n                ...state,\r\n                credit:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_FULLY_PAID_NOT_VERIFIED_BILLS,\r\n        DELETE_FULLY_PAID_NOT_VERIFIED_BILL,\r\n        GET_FULLY_PAID_NOT_VERIFIED_BILL\r\n    } from '../types/fullypaidnotverifiedbillTypes';\r\n\r\nconst initialState = {\r\n    fullypaidnotverifiedbills: [],\r\n    fullypaidnotverifiedbill: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_FULLY_PAID_NOT_VERIFIED_BILLS:\r\n            return {\r\n                ...state,\r\n                fullypaidnotverifiedbills: action.payload\r\n            };\r\n        case DELETE_FULLY_PAID_NOT_VERIFIED_BILL:\r\n            return {\r\n                ...state,\r\n                fullypaidnotverifiedbill: state.fullypaidnotverifiedbills.filter(fullypaidnotverifiedbill=> fullypaidnotverifiedbill.id !== action.payload)\r\n            };\r\n        case GET_FULLY_PAID_NOT_VERIFIED_BILL:\r\n            return {\r\n                ...state,\r\n                fullypaidnotverifiedbill:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_FULLY_PAID_BILLS,\r\n        DELETE_FULLY_PAID_BILL,\r\n        GET_FULLY_PAID_BILL\r\n    } from '../types/fullypaidbillTypes';\r\n\r\nconst initialState = {\r\n    fullypaidbills: [],\r\n    fullypaidbill: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_FULLY_PAID_BILLS:\r\n            return {\r\n                ...state,\r\n                fullypaidbills: action.payload\r\n            };\r\n        case DELETE_FULLY_PAID_BILL:\r\n            return {\r\n                ...state,\r\n                fullypaidbill: state.fullypaidbills.filter(fullypaidbill=> fullypaidbill.id !== action.payload)\r\n            };\r\n        case GET_FULLY_PAID_BILL:\r\n            return {\r\n                ...state,\r\n                fullypaidbill:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRIES,\r\n        DELETE_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY,\r\n        GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY\r\n    } from '../types/unpostedandunadjustedjournalentryTypes';\r\n\r\nconst initialState = {\r\n    unpostedandunadjustedjournalentries: [],\r\n    unpostedandunadjustedjournalentry: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRIES:\r\n            return {\r\n                ...state,\r\n                unpostedandunadjustedjournalentries: action.payload\r\n            };\r\n        case DELETE_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                unpostedandunadjustedjournalentry: state.unpostedandunadjustedjournalentries.filter(unpostedandunadjustedjournalentry=> unpostedandunadjustedjournalentry.id !== action.payload)\r\n            };\r\n        case GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                unpostedandunadjustedjournalentry:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_UNADJUSTED_JOURNAL_ENTRIES,\r\n        DELETE_UNADJUSTED_JOURNAL_ENTRY,\r\n        GET_UNADJUSTED_JOURNAL_ENTRY\r\n    } from '../types/unadjustedjournalentryTypes';\r\n\r\nconst initialState = {\r\n    unadjustedjournalentries: [],\r\n    unadjustedjournalentry: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UNADJUSTED_JOURNAL_ENTRIES:\r\n            return {\r\n                ...state,\r\n                unadjustedjournalentries: action.payload\r\n            };\r\n        case DELETE_UNADJUSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                unadjustedjournalentry: state.unadjustedjournalentries.filter(unadjustedjournalentry=> unadjustedjournalentry.id !== action.payload)\r\n            };\r\n        case GET_UNADJUSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                unadjustedjournalentry:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_UNPOSTED_JOURNAL_ENTRIES,\r\n        DELETE_UNPOSTED_JOURNAL_ENTRY,\r\n        GET_UNPOSTED_JOURNAL_ENTRY\r\n    } from '../types/unpostedjournalentryTypes';\r\n\r\nconst initialState = {\r\n    unpostedjournalentries: [],\r\n    unpostedjournalentry: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UNPOSTED_JOURNAL_ENTRIES:\r\n            return {\r\n                ...state,\r\n                unpostedjournalentries: action.payload\r\n            };\r\n        case DELETE_UNPOSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                unpostedjournalentry: state.unpostedjournalentries.filter(unpostedjournalentry=> unpostedjournalentry.id !== action.payload)\r\n            };\r\n        case GET_UNPOSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                unpostedjournalentry:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_POSTED_JOURNAL_ENTRIES,\r\n        DELETE_POSTED_JOURNAL_ENTRY,\r\n        GET_POSTED_JOURNAL_ENTRY\r\n    } from '../types/postedjournalentryTypes';\r\n\r\nconst initialState = {\r\n    postedjournalentries: [],\r\n    postedjournalentry: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_POSTED_JOURNAL_ENTRIES:\r\n            return {\r\n                ...state,\r\n                postedjournalentries: action.payload\r\n            };\r\n        case DELETE_POSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                postedjournalentry: state.postedjournalentries.filter(postedjournalentry=> postedjournalentry.id !== action.payload)\r\n            };\r\n        case GET_POSTED_JOURNAL_ENTRY:\r\n            return {\r\n                ...state,\r\n                postedjournalentry:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_IN_ACTIVE_ACCOUNTS,\r\n        DELETE_IN_ACTIVE_ACCOUNT,\r\n        GET_IN_ACTIVE_ACCOUNT\r\n    } from '../types/inactiveaccountTypes';\r\n\r\nconst initialState = {\r\n    inactiveaccounts: [],\r\n    inactiveaccount: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_IN_ACTIVE_ACCOUNTS:\r\n            return {\r\n                ...state,\r\n                inactiveaccounts: action.payload\r\n            };\r\n        case DELETE_IN_ACTIVE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                inactiveaccount: state.inactiveaccounts.filter(inactiveaccount=> inactiveaccount.id !== action.payload)\r\n            };\r\n        case GET_IN_ACTIVE_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                inactiveaccount:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_ASSET,\r\n        GET_ASSETS,\r\n        DELETE_ASSET,\r\n        GET_ASSET,\r\n        EDIT_ASSET\r\n    } from '../types/assetTypes';\r\n\r\nconst initialState = {\r\n    assets: [],\r\n    asset: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ASSETS:\r\n            return {\r\n                ...state,\r\n                assets: action.payload\r\n            };\r\n        case DELETE_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: state.assets.filter(asset=> asset.id !== action.payload)\r\n            };\r\n        case ADD_ASSET:\r\n            return {\r\n                ...state,\r\n                asset: [...state.assets, action.payload]\r\n            }\r\n        case GET_ASSET:\r\n            return {\r\n                ...state,\r\n                asset:action.payload\r\n                };\r\n        case EDIT_ASSET:\r\n            const arrayList = state.assets;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                assets: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_TAX,\r\n        GET_TAXES,\r\n        DELETE_TAX,\r\n        EDIT_TAX\r\n    } from '../types/taxTypes';\r\n\r\nconst initialState = {\r\n    taxes: [],\r\n    tax: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_TAXES:\r\n            return {\r\n                ...state,\r\n                taxes: action.payload\r\n            };\r\n        case DELETE_TAX:\r\n            return {\r\n                ...state,\r\n                tax: state.taxes.filter(tax=> tax.id !== action.payload)\r\n            };\r\n        case ADD_TAX:\r\n            return {\r\n                ...state,\r\n                tax: [...state.taxes, action.payload]\r\n            };\r\n        case EDIT_TAX:\r\n            const arrayList = state.taxes;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                taxes: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_CURRENCY,\r\n        GET_CURRENCIES,\r\n        EDIT_CURRENCY,\r\n        DELETE_CURRENCY\r\n    } from '../types/currencyTypes';\r\n\r\nconst initialState = {\r\n    currencies: [],\r\n    currency: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CURRENCIES:\r\n            return {\r\n                ...state,\r\n                currencies: action.payload\r\n            };\r\n        case DELETE_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: state.currencies.filter(currency=> currency.id !== action.payload)\r\n            };\r\n        case ADD_CURRENCY:\r\n            return {\r\n                ...state,\r\n                currency: [...state.currencies, action.payload]\r\n            };\r\n        case EDIT_CURRENCY:\r\n            const arrayList = state.currencies;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                currencies: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_BILL,\r\n        GET_BILLS,\r\n        DELETE_BILL,\r\n        GET_BILL\r\n    } from '../types/billTypes';\r\n\r\nconst initialState = {\r\n    bills: [],\r\n    bill: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILLS:\r\n            return {\r\n                ...state,\r\n                bills: action.payload\r\n            };\r\n        case DELETE_BILL:\r\n            return {\r\n                ...state,\r\n                bill: state.bills.filter(bill=> bill.id !== action.payload)\r\n            };\r\n        case ADD_BILL:\r\n            return {\r\n                ...state,\r\n                bill: [...state.bills, action.payload]\r\n            }\r\n        case GET_BILL:\r\n            return {\r\n                ...state,\r\n                bill:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_BILL_PAYMENTS,\r\n        DELETE_BILL_PAYMENT,\r\n        ADD_BILL_PAYMENT,\r\n        GET_BILL_PAYMENT,\r\n        EDIT_BILL_PAYMENT\r\n    } from '../types/billpaymentTypes';\r\n\r\nconst initialState = {\r\n    billpayments: [],\r\n    billpayment: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BILL_PAYMENTS:\r\n            return {\r\n                ...state,\r\n                billpayments: action.payload\r\n            };\r\n        case DELETE_BILL_PAYMENT:\r\n            return {\r\n                ...state,\r\n                billpayment: state.billpayments.filter(billpayment=> billpayment.id !== action.payload)\r\n            };\r\n        case ADD_BILL_PAYMENT:\r\n            return {\r\n                ...state,\r\n                billpayment: [...state.billpayments, action.payload]\r\n            }\r\n        case GET_BILL_PAYMENT:\r\n            return {\r\n                ...state,\r\n                billpayment:action.payload\r\n                };\r\n        case EDIT_BILL_PAYMENT:\r\n            const arrayList = state.billpayments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                billpayments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_UNVERIFIED_PRODUCTION_PROCESSES,\r\n        DELETE_UNVERIFIED_PRODUCTION_PROCESS,\r\n        GET_UNVERIFIED_PRODUCTION_PROCESS\r\n    } from '../types/unverifiedproductionprocessTypes';\r\nimport { ADD_PROCESS } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n    unverifiedproductionprocesses: [],\r\n    unverifiedproductionprocess: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UNVERIFIED_PRODUCTION_PROCESSES:\r\n            return {\r\n                ...state,\r\n                unverifiedproductionprocesses: action.payload\r\n            };\r\n        case DELETE_UNVERIFIED_PRODUCTION_PROCESS:\r\n            return {\r\n                ...state,\r\n                unverifiedproductionprocess: state.unverifiedproductionprocesses.filter(unverifiedproductionprocess=> unverifiedproductionprocess.id !== action.payload)\r\n            };\r\n        case ADD_PROCESS:\r\n            return {\r\n                ...state,\r\n                process: [...state.unverifiedproductionprocess, action.payload]\r\n            };\r\n        case GET_UNVERIFIED_PRODUCTION_PROCESS:\r\n            return {\r\n                ...state,\r\n                unverifiedproductionprocess:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_VERIFIED_PRODUCTION_PROCESSES,\r\n        DELETE_VERIFIED_PRODUCTION_PROCESS,\r\n        GET_VERIFIED_PRODUCTION_PROCESS\r\n    } from '../types/verifiedproductionprocessTypes';\r\n\r\nconst initialState = {\r\n    verifiedproductionprocesses: [],\r\n    verifiedproductionprocess: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_VERIFIED_PRODUCTION_PROCESSES:\r\n            return {\r\n                ...state,\r\n                verifiedproductionprocesses: action.payload\r\n            };\r\n        case DELETE_VERIFIED_PRODUCTION_PROCESS:\r\n            return {\r\n                ...state,\r\n                verifiedproductionprocess: state.verifiedproductionprocesses.filter(verifiedproductionprocess=> verifiedproductionprocess.id !== action.payload)\r\n            };\r\n        case GET_VERIFIED_PRODUCTION_PROCESS:\r\n            return {\r\n                ...state,\r\n                verifiedproductionprocess:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROCESS_MACHINES, GET_PROCESS_MACHINE, DELETE_PROCESS_MACHINE, ADD_PROCESS_MACHINE  } from \"../types/processmachineTypes\";\r\n\r\nconst initialState = {\r\n    processmachines: [],\r\n    processmachine: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESS_MACHINES:\r\n            return {\r\n                ...state,\r\n                processmachines: action.payload\r\n            };\r\n        case DELETE_PROCESS_MACHINE:\r\n            return {\r\n                ...state,\r\n                processmachine: state.processmachines.filter(processmachine => processmachine.id !== action.payload)\r\n            };\r\n        case ADD_PROCESS_MACHINE:\r\n            return {\r\n                ...state,\r\n                processmachine: [...state.processmachines, action.payload]\r\n            };\r\n        case GET_PROCESS_MACHINE:\r\n            return {\r\n                ...state,\r\n                processmachine: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROCESS_MACHINE_GROUPS, GET_PROCESS_MACHINE_GROUP, DELETE_PROCESS_MACHINE_GROUP, ADD_PROCESS_MACHINE_GROUP  } from \"../types/processmachinegroupTypes\";\r\n\r\nconst initialState = {\r\n    processmachinegroups: [],\r\n    processmachinegroup: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESS_MACHINE_GROUPS:\r\n            return {\r\n                ...state,\r\n                processmachinegroups: action.payload\r\n            };\r\n        case DELETE_PROCESS_MACHINE_GROUP:\r\n            return {\r\n                ...state,\r\n                processmachinegroup: state.processmachinegroups.filter(processmachinegroup => processmachinegroup.id !== action.payload)\r\n            };\r\n        case ADD_PROCESS_MACHINE_GROUP:\r\n            return {\r\n                ...state,\r\n                processmachinegroup: [...state.processmachinegroups, action.payload]\r\n            };\r\n        case GET_PROCESS_MACHINE_GROUP:\r\n            return {\r\n                ...state,\r\n                processmachinegroup: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_SHIFT, GET_SHIFTS, GET_SHIFT, EDIT_SHIFT, DELETE_SHIFT } from '../types/shiftTypes';\r\n\r\nconst initialState = {\r\n    shifts: [],\r\n    shift: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SHIFTS:\r\n            return {\r\n                ...state,\r\n                shifts: action.payload\r\n            };\r\n        case DELETE_SHIFT:\r\n            return {\r\n                ...state,\r\n                shift: state.shifts.filter(shift=> shift.id !== action.payload)\r\n            };\r\n        case ADD_SHIFT:\r\n            return {\r\n                ...state,\r\n                shift: [...state.shifts, action.payload]\r\n            }\r\n        case GET_SHIFT:\r\n            return {\r\n                ...state,\r\n                shift:action.payload\r\n            };\r\n        case EDIT_SHIFT:\r\n            const arrayList = state.shifts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                shifts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_SHIFT_SCHEDULE, GET_SHIFT_SCHEDULES, EDIT_SHIFT_SCHEDULE, GET_SHIFT_SCHEDULE, DELETE_SHIFT_SCHEDULE } from '../types/shiftscheduleTypes';\r\n\r\nconst initialState = {\r\n    shiftschedules: [],\r\n    shiftschedule: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SHIFT_SCHEDULES:\r\n            return {\r\n                ...state,\r\n                shiftschedules: action.payload\r\n            };\r\n        case DELETE_SHIFT_SCHEDULE:\r\n            return {\r\n                ...state,\r\n                shiftschedule: state.shiftschedules.filter(shiftschedule=> shiftschedule.id !== action.payload)\r\n            };\r\n        case ADD_SHIFT_SCHEDULE:\r\n            return {\r\n                ...state,\r\n                shiftschedule: [...state.shiftschedules, action.payload]\r\n            }\r\n        case GET_SHIFT_SCHEDULE:\r\n            return {\r\n                ...state,\r\n                shiftschedule:action.payload\r\n            };\r\n        case EDIT_SHIFT_SCHEDULE:\r\n            const arrayList = state.shiftschedules;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                shiftschedules: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROCESS_RATES, GET_PROCESS_RATE, EDIT_PROCESS_RATE, DELETE_PROCESS_RATE, ADD_PROCESS_RATE  } from \"../types/processrateTypes\";\r\n\r\nconst initialState = {\r\n    processrates: [],\r\n    processrate: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESS_RATES:\r\n            return {\r\n                ...state,\r\n                processrates: action.payload\r\n            };\r\n        case DELETE_PROCESS_RATE:\r\n            return {\r\n                ...state,\r\n                processrate: state.processrates.filter(processrate => processrate.id !== action.payload)\r\n            };\r\n        case ADD_PROCESS_RATE:\r\n            return {\r\n                ...state,\r\n                processrate: [...state.processrates, action.payload]\r\n            };\r\n        case GET_PROCESS_RATE:\r\n            return {\r\n                ...state,\r\n                processrate: action.payload\r\n            };\r\n        case EDIT_PROCESS_RATE:\r\n            const arrayList = state.processrates;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                processrates: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PRODUCTION_ORDERS, GET_PRODUCTION_ORDER, DELETE_PRODUCTION_ORDER, ADD_PRODUCTION_ORDER  } from \"../types/productionorderTypes\";\r\n\r\nconst initialState = {\r\n    productionorders: [],\r\n    productionorder: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PRODUCTION_ORDERS:\r\n            return {\r\n                ...state,\r\n                productionorders: action.payload\r\n            };\r\n        case DELETE_PRODUCTION_ORDER:\r\n            return {\r\n                ...state,\r\n                productionorder: state.productionorders.filter(productionorder => productionorder.id !== action.payload)\r\n            };\r\n        case ADD_PRODUCTION_ORDER:\r\n            return {\r\n                ...state,\r\n                productionorder: [...state.productionorders, action.payload]\r\n            };\r\n        case GET_PRODUCTION_ORDER:\r\n            return {\r\n                ...state,\r\n                productionorder: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_MANUFACTURING_TEAM, EDIT_MANUFACTURING_TEAM, GET_MANUFACTURING_TEAMS, GET_MANUFACTURING_TEAM, DELETE_MANUFACTURING_TEAM } from '../types/manufacturingteamTypes';\r\n\r\nconst initialState = {\r\n    manufacturingteams: [],\r\n    manufacturingteam: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_MANUFACTURING_TEAMS:\r\n            return {\r\n                ...state,\r\n                manufacturingteams: action.payload\r\n            };\r\n        case DELETE_MANUFACTURING_TEAM:\r\n            return {\r\n                ...state,\r\n                manufacturingteam: state.manufacturingteams.filter(manufacturingteam=> manufacturingteam.id !== action.payload)\r\n            };\r\n        case ADD_MANUFACTURING_TEAM:\r\n            return {\r\n                ...state,\r\n                manufacturingteam: [...state.manufacturingteams, action.payload]\r\n            }\r\n        case GET_MANUFACTURING_TEAM:\r\n            return {\r\n                ...state,\r\n                manufacturingteam:action.payload\r\n            };\r\n        case EDIT_MANUFACTURING_TEAM:\r\n            const arrayList = state.manufacturingteams;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                manufacturingteams: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_MANUFACTURING_PERSONEL, GET_MANUFACTURING_PERSONELS, EDIT_MANUFACTURING_PERSONEL, GET_MANUFACTURING_PERSONEL, DELETE_MANUFACTURING_PERSONEL } from '../types/manufacturingpersonelTypes';\r\n\r\nconst initialState = {\r\n    manufacturingpersonels: [],\r\n    manufacturingpersonel: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_MANUFACTURING_PERSONELS:\r\n            return {\r\n                ...state,\r\n                manufacturingpersonels: action.payload\r\n            };\r\n        case DELETE_MANUFACTURING_PERSONEL:\r\n            return {\r\n                ...state,\r\n                manufacturingpersonel: state.manufacturingpersonels.filter(manufacturingpersonel=> manufacturingpersonel.id !== action.payload)\r\n            };\r\n        case ADD_MANUFACTURING_PERSONEL:\r\n            return {\r\n                ...state,\r\n                manufacturingpersonel: [...state.manufacturingpersonels, action.payload]\r\n            }\r\n        case GET_MANUFACTURING_PERSONEL:\r\n            return {\r\n                ...state,\r\n                manufacturingpersonel:action.payload\r\n            };\r\n        case EDIT_MANUFACTURING_PERSONEL:\r\n            const arrayList = state.manufacturingpersonels;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                manufacturingpersonels: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROCESS_PRODUCTS, GET_PROCESS_PRODUCT, EDIT_PROCESS_PRODUCT, DELETE_PROCESS_PRODUCT, ADD_PROCESS_PRODUCT  } from \"../types/processproductTypes\";\r\n\r\nconst initialState = {\r\n    processproducts: [],\r\n    processproduct: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESS_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                processproducts: action.payload\r\n            };\r\n        case DELETE_PROCESS_PRODUCT:\r\n            return {\r\n                ...state,\r\n                processproduct: state.processproducts.filter(processproduct => processproduct.id !== action.payload)\r\n            };\r\n        case ADD_PROCESS_PRODUCT:\r\n            return {\r\n                ...state,\r\n                processproduct: [...state.processproducts, action.payload]\r\n            };\r\n        case GET_PROCESS_PRODUCT:\r\n            return {\r\n                ...state,\r\n                processproduct: action.payload\r\n            };\r\n        case EDIT_PROCESS_PRODUCT:\r\n            const arrayList = state.processproducts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                processproducts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_WASTE_GENERATION_REPORTS, EDIT_WASTE_GENERATION_REPORT, GET_WASTE_GENERATION_REPORT, DELETE_WASTE_GENERATION_REPORT, ADD_WASTE_GENERATION_REPORT  } from \"../types/wastegenerationreportTypes\";\r\n\r\nconst initialState = {\r\n    wastegenerationreports: [],\r\n    wastegenerationreport: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_WASTE_GENERATION_REPORTS:\r\n            return {\r\n                ...state,\r\n                wastegenerationreports: action.payload\r\n            };\r\n        case DELETE_WASTE_GENERATION_REPORT:\r\n            return {\r\n                ...state,\r\n                wastegenerationreport: state.wastegenerationreports.filter(wastegenerationreport => wastegenerationreport.id !== action.payload)\r\n            };\r\n        case ADD_WASTE_GENERATION_REPORT:\r\n            return {\r\n                ...state,\r\n                wastegenerationreport: [...state.wastegenerationreports, action.payload]\r\n            };\r\n        case GET_WASTE_GENERATION_REPORT:\r\n            return {\r\n                ...state,\r\n                wastegenerationreport: action.payload\r\n            };\r\n        case EDIT_WASTE_GENERATION_REPORT:\r\n            const arrayList = state.wastegenerationreports;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                wastegenerationreports: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_PROCESSED_PRODUCT_STOCK_RECEIPT, GET_PROCESSED_PRODUCT_STOCK_RECEIPTS, GET_PROCESSED_PRODUCT_STOCK_RECEIPT, DELETE_PROCESSED_PRODUCT_STOCK_RECEIPT } from '../types/processedproductstockreceiptTypes';\r\n\r\nconst initialState = {\r\n    processedproductstockreceipts: [],\r\n    processedproductstockreceipt: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESSED_PRODUCT_STOCK_RECEIPTS:\r\n            return {\r\n                ...state,\r\n                processedproductstockreceipts: action.payload\r\n            };\r\n        case DELETE_PROCESSED_PRODUCT_STOCK_RECEIPT:\r\n            return {\r\n                ...state,\r\n                processedproductstockreceipt: state.processedproductstockreceipts.filter(processedproductstockreceipt=> processedproductstockreceipt.id !== action.payload)\r\n            };\r\n        case ADD_PROCESSED_PRODUCT_STOCK_RECEIPT:\r\n            return {\r\n                ...state,\r\n                processedproductstockreceipt: [...state.processedproductstockreceipts, action.payload]\r\n            }\r\n        case GET_PROCESSED_PRODUCT_STOCK_RECEIPT:\r\n            return {\r\n                ...state,\r\n                processedproductstockreceipt:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_PROCESSED_PRODUCT_STOCK_ADJUSTMENT, EDIT_PROCESSED_PRODUCT_STOCK_ADJUSTMENT, GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENTS, GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENT, DELETE_PROCESSED_PRODUCT_STOCK_ADJUSTMENT } from '../types/processedproductstockadjustmentTypes';\r\n\r\nconst initialState = {\r\n    processedproductstockadjustments: [],\r\n    processedproductstockadjustment: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENTS:\r\n            return {\r\n                ...state,\r\n                processedproductstockadjustments: action.payload\r\n            };\r\n        case DELETE_PROCESSED_PRODUCT_STOCK_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                processedproductstockadjustment: state.processedproductstockadjustments.filter(processedproductstockadjustment=> processedproductstockadjustment.id !== action.payload)\r\n            };\r\n        case ADD_PROCESSED_PRODUCT_STOCK_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                processedproductstockadjustment: [...state.processedproductstockadjustments, action.payload]\r\n            }\r\n        case GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                processedproductstockadjustment:action.payload\r\n            };\r\n        case EDIT_PROCESSED_PRODUCT_STOCK_ADJUSTMENT:\r\n            const arrayList = state.processedproductstockadjustments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                processedproductstockadjustments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_PROCESSED_PRODUCT_STOCK_TAKE, GET_PROCESSED_PRODUCT_STOCK_TAKES, GET_PROCESSED_PRODUCT_STOCK_TAKE, DELETE_PROCESSED_PRODUCT_STOCK_TAKE } from '../types/processedproductstocktakeTypes';\r\n\r\nconst initialState = {\r\n    processedproductstocktakes: [],\r\n    processedproductstocktake: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESSED_PRODUCT_STOCK_TAKES:\r\n            return {\r\n                ...state,\r\n                processedproductstocktakes: action.payload\r\n            };\r\n        case DELETE_PROCESSED_PRODUCT_STOCK_TAKE:\r\n            return {\r\n                ...state,\r\n                processedproductstocktake: state.processedproductstocktakes.filter(processedproductstocktake=> processedproductstocktake.id !== action.payload)\r\n            };\r\n        case ADD_PROCESSED_PRODUCT_STOCK_TAKE:\r\n            return {\r\n                ...state,\r\n                processedproductstocktake: [...state.processedproductstocktakes, action.payload]\r\n            }\r\n        case GET_PROCESSED_PRODUCT_STOCK_TAKE:\r\n            return {\r\n                ...state,\r\n                processedproductstocktake:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_INVENTORY_CATEGORY, GET_INVENTORY_CATEGORIES, EDIT_INVENTORY_CATEGORY, GET_INVENTORY_CATEGORY, DELETE_INVENTORY_CATEGORY } from '../types/inventorycategoryTypes';\r\n\r\nconst initialState = {\r\n    inventorycategories: [],\r\n    inventorycategory: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                inventorycategories: action.payload\r\n            };\r\n        case DELETE_INVENTORY_CATEGORY:\r\n            return {\r\n                ...state,\r\n                inventorycategory: state.inventorycategories.filter(inventorycategory=> inventorycategory.id !== action.payload)\r\n            };\r\n        case ADD_INVENTORY_CATEGORY:\r\n            return {\r\n                ...state,\r\n                inventorycategory: [...state.inventorycategories, action.payload]\r\n            };\r\n        case GET_INVENTORY_CATEGORY:\r\n            return {\r\n                ...state,\r\n                inventorycategory: action.payload\r\n            };\r\n        case EDIT_INVENTORY_CATEGORY:\r\n            const arrayList = state.inventorycategories;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                inventorycategories: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_DEBIT_NOTE, GET_DEBIT_NOTES, GET_DEBIT_NOTE, DELETE_DEBIT_NOTE } from '../types/debitnoteTypes';\r\n\r\nconst initialState = {\r\n    debitnotes: [],\r\n    debitnote: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DEBIT_NOTES:\r\n            return {\r\n                ...state,\r\n                debitnotes: action.payload\r\n            };\r\n        case DELETE_DEBIT_NOTE:\r\n            return {\r\n                ...state,\r\n                debitnote: state.debitnotes.filter(debitnote=> debitnote.id !== action.payload)\r\n            };\r\n        case ADD_DEBIT_NOTE:\r\n            return {\r\n                ...state,\r\n                debitnote: [...state.debitnote, action.payload]\r\n            };\r\n        case GET_DEBIT_NOTE:\r\n            return {\r\n                ...state,\r\n                debitnote: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_INVENTORY_ORDER,\r\n    GET_INVENTORY_ORDERS ,\r\n    DELETE_INVENTORY_ORDER,\r\n    GET_INVENTORY_ORDER,\r\n} from '../types/inventoryorderTypes';\r\n\r\nconst initialState = {\r\n    inventoryorders: [],\r\n    inventoryorder: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_ORDERS:\r\n            return {\r\n                ...state,\r\n                inventoryorders: action.payload\r\n            };\r\n        case DELETE_INVENTORY_ORDER:\r\n            return {\r\n                ...state,\r\n                inventoryorder: state.inventoryorders.filter(inventoryorder=> inventoryorder.id !== action.payload)\r\n            };\r\n        case ADD_INVENTORY_ORDER:\r\n            return {\r\n                ...state,\r\n                inventoryorder: [...state.inventoryorders, action.payload]\r\n            }\r\n        case GET_INVENTORY_ORDER:\r\n            return {\r\n                ...state,\r\n                inventoryorder:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_INVENTORY_ORDERPAYMENT,\r\n    GET_INVENTORY_ORDERPAYMENTS ,\r\n    DELETE_INVENTORY_ORDERPAYMENT,\r\n    GET_INVENTORY_ORDERPAYMENT,\r\n    EDIT_INVENTORY_ORDERPAYMENT\r\n} from '../types/inventoryorderpaymentTypes';\r\n\r\nconst initialState = {\r\n    inventoryorderpayments: [],\r\n    inventoryorderpayment: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_ORDERPAYMENTS:\r\n            return {\r\n                ...state,\r\n                inventoryorderpayments: action.payload\r\n            };\r\n        case DELETE_INVENTORY_ORDERPAYMENT:\r\n            return {\r\n                ...state,\r\n                inventoryorderpayment: state.inventoryorderpayments.filter(inventoryorderpayment=> inventoryorderpayment.id !== action.payload)\r\n            };\r\n        case ADD_INVENTORY_ORDERPAYMENT:\r\n            return {\r\n                ...state,\r\n                inventoryorderpayment: [...state.inventoryorderpayments, action.payload]\r\n            }\r\n        case GET_INVENTORY_ORDERPAYMENT:\r\n            return {\r\n                ...state,\r\n                inventoryorderpayment:action.payload\r\n            };\r\n        case EDIT_INVENTORY_ORDERPAYMENT:\r\n            const arrayList = state.inventoryorderpayments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                inventoryorderpayments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_WAREHOUSES, GET_WAREHOUSE, EDIT_WAREHOUSE, DELETE_WAREHOUSE, ADD_WAREHOUSE  } from '../types/warehouseTypes';\r\n\r\nconst initialState = {\r\n    warehouses: [],\r\n    warehouse: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_WAREHOUSES:\r\n            return {\r\n                ...state,\r\n                warehouses: action.payload\r\n            };\r\n        case DELETE_WAREHOUSE:\r\n            return {\r\n                ...state,\r\n                warehouse: state.warehouses.filter(warehouse => warehouse.id !== action.payload)\r\n            };\r\n        case ADD_WAREHOUSE:\r\n            return {\r\n                ...state,\r\n                warehouse: [...state.warehouses, action.payload]\r\n            };\r\n        case GET_WAREHOUSE:\r\n            return {\r\n                ...state,\r\n                warehouse: action.payload\r\n            };\r\n        case EDIT_WAREHOUSE:\r\n            const arrayList = state.warehouses;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                warehouses: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_INVENTORY_STOCK_ITEM,\r\n    GET_INVENTORY_STOCK_ITEMS,\r\n    DELETE_INVENTORY_STOCK_ITEM,\r\n    GET_INVENTORY_STOCK_ITEM,\r\n    EDIT_INVENTORY_STOCK_ITEM\r\n} from '../types/inventorystockitemTypes';\r\n\r\nconst initialState = {\r\n    inventorystockitems: [],\r\n    inventorystockitem: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_STOCK_ITEMS:\r\n            return {\r\n                ...state,\r\n                inventorystockitems: action.payload\r\n            };\r\n        case DELETE_INVENTORY_STOCK_ITEM:\r\n            return {\r\n                ...state,\r\n                inventorystockitem: state.inventorystockitems.filter(inventorystockitem=> inventorystockitem.id !== action.payload)\r\n            };\r\n        case ADD_INVENTORY_STOCK_ITEM:\r\n            return {\r\n                ...state,\r\n                inventorystockitem: [...state.inventorystockitems, action.payload]\r\n            }\r\n        case GET_INVENTORY_STOCK_ITEM:\r\n            return {\r\n                ...state,\r\n                inventorystockitem:action.payload\r\n            };\r\n        case EDIT_INVENTORY_STOCK_ITEM:\r\n            const arrayList = state.inventorystockitems;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                inventorystockitems: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_STORAGEMEDIAS, GET_STORAGEMEDIA, EDIT_STORAGEMEDIA, DELETE_STORAGEMEDIA, ADD_STORAGEMEDIA  } from '../types/storagemediaTypes';\r\n\r\nconst initialState = {\r\n    storagemedias: [],\r\n    storagemedia: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_STORAGEMEDIAS:\r\n            return {\r\n                ...state,\r\n                storagemedias: action.payload\r\n            };\r\n        case DELETE_STORAGEMEDIA:\r\n            return {\r\n                ...state,\r\n                storagemedia: state.storagemedias.filter(storagemedia => storagemedia.id !== action.payload)\r\n            };\r\n        case ADD_STORAGEMEDIA:\r\n            return {\r\n                ...state,\r\n                storagemedia: [...state.storagemedias, action.payload]\r\n            };\r\n        case GET_STORAGEMEDIA:\r\n            return {\r\n                ...state,\r\n                storagemedia: action.payload\r\n            };\r\n        case EDIT_STORAGEMEDIA:\r\n            const arrayList = state.storagemedias;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                storagemedias: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_ORDER_ITEM,\r\n    GET_ORDER_ITEMS,\r\n    DELETE_ORDER_ITEM,\r\n    GET_ORDER_ITEM,\r\n    EDIT_ORDER_ITEM\r\n} from '../types/orderitemTypes';\r\n\r\nconst initialState = {\r\n    orderitems: [],\r\n    orderitem: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ORDER_ITEMS:\r\n            return {\r\n                ...state,\r\n                orderitems: action.payload\r\n            };\r\n        case DELETE_ORDER_ITEM:\r\n            return {\r\n                ...state,\r\n                orderitem: state.orderitems.filter(orderitem=> orderitem.id !== action.payload)\r\n            };\r\n        case ADD_ORDER_ITEM:\r\n            return {\r\n                ...state,\r\n                orderitem: [...state.orderitems, action.payload]\r\n            }\r\n        case GET_ORDER_ITEM:\r\n            return {\r\n                ...state,\r\n                orderitem:action.payload\r\n            };\r\n        case EDIT_ORDER_ITEM:\r\n            const arrayList = state.orderitems;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                orderitems: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_INVENTORY_RECEIPT,\r\n    GET_INVENTORY_RECEIPTS,\r\n    DELETE_INVENTORY_RECEIPT,\r\n    GET_INVENTORY_RECEIPT,\r\n} from '../types/inventoryreceiptTypes';\r\n\r\nconst initialState = {\r\n    inventoryreceipts: [],\r\n    inventoryreceipt: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_RECEIPTS:\r\n            return {\r\n                ...state,\r\n                inventoryreceipts: action.payload\r\n            };\r\n        case DELETE_INVENTORY_RECEIPT:\r\n            return {\r\n                ...state,\r\n                inventoryreceipt: state.inventoryreceipts.filter(inventoryreceipt=> inventoryreceipt.id !== action.payload)\r\n            };\r\n        case ADD_INVENTORY_RECEIPT:\r\n            return {\r\n                ...state,\r\n                inventoryreceipt: [...state.inventoryreceipts, action.payload]\r\n            }\r\n        case GET_INVENTORY_RECEIPT:\r\n            return {\r\n                ...state,\r\n                inventoryreceipt:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_STOCK_ADJUSTMENTS, EDIT_STOCK_ADJUSTMENT, GET_STOCK_ADJUSTMENT, DELETE_STOCK_ADJUSTMENT, ADD_STOCK_ADJUSTMENT  } from '../types/stockadjustmentTypes';\r\n\r\nconst initialState = {\r\n    stockadjustments: [],\r\n    stockadjustment: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_STOCK_ADJUSTMENTS:\r\n            return {\r\n                ...state,\r\n                stockadjustments: action.payload\r\n            };\r\n        case DELETE_STOCK_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                stockadjustment: state.stockadjustments.filter(stockadjustment => stockadjustment.id !== action.payload)\r\n            };\r\n        case ADD_STOCK_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                stockadjustment: [...state.stockadjustments, action.payload]\r\n            };\r\n        case GET_STOCK_ADJUSTMENT:\r\n            return {\r\n                ...state,\r\n                stockadjustment: action.payload\r\n            };\r\n        case EDIT_STOCK_ADJUSTMENT:\r\n            const arrayList = state.stockadjustments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                stockadjustments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_INVENTORY_STOCK_TAKE,\r\n    GET_INVENTORY_STOCK_TAKES,\r\n    DELETE_INVENTORY_STOCK_TAKE,\r\n    GET_INVENTORY_STOCK_TAKE,\r\n    EDIT_INVENTORY_STOCK_TAKE\r\n} from '../types/inventorystocktakeTypes';\r\n\r\nconst initialState = {\r\n    inventorystocktakes: [],\r\n    inventorystocktake: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_STOCK_TAKES:\r\n            return {\r\n                ...state,\r\n                inventorystocktakes: action.payload\r\n            };\r\n        case DELETE_INVENTORY_STOCK_TAKE:\r\n            return {\r\n                ...state,\r\n                inventorystocktake: state.inventorystocktakes.filter(inventorystocktake=> inventorystocktake.id !== action.payload)\r\n            };\r\n        case ADD_INVENTORY_STOCK_TAKE:\r\n            return {\r\n                ...state,\r\n                inventorystocktake: [...state.inventorystocktakes, action.payload]\r\n            }\r\n        case GET_INVENTORY_STOCK_TAKE:\r\n            return {\r\n                ...state,\r\n                inventorystocktake:action.payload\r\n            };\r\n        case EDIT_INVENTORY_STOCK_TAKE:\r\n            const arrayList = state.inventorystocktakes;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                inventorystocktakes: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_ACTIVE_SUPPLIERS,\r\n    DELETE_ACTIVE_SUPPLIER,\r\n    GET_ACTIVE_SUPPLIER,\r\n    ADD_ACTIVE_SUPPLIER\r\n} from '../types/activesupplierTypes';\r\n\r\nconst initialState = {\r\n    activesuppliers: [],\r\n    activesupplier: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACTIVE_SUPPLIERS:\r\n            return {\r\n                ...state,\r\n                activesuppliers: action.payload\r\n            };\r\n        case DELETE_ACTIVE_SUPPLIER:\r\n            return {\r\n                ...state,\r\n                activesupplier: state.activesuppliers.filter(activesupplier=> activesupplier.id !== action.payload)\r\n            };\r\n        case GET_ACTIVE_SUPPLIER:\r\n            return {\r\n                ...state,\r\n                activesupplier:action.payload\r\n                };\r\n        case ADD_ACTIVE_SUPPLIER:\r\n            return {\r\n                ...state,\r\n                activesupplier: [...state.activesuppliers, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_DE_ACTIVED_SUPPLIERS,\r\n    DELETE_DE_ACTIVED_SUPPLIER,\r\n    GET_DE_ACTIVED_SUPPLIER,\r\n} from '../types/deactivedsupplierTypes';\r\n\r\nconst initialState = {\r\n    deactivedsuppliers: [],\r\n    deactivedsupplier: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DE_ACTIVED_SUPPLIERS:\r\n            return {\r\n                ...state,\r\n                deactivedsuppliers: action.payload\r\n            };\r\n        case DELETE_DE_ACTIVED_SUPPLIER:\r\n            return {\r\n                ...state,\r\n                deactivedsupplier: state.deactivedsuppliers.filter(deactivedsupplier=> deactivedsupplier.id !== action.payload)\r\n            };\r\n        case GET_DE_ACTIVED_SUPPLIER:\r\n            return {\r\n                ...state,\r\n                deactivedsupplier:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_SUPPLIER_ADDRESS,\r\n    GET_SUPPLIER_ADDRESSES,\r\n    DELETE_SUPPLIER_ADDRESS,\r\n    GET_SUPPLIER_ADDRESS,\r\n    EDIT_SUPPLIER_ADDRESS\r\n} from '../types/supplieraddressTypes';\r\n\r\nconst initialState = {\r\n    supplieraddresses: [],\r\n    supplieraddress: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SUPPLIER_ADDRESSES:\r\n            return {\r\n                ...state,\r\n                supplieraddresses: action.payload\r\n            };\r\n        case DELETE_SUPPLIER_ADDRESS:\r\n            return {\r\n                ...state,\r\n                supplieraddress: state.supplieraddresses.filter(supplieraddress=> supplieraddress.id !== action.payload)\r\n            };\r\n        case ADD_SUPPLIER_ADDRESS:\r\n            return {\r\n                ...state,\r\n                supplieraddress: [...state.supplieraddresses, action.payload]\r\n            }\r\n        case GET_SUPPLIER_ADDRESS:\r\n            return {\r\n                ...state,\r\n                supplieraddress:action.payload\r\n            };\r\n        case EDIT_SUPPLIER_ADDRESS:\r\n            const arrayList = state.supplieraddresses;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                supplieraddresses: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_RAW_MATERIAL,\r\n    GET_RAW_MATERIALS,\r\n    DELETE_RAW_MATERIAL,\r\n    GET_RAW_MATERIAL,\r\n    EDIT_RAW_MATERIAL\r\n} from '../types/rawmaterialTypes';\r\n\r\nconst initialState = {\r\n    rawmaterials: [],\r\n    rawmaterial: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_RAW_MATERIALS:\r\n            return {\r\n                ...state,\r\n                rawmaterials: action.payload\r\n            };\r\n        case DELETE_RAW_MATERIAL:\r\n            return {\r\n                ...state,\r\n                rawmaterial: state.rawmaterials.filter(rawmaterial=> rawmaterial.id !== action.payload)\r\n            };\r\n        case ADD_RAW_MATERIAL:\r\n            return {\r\n                ...state,\r\n                rawmaterial: [...state.rawmaterials, action.payload]\r\n            }\r\n        case GET_RAW_MATERIAL:\r\n            return {\r\n                ...state,\r\n                rawmaterial:action.payload\r\n            };\r\n        case EDIT_RAW_MATERIAL:\r\n            const arrayList = state.rawmaterials;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                rawmaterials: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_EQUIPMENT,\r\n    GET_EQUIPMENTS,\r\n    DELETE_EQUIPMENT,\r\n    GET_EQUIPMENT,\r\n    EDIT_EQUIPMENT\r\n} from '../types/equipmentTypes';\r\n\r\nconst initialState = {\r\n    equipments: [],\r\n    equipment: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EQUIPMENTS:\r\n            return {\r\n                ...state,\r\n                equipments: action.payload\r\n            };\r\n        case DELETE_EQUIPMENT:\r\n            return {\r\n                ...state,\r\n                equipment: state.equipments.filter(equipment=> equipment.id !== action.payload)\r\n            };\r\n        case ADD_EQUIPMENT:\r\n            return {\r\n                ...state,\r\n                equipment: [...state.equipments, action.payload]\r\n            }\r\n        case GET_EQUIPMENT:\r\n            return {\r\n                ...state,\r\n                equipment:action.payload\r\n            };\r\n        case EDIT_EQUIPMENT:\r\n            const arrayList = state.equipments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                equipments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_UPCOMING_EVENT,\r\n    GET_UPCOMING_EVENTS ,\r\n    DELETE_UPCOMING_EVENT,\r\n    GET_UPCOMING_EVENT,\r\n} from '../types/upcomingeventTypes';\r\n\r\nconst initialState = {\r\n    upcomingevents: [],\r\n    upcomingevent: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UPCOMING_EVENTS:\r\n            return {\r\n                ...state,\r\n                upcomingevents: action.payload\r\n            };\r\n        case DELETE_UPCOMING_EVENT:\r\n            return {\r\n                ...state,\r\n                upcomingevent: state.upcomingevents.filter(upcomingevent=> upcomingevent.id !== action.payload)\r\n            };\r\n        case ADD_UPCOMING_EVENT:\r\n            return {\r\n                ...state,\r\n                upcomingevent: [...state.upcomingevents, action.payload]\r\n            }\r\n        case GET_UPCOMING_EVENT:\r\n            return {\r\n                ...state,\r\n                upcomingevent:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_CONSUMABLE,\r\n    GET_CONSUMABLES,\r\n    DELETE_CONSUMABLE,\r\n    GET_CONSUMABLE,\r\n    EDIT_CONSUMABLE\r\n} from '../types/consumableTypes';\r\n\r\nconst initialState = {\r\n    consumables: [],\r\n    consumable: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CONSUMABLES:\r\n            return {\r\n                ...state,\r\n                consumables: action.payload\r\n            };\r\n        case DELETE_CONSUMABLE:\r\n            return {\r\n                ...state,\r\n                consumable: state.consumables.filter(consumable=> consumable.id !== action.payload)\r\n            };\r\n        case ADD_CONSUMABLE:\r\n            return {\r\n                ...state,\r\n                consumable: [...state.consumables, action.payload]\r\n            }\r\n        case GET_CONSUMABLE:\r\n            return {\r\n                ...state,\r\n                consumable:action.payload\r\n            };\r\n        case EDIT_CONSUMABLE:\r\n            const arrayList = state.consumables;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                consumables: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_COMPLETED_EVENT,\r\n    GET_COMPLETED_EVENTS ,\r\n    DELETE_COMPLETED_EVENT,\r\n    GET_COMPLETED_EVENT,\r\n} from '../types/completedeventTypes';\r\n\r\nconst initialState = {\r\n    completedevents: [],\r\n    completedevent: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPLETED_EVENTS:\r\n            return {\r\n                ...state,\r\n                completedevents: action.payload\r\n            };\r\n        case DELETE_COMPLETED_EVENT:\r\n            return {\r\n                ...state,\r\n                completedevent: state.completedevents.filter(completedevent=> completedevent.id !== action.payload)\r\n            };\r\n        case ADD_COMPLETED_EVENT:\r\n            return {\r\n                ...state,\r\n                completedevent: [...state.completedevents, action.payload]\r\n            }\r\n        case GET_COMPLETED_EVENT:\r\n            return {\r\n                ...state,\r\n                completedevent:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_EVENT_CONFIG\r\n} from '../types/eventconfigTypes';\r\n\r\nconst initialState = {\r\n    eventconfigs: [],\r\n    eventconfig: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case ADD_EVENT_CONFIG:\r\n            return {\r\n                ...state,\r\n                eventconfig: [...state.eventconfigs, action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n        GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDERS,\r\n        DELETE_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n        GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER\r\n    } from '../types/fullyreceivedandtotalpaidfororderTypes';\r\n\r\nconst initialState = {\r\n    fullyreceivedandtotalpaidfororders: [],\r\n    fullyreceivedandtotalpaidfororder: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDERS:\r\n            return {\r\n                ...state,\r\n                fullyreceivedandtotalpaidfororders: action.payload\r\n            };\r\n        case DELETE_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER:\r\n            return {\r\n                ...state,\r\n                fullyreceivedandtotalpaidfororder: state.fullyreceivedandtotalpaidfororders.filter(fullyreceivedandtotalpaidfororder=> fullyreceivedandtotalpaidfororder.id !== action.payload)\r\n            };\r\n        case ADD_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER:\r\n            return {\r\n                ...state,\r\n                fullyreceivedandtotalpaidfororder: [...state.fullyreceivedandtotalpaidfororders, action.payload]\r\n            }\r\n        case GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER:\r\n            return {\r\n                ...state,\r\n                fullyreceivedandtotalpaidfororder:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n        GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDERS,\r\n        DELETE_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n        GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER\r\n    } from '../types/fullyreceivedtotalpaidforandverifiedorderTypes';\r\n\r\nconst initialState = {\r\n    fullyreceivedtotalpaidforandverifiedorders: [],\r\n    fullyreceivedtotalpaidforandverifiedorder: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDERS:\r\n            return {\r\n                ...state,\r\n                fullyreceivedtotalpaidforandverifiedorders: action.payload\r\n            };\r\n        case DELETE_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER:\r\n            return {\r\n                ...state,\r\n                fullyreceivedtotalpaidforandverifiedorder: state.fullyreceivedtotalpaidforandverifiedorders.filter(fullyreceivedtotalpaidforandverifiedorder=> fullyreceivedtotalpaidforandverifiedorder.id !== action.payload)\r\n            };\r\n        case ADD_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER:\r\n            return {\r\n                ...state,\r\n                fullyreceivedtotalpaidforandverifiedorder: [...state.fullyreceivedtotalpaidforandverifiedorders, action.payload]\r\n            }\r\n        case GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER:\r\n            return {\r\n                ...state,\r\n                fullyreceivedtotalpaidforandverifiedorder:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_CONFIG } from '../types/employeeconfigTypes';\r\n\r\nconst initialState = {\r\n    employeeconfigs: [],\r\n    employeeconfig: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case ADD_EMPLOYEE_CONFIG:\r\n            return {\r\n                ...state,\r\n                employeeconfig: [...state.employeeconfigs, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_CONTRACT, EDIT_EMPLOYEE_CONTRACT, GET_EMPLOYEE_CONTRACTS, GET_EMPLOYEE_CONTRACT, DELETE_EMPLOYEE_CONTRACT } from '../types/employeecontractTypes';\r\n\r\nconst initialState = {\r\n    employeecontracts: [],\r\n    employeecontract: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_CONTRACTS:\r\n            return {\r\n                ...state,\r\n                employeecontracts: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_CONTRACT:\r\n            return {\r\n                ...state,\r\n                employeecontract: state.employeecontracts.filter(employeecontract=> employeecontract.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_CONTRACT:\r\n            return {\r\n                ...state,\r\n                employeecontracts: [...state.employeecontracts, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_CONTRACT:\r\n            return {\r\n                ...state,\r\n                employeecontract:action.payload\r\n                };\r\n        case EDIT_EMPLOYEE_CONTRACT:\r\n            const arrayList = state.employeecontracts;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeecontracts: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_CONTRACTS_TERMINATION, EDIT_EMPLOYEE_CONTRACTS_TERMINATION, GET_EMPLOYEE_CONTRACTS_TERMINATIONS, GET_EMPLOYEE_CONTRACTS_TERMINATION, DELETE_EMPLOYEE_CONTRACTS_TERMINATION } from '../types/employeecontractsterminationTypes';\r\n\r\nconst initialState = {\r\n    employeecontractsterminations: [],\r\n    employeecontractstermination: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_CONTRACTS_TERMINATIONS:\r\n            return {\r\n                ...state,\r\n                employeecontractsterminations: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_CONTRACTS_TERMINATION:\r\n            return {\r\n                ...state,\r\n                employeecontractstermination: state.employeecontractsterminations.filter(employeecontractstermination=> employeecontractstermination.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_CONTRACTS_TERMINATION:\r\n            return {\r\n                ...state,\r\n                employeecontractstermination: [...state.employeecontractsterminations, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_CONTRACTS_TERMINATION:\r\n            return {\r\n                ...state,\r\n                employeecontractstermination:action.payload\r\n                };\r\n        case EDIT_EMPLOYEE_CONTRACTS_TERMINATION:\r\n            const arrayList = state.employeecontractsterminations;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeecontractsterminations: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_DEPARTMENT, EDIT_EMPLOYEE_DEPARTMENT, GET_EMPLOYEE_DEPARTMENTS, GET_EMPLOYEE_DEPARTMENT, DELETE_EMPLOYEE_DEPARTMENT } from '../types/employeedepartmentTypes';\r\n\r\nconst initialState = {\r\n    employeedepartments: [],\r\n    employeedepartment: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_DEPARTMENTS:\r\n            return {\r\n                ...state,\r\n                employeedepartments: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                employeedepartment: state.employeedepartments.filter(employeedepartment=> employeedepartment.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                employeedepartment: [...state.employeedepartments, action.payload]\r\n            };\r\n        case GET_EMPLOYEE_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                employeedepartment:action.payload\r\n            };\r\n        case EDIT_EMPLOYEE_DEPARTMENT:\r\n            const arrayList = state.employeedepartments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeedepartments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_LEAVE, EDIT_EMPLOYEE_LEAVE, GET_EMPLOYEE_LEAVES, GET_EMPLOYEE_LEAVE, DELETE_EMPLOYEE_LEAVE } from '../types/employeeleaveTypes';\r\n\r\nconst initialState = {\r\n    employeeleaves: [],\r\n    employeeleave: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_LEAVES:\r\n            return {\r\n                ...state,\r\n                employeeleaves: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                employeeleave: state.employeeleaves.filter(employeeleave=> employeeleave.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                employeeleave: [...state.employeeleaves, action.payload]\r\n            };\r\n        case GET_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                employeeleave:action.payload\r\n            };\r\n        case EDIT_EMPLOYEE_LEAVE:\r\n            const arrayList = state.employeeleaves;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeeleaves: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_EMPLOYEES, ADD_EMPLOYEE } from '../types/employeesTypes';\r\n\r\nconst initialState = {\r\n    employees: [],\r\n    employee: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                employees: action.payload\r\n            };\r\n        case ADD_EMPLOYEE:\r\n            return {\r\n                ...state,\r\n                employee: [...state.employees, action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAYGRADE, EDIT_EMPLOYEE_PAYGRADE, GET_EMPLOYEE_PAYGRADES, GET_EMPLOYEE_PAYGRADE, DELETE_EMPLOYEE_PAYGRADE } from '../types/employeepaygradeTypes';\r\n\r\nconst initialState = {\r\n    employeepaygrades: [],\r\n    employeepaygrade: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYGRADES:\r\n            return {\r\n                ...state,\r\n                employeepaygrades: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAYGRADE:\r\n            return {\r\n                ...state,\r\n                employeepaygrade: state.employeepaygrades.filter(employeepaygrade=> employeepaygrade.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAYGRADE:\r\n            return {\r\n                ...state,\r\n                employeepaygrade: [...state.employeepaygrades, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_PAYGRADE:\r\n            return {\r\n                ...state,\r\n                employeepaygrade:action.payload\r\n            };\r\n        case EDIT_EMPLOYEE_PAYGRADE:\r\n            const arrayList = state.employeepaygrades;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeepaygrades: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_ALLOWANCE, EDIT_EMPLOYEE_ALLOWANCE, GET_EMPLOYEE_ALLOWANCES, GET_EMPLOYEE_ALLOWANCE, DELETE_EMPLOYEE_ALLOWANCE } from '../types/employeeallowanceTypes';\r\n\r\nconst initialState = {\r\n    employeeallowances: [],\r\n    employeeallowance: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_ALLOWANCES:\r\n            return {\r\n                ...state,\r\n                employeeallowances: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_ALLOWANCE:\r\n            return {\r\n                ...state,\r\n                employeeallowance: state.employeeallowances.filter(employeeallowance=> employeeallowance.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_ALLOWANCE:\r\n            return {\r\n                ...state,\r\n                employeeallowances: [...state.employeeallowances, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_ALLOWANCE:\r\n            return {\r\n                ...state,\r\n                employeeallowance:action.payload\r\n                };\r\n        case EDIT_EMPLOYEE_ALLOWANCE:\r\n            const arrayList = state.employeeallowances;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeeallowances: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAY_DEDUCTION, EDIT_EMPLOYEE_PAY_DEDUCTION, GET_EMPLOYEE_PAY_DEDUCTIONS, GET_EMPLOYEE_PAY_DEDUCTION, DELETE_EMPLOYEE_PAY_DEDUCTION } from '../types/employeepaydeductionTypes';\r\n\r\nconst initialState = {\r\n    employeepaydeductions: [],\r\n    employeepaydeduction: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAY_DEDUCTIONS:\r\n            return {\r\n                ...state,\r\n                employeepaydeductions: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAY_DEDUCTION:\r\n            return {\r\n                ...state,\r\n                employeepaydeduction: state.employeepaydeductions.filter(employeepaydeduction=> employeepaydeduction.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAY_DEDUCTION:\r\n            return {\r\n                ...state,\r\n                employeepaydeduction: [...state.employeepaydeductions, action.payload]\r\n            };\r\n        case GET_EMPLOYEE_PAY_DEDUCTION:\r\n            return {\r\n                ...state,\r\n                employeepaydeduction:action.payload\r\n            };\r\n        case EDIT_EMPLOYEE_PAY_DEDUCTION:\r\n            const arrayList = state.employeepaydeductions;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeepaydeductions: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAY_COMMISSION_RULE, EDIT_EMPLOYEE_PAY_COMMISSION_RULE, GET_EMPLOYEE_PAY_COMMISSION_RULES, GET_EMPLOYEE_PAY_COMMISSION_RULE, DELETE_EMPLOYEE_PAY_COMMISSION_RULE } from '../types/employeepaycommissionruleTypes';\r\n\r\nconst initialState = {\r\n    employeepaycommissionrules: [],\r\n    employeepaycommissionrule: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAY_COMMISSION_RULES:\r\n            return {\r\n                ...state,\r\n                employeepaycommissionrules: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAY_COMMISSION_RULE:\r\n            return {\r\n                ...state,\r\n                employeepaycommissionrule: state.employeepaycommissionrules.filter(employeepaycommissionrule=> employeepaycommissionrule.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAY_COMMISSION_RULE:\r\n            return {\r\n                ...state,\r\n                employeepaycommissionrule: [...state.employeepaycommissionrules, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_PAY_COMMISSION_RULE:\r\n            return {\r\n                ...state,\r\n                employeepaycommissionrule:action.payload\r\n            };\r\n        case EDIT_EMPLOYEE_PAY_COMMISSION_RULE:\r\n            const arrayList = state.employeepaycommissionrules;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeepaycommissionrules: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAYROLL_TAX, EDIT_EMPLOYEE_PAYROLL_TAX, GET_EMPLOYEE_PAYROLL_TAXES, GET_EMPLOYEE_PAYROLL_TAX, DELETE_EMPLOYEE_PAYROLL_TAX } from '../types/employeepayrolltaxeTypes';\r\n\r\nconst initialState = {\r\n    employeepayrolltaxes: [],\r\n    employeepayrolltax: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYROLL_TAXES:\r\n            return {\r\n                ...state,\r\n                employeepayrolltaxes: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAYROLL_TAX:\r\n            return {\r\n                ...state,\r\n                employeepayrolltax: state.employeepayrolltaxes.filter(employeepayrolltax=> employeepayrolltax.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAYROLL_TAX:\r\n            return {\r\n                ...state,\r\n                employeepayrolltax: [...state.employeepayrolltaxes, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_PAYROLL_TAX:\r\n            return {\r\n                ...state,\r\n                employeepayrolltax:action.payload\r\n                };\r\n        case EDIT_EMPLOYEE_PAYROLL_TAX:\r\n            const arrayList = state.employeepayrolltaxes;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeepayrolltaxes: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAYROLL_SCHEDULE, EDIT_EMPLOYEE_PAYROLL_SCHEDULE, GET_EMPLOYEE_PAYROLL_SCHEDULES, GET_EMPLOYEE_PAYROLL_SCHEDULE, DELETE_EMPLOYEE_PAYROLL_SCHEDULE } from '../types/employeepayrollscheduleTypes';\r\n\r\nconst initialState = {\r\n    employeepayrollschedules: [],\r\n    employeepayrollschedule: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYROLL_SCHEDULES:\r\n            return {\r\n                ...state,\r\n                employeepayrollschedules: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAYROLL_SCHEDULE:\r\n            return {\r\n                ...state,\r\n                employeepayrollschedule: state.employeepayrollschedules.filter(employeepayrollschedule=> employeepayrollschedule.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAYROLL_SCHEDULE:\r\n            return {\r\n                ...state,\r\n                employeepayrollschedule: [...state.employeepayrollschedules, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_PAYROLL_SCHEDULE:\r\n            return {\r\n                ...state,\r\n                employeepayrollschedule:action.payload\r\n                };\r\n        case EDIT_EMPLOYEE_PAYROLL_SCHEDULE:\r\n            const arrayList = state.employeepayrollschedules;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeepayrollschedules: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAYROLL_DATE, EDIT_EMPLOYEE_PAYROLL_DATE, GET_EMPLOYEE_PAYROLL_DATES, GET_EMPLOYEE_PAYROLL_DATE, DELETE_EMPLOYEE_PAYROLL_DATE } from '../types/employeepayrolldateTypes';\r\n\r\nconst initialState = {\r\n    employeepayrolldates: [],\r\n    employeepayrolldate: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYROLL_DATES:\r\n            return {\r\n                ...state,\r\n                employeepayrolldates: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAYROLL_DATE:\r\n            return {\r\n                ...state,\r\n                employeepayrolldate: state.employeepayrolldates.filter(employeepayrolldate=> employeepayrolldate.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAYROLL_DATE:\r\n            return {\r\n                ...state,\r\n                employeepayrolldate: [...state.employeepayrolldates, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_PAYROLL_DATE:\r\n            return {\r\n                ...state,\r\n                employeepayrolldate:action.payload\r\n            };\r\n        case EDIT_EMPLOYEE_PAYROLL_DATE:\r\n            const arrayList = state.employeepayrolldates;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeepayrolldates: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_PAYSLIP, GET_EMPLOYEE_PAYSLIPS, GET_EMPLOYEE_PAYSLIP, DELETE_EMPLOYEE_PAYSLIP } from '../types/employeepayslipTypes';\r\n\r\nconst initialState = {\r\n    employeepayslips: [],\r\n    employeepayslip: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_PAYSLIPS:\r\n            return {\r\n                ...state,\r\n                employeepayslips: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_PAYSLIP:\r\n            return {\r\n                ...state,\r\n                employeepayslip: state.employeepayslips.filter(employeepayslip=> employeepayslip.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_PAYSLIP:\r\n            return {\r\n                ...state,\r\n                employeepayslips: [...state.employeepayslips, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_PAYSLIP:\r\n            return {\r\n                ...state,\r\n                employeepayslip:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_EMPLOYEE_ATTENDANCE_TIMESHEET, EDIT_EMPLOYEE_ATTENDANCE_TIMESHEET, GET_EMPLOYEE_ATTENDANCE_TIMESHEETS, GET_EMPLOYEE_ATTENDANCE_TIMESHEET, DELETE_EMPLOYEE_ATTENDANCE_TIMESHEET } from '../types/employeeattendancetimesheetTypes';\r\n\r\nconst initialState = {\r\n    employeeattendancetimesheets: [],\r\n    employeeattendancetimesheet: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_EMPLOYEE_ATTENDANCE_TIMESHEETS:\r\n            return {\r\n                ...state,\r\n                employeeattendancetimesheets: action.payload\r\n            };\r\n        case DELETE_EMPLOYEE_ATTENDANCE_TIMESHEET:\r\n            return {\r\n                ...state,\r\n                employeeattendancetimesheet: state.employeeattendancetimesheets.filter(employeeattendancetimesheet=> employeeattendancetimesheet.id !== action.payload)\r\n            };\r\n        case ADD_EMPLOYEE_ATTENDANCE_TIMESHEET:\r\n            return {\r\n                ...state,\r\n                employeeattendancetimesheets: [...state.employeeattendancetimesheets, action.payload]\r\n            }\r\n        case GET_EMPLOYEE_ATTENDANCE_TIMESHEET:\r\n            return {\r\n                ...state,\r\n                employeeattendancetimesheet:action.payload\r\n                };\r\n        case EDIT_EMPLOYEE_ATTENDANCE_TIMESHEET:\r\n            const arrayList = state.employeeattendancetimesheets;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                employeeattendancetimesheets: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_SHAREHOLDER,\r\n        GET_COMPANY_SHAREHOLDERS,\r\n        DELETE_COMPANY_SHAREHOLDER,\r\n        GET_COMPANY_SHAREHOLDER\r\n    } from '../types/companyshareholderTypes';\r\n\r\nconst initialState = {\r\n    companyshareholders: [],\r\n    companyshareholder: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_SHAREHOLDERS:\r\n            return {\r\n                ...state,\r\n                companyshareholders: action.payload\r\n            };\r\n        case DELETE_COMPANY_SHAREHOLDER:\r\n            return {\r\n                ...state,\r\n                companyshareholder: state.companyshareholders.filter(companyshareholder=> companyshareholder.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_SHAREHOLDER:\r\n            return {\r\n                ...state,\r\n                companyshareholder: [...state.companyshareholders, action.payload]\r\n            }\r\n        case GET_COMPANY_SHAREHOLDER:\r\n            return {\r\n                ...state,\r\n                companyshareholder:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_MANAGER,\r\n        GET_COMPANY_MANAGERS,\r\n        DELETE_COMPANY_MANAGER,\r\n        GET_COMPANY_MANAGER\r\n    } from '../types/companymanagerTypes';\r\n\r\nconst initialState = {\r\n    companymanagers: [],\r\n    companymanager: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_MANAGERS:\r\n            return {\r\n                ...state,\r\n                companymanagers: action.payload\r\n            };\r\n        case DELETE_COMPANY_MANAGER:\r\n            return {\r\n                ...state,\r\n                companymanager: state.companymanagers.filter(companymanager=> companymanager.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_MANAGER:\r\n            return {\r\n                ...state,\r\n                companymanager: [...state.companymanagers, action.payload]\r\n            }\r\n        case GET_COMPANY_MANAGER:\r\n            return {\r\n                ...state,\r\n                companymanager:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_BOOKKEEPER,\r\n        GET_COMPANY_BOOKKEEPERS,\r\n        DELETE_COMPANY_BOOKKEEPER,\r\n        GET_COMPANY_BOOKKEEPER\r\n    } from '../types/companybookkeeperTypes';\r\n\r\nconst initialState = {\r\n    companybookkeepers: [],\r\n    companybookkeeper: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_BOOKKEEPERS:\r\n            return {\r\n                ...state,\r\n                companybookkeepers: action.payload\r\n            };\r\n        case DELETE_COMPANY_BOOKKEEPER:\r\n            return {\r\n                ...state,\r\n                companybookkeeper: state.companybookkeepers.filter(companybookkeeper=> companybookkeeper.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_BOOKKEEPER:\r\n            return {\r\n                ...state,\r\n                companybookkeeper: [...state.companybookkeepers, action.payload]\r\n            }\r\n        case GET_COMPANY_BOOKKEEPER:\r\n            return {\r\n                ...state,\r\n                companybookkeeper:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_PAYROLL_OFFICER,\r\n        GET_COMPANY_PAYROLL_OFFICERS,\r\n        DELETE_COMPANY_PAYROLL_OFFICER,\r\n        GET_COMPANY_PAYROLL_OFFICER\r\n    } from '../types/companypayrollofficerTypes';\r\n\r\nconst initialState = {\r\n    companypayrollofficers: [],\r\n    companypayrollofficer: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_PAYROLL_OFFICERS:\r\n            return {\r\n                ...state,\r\n                companypayrollofficers: action.payload\r\n            };\r\n        case DELETE_COMPANY_PAYROLL_OFFICER:\r\n            return {\r\n                ...state,\r\n                companypayrollofficer: state.companypayrollofficers.filter(companypayrollofficer=> companypayrollofficer.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_PAYROLL_OFFICER:\r\n            return {\r\n                ...state,\r\n                companypayrollofficer: [...state.companypayrollofficers, action.payload]\r\n            }\r\n        case GET_COMPANY_PAYROLL_OFFICER:\r\n            return {\r\n                ...state,\r\n                companypayrollofficer:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_DRIVER,\r\n        GET_COMPANY_DRIVERS,\r\n        DELETE_COMPANY_DRIVER,\r\n        GET_COMPANY_DRIVER\r\n    } from '../types/companydriverTypes';\r\n\r\nconst initialState = {\r\n    companydrivers: [],\r\n    companydriver: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_DRIVERS:\r\n            return {\r\n                ...state,\r\n                companydrivers: action.payload\r\n            };\r\n        case DELETE_COMPANY_DRIVER:\r\n            return {\r\n                ...state,\r\n                companydriver: state.companydrivers.filter(companydriver=> companydriver.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_DRIVER:\r\n            return {\r\n                ...state,\r\n                companydriver: [...state.companydrivers, action.payload]\r\n            }\r\n        case GET_COMPANY_DRIVER:\r\n            return {\r\n                ...state,\r\n                companydriver:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_MANUFACTURING_PERSONELL,\r\n        GET_COMPANY_MANUFACTURING_PERSONELLS,\r\n        DELETE_COMPANY_MANUFACTURING_PERSONELL,\r\n        GET_COMPANY_MANUFACTURING_PERSONELL\r\n    } from '../types/companymanufacturingpersonellTypes';\r\n\r\nconst initialState = {\r\n    companymanufacturingpersonells: [],\r\n    companymanufacturingpersonell: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_MANUFACTURING_PERSONELLS:\r\n            return {\r\n                ...state,\r\n                companymanufacturingpersonells: action.payload\r\n            };\r\n        case DELETE_COMPANY_MANUFACTURING_PERSONELL:\r\n            return {\r\n                ...state,\r\n                companymanufacturingpersonell: state.companymanufacturingpersonells.filter(companymanufacturingpersonell=> companymanufacturingpersonell.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_MANUFACTURING_PERSONELL:\r\n            return {\r\n                ...state,\r\n                companymanufacturingpersonell: [...state.companymanufacturingpersonells, action.payload]\r\n            }\r\n        case GET_COMPANY_MANUFACTURING_PERSONELL:\r\n            return {\r\n                ...state,\r\n                companymanufacturingpersonell:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_INVENTORY_CONTROLLER,\r\n        GET_COMPANY_INVENTORY_CONTROLLERS,\r\n        DELETE_COMPANY_INVENTORY_CONTROLLER,\r\n        GET_COMPANY_INVENTORY_CONTROLLER\r\n    } from '../types/companyinventorycontrollerTypes';\r\n\r\nconst initialState = {\r\n    companyinventorycontrollers: [],\r\n    companyinventorycontroller: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_INVENTORY_CONTROLLERS:\r\n            return {\r\n                ...state,\r\n                companyinventorycontrollers: action.payload\r\n            };\r\n        case DELETE_COMPANY_INVENTORY_CONTROLLER:\r\n            return {\r\n                ...state,\r\n                companyinventorycontroller: state.companyinventorycontrollers.filter(companyinventorycontroller=> companyinventorycontroller.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_INVENTORY_CONTROLLER:\r\n            return {\r\n                ...state,\r\n                companyinventorycontroller: [...state.companyinventorycontrollers, action.payload]\r\n            }\r\n        case GET_COMPANY_INVENTORY_CONTROLLER:\r\n            return {\r\n                ...state,\r\n                companyinventorycontroller:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_COMPANY_SALESREP,\r\n        GET_COMPANY_SALESREPS,\r\n        DELETE_COMPANY_SALESREP,\r\n        GET_COMPANY_SALESREP\r\n    } from '../types/companysalesrepTypes';\r\n\r\nconst initialState = {\r\n    companysalesreps: [],\r\n    companysalesrep: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_COMPANY_SALESREPS:\r\n            return {\r\n                ...state,\r\n                companysalesreps: action.payload\r\n            };\r\n        case DELETE_COMPANY_SALESREP:\r\n            return {\r\n                ...state,\r\n                companysalesrep: state.companysalesreps.filter(companysalesrep=> companysalesrep.id !== action.payload)\r\n            };\r\n        case ADD_COMPANY_SALESREP:\r\n            return {\r\n                ...state,\r\n                companysalesrep: [...state.companysalesreps, action.payload]\r\n            }\r\n        case GET_COMPANY_SALESREP:\r\n            return {\r\n                ...state,\r\n                companysalesrep:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_PENDING_EMPLOYEE_LEAVE,\r\n        GET_PENDING_EMPLOYEE_LEAVES,\r\n        DELETE_PENDING_EMPLOYEE_LEAVE,\r\n        GET_PENDING_EMPLOYEE_LEAVE\r\n    } from '../types/pendingemployeeleaveTypes';\r\n\r\nconst initialState = {\r\n    pendingemployeeleaves: [],\r\n    pendingemployeeleave: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PENDING_EMPLOYEE_LEAVES:\r\n            return {\r\n                ...state,\r\n                pendingemployeeleaves: action.payload\r\n            };\r\n        case DELETE_PENDING_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                pendingemployeeleave: state.pendingemployeeleaves.filter(pendingemployeeleave=> pendingemployeeleave.id !== action.payload)\r\n            };\r\n        case ADD_PENDING_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                pendingemployeeleave: [...state.pendingemployeeleaves, action.payload]\r\n            }\r\n        case GET_PENDING_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                pendingemployeeleave:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_AUTHORISED_EMPLOYEE_LEAVE,\r\n        GET_AUTHORISED_EMPLOYEE_LEAVES,\r\n        DELETE_AUTHORISED_EMPLOYEE_LEAVE,\r\n        GET_AUTHORISED_EMPLOYEE_LEAVE\r\n    } from '../types/authorisedemployeeleaveTypes';\r\n\r\nconst initialState = {\r\n    authorisedemployeeleaves: [],\r\n    authorisedemployeeleave: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_AUTHORISED_EMPLOYEE_LEAVES:\r\n            return {\r\n                ...state,\r\n                authorisedemployeeleaves: action.payload\r\n            };\r\n        case DELETE_AUTHORISED_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                authorisedemployeeleave: state.authorisedemployeeleaves.filter(authorisedemployeeleave=> authorisedemployeeleave.id !== action.payload)\r\n            };\r\n        case ADD_AUTHORISED_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                authorisedemployeeleave: [...state.authorisedemployeeleaves, action.payload]\r\n            }\r\n        case GET_AUTHORISED_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                authorisedemployeeleave:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        ADD_DECLINED_EMPLOYEE_LEAVE,\r\n        GET_DECLINED_EMPLOYEE_LEAVES,\r\n        DELETE_DECLINED_EMPLOYEE_LEAVE,\r\n        GET_DECLINED_EMPLOYEE_LEAVE\r\n    } from '../types/declinedemployeeleaveTypes';\r\n\r\nconst initialState = {\r\n    declinedemployeeleaves: [],\r\n    declinedemployeeleave: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DECLINED_EMPLOYEE_LEAVES:\r\n            return {\r\n                ...state,\r\n                declinedemployeeleaves: action.payload\r\n            };\r\n        case DELETE_DECLINED_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                declinedemployeeleave: state.declinedemployeeleaves.filter(declinedemployeeleave=> declinedemployeeleave.id !== action.payload)\r\n            };\r\n        case ADD_DECLINED_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                declinedemployeeleave: [...state.declinedemployeeleaves, action.payload]\r\n            }\r\n        case GET_DECLINED_EMPLOYEE_LEAVE:\r\n            return {\r\n                ...state,\r\n                declinedemployeeleave:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_DEACTIVATED_CUSTOMERS\r\n    } from '../types/deactivatedcustomerTypes';\r\n\r\nconst initialState = {\r\n    deactivatedcustomers: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DEACTIVATED_CUSTOMERS:\r\n            return {\r\n                ...state,\r\n                deactivatedcustomers: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_CUSTOMER_ADDRESS,\r\n    GET_CUSTOMER_ADDRESSES ,\r\n    DELETE_CUSTOMER_ADDRESS,\r\n    GET_CUSTOMER_ADDRESS,\r\n    EDIT_CUSTOMER_ADDRESS\r\n} from '../types/customeraddressTypes';\r\n\r\nconst initialState = {\r\n    customeraddresses: [],\r\n    customeraddress: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CUSTOMER_ADDRESSES:\r\n            return {\r\n                ...state,\r\n                customeraddresses: action.payload\r\n            };\r\n        case DELETE_CUSTOMER_ADDRESS:\r\n            return {\r\n                ...state,\r\n                customeraddress: state.customeraddresses.filter(customeraddress=> customeraddress.id !== action.payload)\r\n            };\r\n        case ADD_CUSTOMER_ADDRESS:\r\n            return {\r\n                ...state,\r\n                customeraddress: [...state.customeraddresses, action.payload]\r\n            }\r\n        case GET_CUSTOMER_ADDRESS:\r\n            return {\r\n                ...state,\r\n                customeraddress:action.payload\r\n                };\r\n        case EDIT_CUSTOMER_ADDRESS:\r\n            const arrayList = state.customeraddresses;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                customeraddresses: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_ACTIVE_CUSTOMERS,\r\n    ADD_ACTIVE_CUSTOMER,\r\n    DELETE_ACTIVE_CUSTOMER,\r\n    EDIT_ACTIVE_CUSTOMER,\r\n    GET_ACTIVE_CUSTOMER\r\n    } from '../types/activecustomerTypes';\r\n\r\nconst initialState = {\r\n    activecustomers: [],\r\n    activecustomer: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ACTIVE_CUSTOMERS:\r\n            return {\r\n                ...state,\r\n                activecustomers: action.payload\r\n            };\r\n        case DELETE_ACTIVE_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                activecustomer: state.activecustomers.filter(activecustomer=> activecustomer.id !== action.payload)\r\n            };\r\n        case ADD_ACTIVE_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                activecustomer: [...state.activecustomers, action.payload]\r\n            }\r\n        case GET_ACTIVE_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                activecustomer:action.payload\r\n                };\r\n        case EDIT_ACTIVE_CUSTOMER:\r\n            const arrayList = state.activecustomers;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                activecustomers: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_CREDIT_NOTE, GET_CREDIT_NOTES, GET_CREDIT_NOTE, DELETE_CREDIT_NOTE } from '../types/creditnoteTypes';\r\n\r\nconst initialState = {\r\n    creditnotes: [],\r\n    creditnote: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CREDIT_NOTES:\r\n            return {\r\n                ...state,\r\n                creditnotes: action.payload\r\n            };\r\n        case DELETE_CREDIT_NOTE:\r\n            return {\r\n                ...state,\r\n                creditnote: state.creditnotes.filter(creditnote=> creditnote.id !== action.payload)\r\n            };\r\n        case ADD_CREDIT_NOTE:\r\n            return {\r\n                ...state,\r\n                creditnote: [...state.creditnotes, action.payload]\r\n            };\r\n        case GET_CREDIT_NOTE:\r\n            return {\r\n                ...state,\r\n                creditnote: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_PAYMENT, GET_PAYMENTS, GET_PAYMENT, DELETE_PAYMENT, EDIT_PAYMENT } from '../types/paymentTypes';\r\n\r\nconst initialState = {\r\n    payments: [],\r\n    payment: [],\r\n    loading: false,\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PAYMENTS:\r\n            return {\r\n                ...state,\r\n                payments: action.payload\r\n            };\r\n        case DELETE_PAYMENT:\r\n            return {\r\n                ...state,\r\n                payment: state.payments.filter(payment=> payment.id !== action.payload)\r\n            };\r\n        case ADD_PAYMENT:\r\n            return {\r\n                ...state,\r\n                payment: [...state.payments, action.payload]\r\n            };\r\n        case GET_PAYMENT:\r\n            return {\r\n                ...state,\r\n                payment: action.payload\r\n            };\r\n        case EDIT_PAYMENT:\r\n            const arrayList = state.payments;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                payments: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { GET_RECEIPTS, GET_RECEIPT, DELETE_RECEIPT } from '../types/receiptTypes';\r\n\r\nconst initialState = {\r\n    receipts: [],\r\n    receipt: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_RECEIPTS:\r\n            return {\r\n                ...state,\r\n                receipts: action.payload\r\n            };\r\n        case DELETE_RECEIPT:\r\n            return {\r\n                ...state,\r\n                receipt: state.receipts.filter(receipt=> receipt.id !== action.payload)\r\n            };\r\n        case GET_RECEIPT:\r\n            return {\r\n                ...state,\r\n                receipt: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_INVOICE_LINES } from '../types/invoicelineTypes';\r\n\r\nconst initialState = {\r\n    invoicelines: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVOICE_LINES:\r\n            return {\r\n                ...state,\r\n                invoicelines: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { ADD_SALES_GROUPS_PRICING_DISCOUNT, GET_SALES_GROUPS_PRICING_DISCOUNTS, GET_SALES_GROUPS_PRICING_DISCOUNT, DELETE_SALES_GROUPS_PRICING_DISCOUNT } from '../types/salesgroupspricingdiscountTypes';\r\n\r\nconst initialState = {\r\n    salesgroupspricingdiscounts: [],\r\n    salesgroupspricingdiscount: [],\r\n    loading: false\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SALES_GROUPS_PRICING_DISCOUNTS:\r\n            return {\r\n                ...state,\r\n                salesgroupspricingdiscounts: action.payload\r\n            };\r\n        case DELETE_SALES_GROUPS_PRICING_DISCOUNT:\r\n            return {\r\n                ...state,\r\n                salesgroupspricingdiscount: state.salesgroupspricingdiscounts.filter(salesgroupspricingdiscount=> salesgroupspricingdiscount.id !== action.payload)\r\n            };\r\n        case ADD_SALES_GROUPS_PRICING_DISCOUNT:\r\n            return {\r\n                ...state,\r\n                salesgroupspricingdiscount: [...state.salesgroupspricingdiscounts, action.payload]\r\n            };\r\n        case GET_SALES_GROUPS_PRICING_DISCOUNT:\r\n            return {\r\n                ...state,\r\n                salesgroupspricingdiscount: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_QUOTATIONS, GET_QUOTATION, DELETE_QUOTATION } from '../types/quotationTypes';\r\n\r\nconst initialState = {\r\n    quotations: [],\r\n    quotation: [],\r\n    loading: false,\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_QUOTATIONS:\r\n            return {\r\n                ...state,\r\n                quotations: action.payload\r\n            };\r\n        case DELETE_QUOTATION:\r\n            return {\r\n                ...state,\r\n                quotation: state.quotations.filter(quotation=> quotation.id !== action.payload)\r\n            };\r\n        case GET_QUOTATION:\r\n            return {\r\n                ...state,\r\n                quotation: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n        GET_UNVERIFIED_INVOICES,\r\n        DELETE_UNVERIFIED_INVOICE,\r\n        GET_UNVERIFIED_INVOICE\r\n    } from '../types/unverifiedinvoiceTypes';\r\n\r\nconst initialState = {\r\n    unverifiedinvoices: [],\r\n    unverifiedinvoice: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_UNVERIFIED_INVOICES:\r\n            return {\r\n                ...state,\r\n                unverifiedinvoices: action.payload\r\n            };\r\n        case DELETE_UNVERIFIED_INVOICE:\r\n            return {\r\n                ...state,\r\n                unverifiedinvoice: state.unverifiedinvoices.filter(unverifiedinvoice=> unverifiedinvoice.id !== action.payload)\r\n            };\r\n        case GET_UNVERIFIED_INVOICE:\r\n            return {\r\n                ...state,\r\n                unverifiedinvoice:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_OVERDUE_INVOICES ,\r\n    DELETE_OVERDUE_INVOICE,\r\n    GET_OVERDUE_INVOICE,\r\n} from '../types/overdueinvoiceTypes';\r\n\r\nconst initialState = {\r\n    overdueinvoices: [],\r\n    overdueinvoice: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_OVERDUE_INVOICES:\r\n            return {\r\n                ...state,\r\n                overdueinvoices: action.payload\r\n            };\r\n        case DELETE_OVERDUE_INVOICE:\r\n            return {\r\n                ...state,\r\n                overdueinvoice: state.overdueinvoices.filter(overdueinvoice=> overdueinvoice.id !== action.payload)\r\n            };\r\n        case GET_OVERDUE_INVOICE:\r\n            return {\r\n                ...state,\r\n                overdueinvoice:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_VOIDED_INVOICES ,\r\n    DELETE_VOIDED_INVOICE,\r\n    GET_VOIDED_INVOICE,\r\n} from '../types/voidedinvoiceTypes';\r\n\r\nconst initialState = {\r\n    voidedinvoices: [],\r\n    voidedinvoice: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_VOIDED_INVOICES:\r\n            return {\r\n                ...state,\r\n                voidedinvoices: action.payload\r\n            };\r\n        case DELETE_VOIDED_INVOICE:\r\n            return {\r\n                ...state,\r\n                voidedinvoice: state.voidedinvoices.filter(voidedinvoice=> voidedinvoice.id !== action.payload)\r\n            };\r\n        case GET_VOIDED_INVOICE:\r\n            return {\r\n                ...state,\r\n                voidedinvoice:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_REFUNDED_INVOICES ,\r\n    DELETE_REFUNDED_INVOICE,\r\n    GET_REFUNDED_INVOICE,\r\n} from '../types/refundedinvoiceTypes';\r\n\r\nconst initialState = {\r\n    refundedinvoices: [],\r\n    refundedinvoice: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_REFUNDED_INVOICES:\r\n            return {\r\n                ...state,\r\n                refundedinvoices: action.payload\r\n            };\r\n        case DELETE_REFUNDED_INVOICE:\r\n            return {\r\n                ...state,\r\n                refundedinvoice: state.refundedinvoices.filter(refundedinvoice=> refundedinvoice.id !== action.payload)\r\n            };\r\n        case GET_REFUNDED_INVOICE:\r\n            return {\r\n                ...state,\r\n                refundedinvoice:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    GET_FULLYPAID_NOT_YET_SALES_INVOICES ,\r\n    DELETE_FULLYPAID_NOT_YET_SALES_INVOICE,\r\n    GET_FULLYPAID_NOT_YET_SALES_INVOICE,\r\n} from '../types/fullypaidnotyetsalesinvoiceTypes';\r\n\r\nconst initialState = {\r\n    fullypaidnotyetsalesinvoices: [],\r\n    fullypaidnotyetsalesinvoice: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_FULLYPAID_NOT_YET_SALES_INVOICES:\r\n            return {\r\n                ...state,\r\n                fullypaidnotyetsalesinvoices: action.payload\r\n            };\r\n        case DELETE_FULLYPAID_NOT_YET_SALES_INVOICE:\r\n            return {\r\n                ...state,\r\n                fullypaidnotyetsalesinvoice: state.fullypaidnotyetsalesinvoices.filter(fullypaidnotyetsalesinvoice=> fullypaidnotyetsalesinvoice.id !== action.payload)\r\n            };\r\n        case GET_FULLYPAID_NOT_YET_SALES_INVOICE:\r\n            return {\r\n                ...state,\r\n                fullypaidnotyetsalesinvoice:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    ADD_SALE,\r\n    GET_SALES ,\r\n    DELETE_SALE,\r\n    GET_SALE,\r\n} from '../types/saleTypes';\r\n\r\nconst initialState = {\r\n    sales: [],\r\n    sale: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_SALES:\r\n            return {\r\n                ...state,\r\n                sales: action.payload\r\n            };\r\n        case DELETE_SALE:\r\n            return {\r\n                ...state,\r\n                sale: state.sales.filter(sale=> sale.id !== action.payload)\r\n            };\r\n        case ADD_SALE:\r\n            return {\r\n                ...state,\r\n                sale: [...state.sales, action.payload]\r\n            }\r\n        case GET_SALE:\r\n            return {\r\n                ...state,\r\n                sale:action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n        ADD_MANUFACTURED_STOCK_ITEM,\r\n        GET_MANUFACTURED_STOCK_ITEMS,\r\n        DELETE_MANUFACTURED_STOCK_ITEM,\r\n        GET_MANUFACTURED_STOCK_ITEM,\r\n        EDIT_MANUFACTURED_STOCK_ITEM\r\n    } from '../types/manufacturedstockitemTypes';\r\n\r\nconst initialState = {\r\n    manufacturedstockitems: [],\r\n    manufacturedstockitem: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_MANUFACTURED_STOCK_ITEMS:\r\n            return {\r\n                ...state,\r\n                manufacturedstockitems: action.payload\r\n            };\r\n        case DELETE_MANUFACTURED_STOCK_ITEM:\r\n            return {\r\n                ...state,\r\n                manufacturedstockitem: state.manufacturedstockitems.filter(manufacturedstockitem=> manufacturedstockitem.id !== action.payload)\r\n            };\r\n        case ADD_MANUFACTURED_STOCK_ITEM:\r\n            return {\r\n                ...state,\r\n                manufacturedstockitem: [...state.manufacturedstockitems, action.payload]\r\n            }\r\n        case GET_MANUFACTURED_STOCK_ITEM:\r\n            return {\r\n                ...state,\r\n                manufacturedstockitem:action.payload\r\n            };\r\n        case EDIT_MANUFACTURED_STOCK_ITEM:\r\n            const arrayList = state.manufacturedstockitems;\r\n            arrayList.splice(arrayList.findIndex(item => item.id === action.payload.data.id), 1 , action.payload.data);\r\n            return {\r\n                ...state,\r\n                manufacturedstockitems: arrayList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ENTRIES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   journalentries : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ENTRIES:\r\n            return {\r\n                ...state,\r\n                journalentries : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n\tmsg: {},\r\n\tstatus: null\r\n}\r\n\r\nexport default function (state=initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase GET_ERRORS:\r\n\t\t\treturn {\r\n\t\t\t\tmsg: action.payload.msg,\r\n\t\t\t\tstatus: action.payload.status\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { GET_MESSAGES, CREATE_MESSAGE } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state=initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase GET_MESSAGES:\r\n\t\t\treturn action.payload;\r\n\t\tcase CREATE_MESSAGE:\r\n\t\t\treturn (state=action.payload)\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { GET_PROCESSES } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   productionprocesses : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROCESSES:\r\n            return {\r\n                ...state,\r\n                productionprocesses: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_INVENTORY_ITEMS } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   inventoryitems: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVENTORY_ITEMS:\r\n            return {\r\n                ...state,\r\n                inventoryitems: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_CASH_DRAWERS } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   cashdrawers: [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_CASH_DRAWERS:\r\n            return {\r\n                ...state,\r\n                cashdrawers: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_INVOICES, ADD_INVOICE } from '../actions/types.js';\r\n\r\nconst initialState = {\r\n   invoices : [],\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INVOICES:\r\n            return {\r\n                ...state,\r\n                invoices : action.payload\r\n            };\r\n        case ADD_INVOICE:\r\n            return {\r\n                ...state,\r\n                invoice: [...state.invoices, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport accounttypescategorychoices from \"./accounttypescategorychoices\";\r\nimport accounttypesclassificationchoices from \"./accounttypesclassificationchoices\";\r\nimport assetsdepriciationmethodchoices from \"./assetsdepriciationmethodchoices\";\r\nimport assettypeschoices from \"./assettypeschoices\";\r\nimport accounttypechoices from \"./accounttypechoices\";\r\nimport billfrequencychoices from \"./billfrequencychoices\";\r\nimport accountbalancesheetcategorieschoices from \"./accountbalancesheetcategorieschoices\";\r\nimport interestintervalaccountchoices from \"./interestintervalaccountchoices\";\r\nimport accountinterestmethodchoices from \"./accountinterestmethodchoices\";\r\nimport inventoryvaluationperiodchoices from \"./inventoryvaluationperiodchoices\";\r\nimport inventoryvaluationmethodschoices from \"./inventoryvaluationmethodschoices\";\r\nimport inventorycheckfrequencychoices from \"./inventorycheckfrequencychoices\";\r\nimport inventorycheckdatechoices from \"./inventorycheckdatechoices\";\r\nimport unitofmeasurechoices from \"./unitofmeasurechoices\";\r\nimport customeraddresstypechoices from \"./customeraddresstypechoices\";\r\nimport employeesattendancestatuschoices from \"./employeesattendancestatuschoices\";\r\nimport employeestypechoices from \"./employeestypechoices\";\r\nimport billpaymentstatuschoices from \"./billpaymentstatuschoices\";\r\nimport supplieraddresstypechoices from \"./supplieraddresstypechoices\";\r\nimport supplierstatuschoices from \"./supplierstatuschoices\";\r\nimport customerstatuschoices from \"./customerstatuschoices\";\r\nimport billingchoices from \"./billingchoices\";\r\nimport billpaymentmethodschoices from \"./billpaymentmethodschoices\";\r\nimport invoicesalestypeschoices from \"./invoicesalestypeschoices\";\r\nimport inventoryorderpaymentmethodschoices from \"./inventoryorderpaymentmethodschoices\";\r\nimport manufactringshifttimechoices from \"./manufactringshifttimechoices\";\r\nimport eventprioritychoices from \"./eventprioritychoices\";\r\nimport eventparticipanttypeschoices from \"./eventparticipanttypeschoices\";\r\nimport eventreminderchoices from \"./eventreminderchoices\";\r\nimport eventtimechoices from \"./eventtimechoices\";\r\nimport eventiconchoices from \"./eventiconchoices\";\r\nimport eventrepeatchoices from \"./eventrepeatchoices\";\r\nimport employeepayrolltaxchoices from \"./employeepayrolltaxchoices\";\r\nimport natureofemploymentchoices from \"./natureofemploymentchoices\";\r\nimport employeeyearchoices from \"./employeeyearchoices\";\r\nimport employeetimesheetmonthchoices from \"./employeetimesheetmonthchoices\";\r\nimport employeepayslipstatuschoices from \"./employeepayslipstatuschoices\";\r\nimport employeepayrolldatechoices from \"./employeepayrolldatechoices\";\r\nimport employeedeductionmethods from \"./employeedeductionmethods\";\r\nimport employeepayfrequencies from \"./employeepayfrequencies\";\r\nimport employeelunchchoices from \"./employeelunchchoices\";\r\nimport employeeleavestatuschoices from \"./employeeleavestatuschoices\";\r\nimport employeeleavecategorychoices from \"./employeeleavecategorychoices\";\r\nimport employeecategorychoices from \"./employeecategorychoices\";\r\nimport employmentcontractterminationreasons from \"./employmentcontractterminationreasons\";\r\nimport accountingperiodschoices from \"./accountingperiodschoices\";\r\nimport journalentrytypeschoices from \"./journalentrytypeschoices\";\r\nimport employeesgenderchoices from \"./employeesgenderchoices\";\r\nimport inventorytypeschoices from \"./inventorytypeschoices\";\r\nimport productcomponentpricingchoices from \"./productcomponentpricingchoices\";\r\nimport equipmentcomponentconditionchoices from \"./equipmentcomponentconditionchoices\";\r\nimport inventoryorderstatuschoices from \"./inventoryorderstatuschoices\";\r\nimport invoicesaleschoices from \"./invoicesaleschoices\";\r\nimport invoicelinechoices from \"./invoicelinechoices\";\r\nimport manufacturingprocesschoices from \"./manufacturingprocesschoices\";\r\nimport customerpaymentmethodschoices from \"./customerpaymentmethodschoices\";\r\nimport processrateunittimechoices from \"./processrateunittimechoices\";\r\nimport manufacturingproducttypeschoices from \"./manufacturingproducttypeschoices\";\r\nimport billofmaterialslinechoices from \"./billofmaterialslinechoices\";\r\nimport processedproductsstockstatuschoices from \"./processedproductsstockstatuschoices\";\r\nimport accounts from \"./accounts\";\r\nimport interestbearingaccounts from \"./interestbearingaccounts\";\r\nimport journals from \"./journals\";\r\nimport ledgers from \"./ledgers\";\r\nimport accountingposts from \"./accountingposts\";\r\nimport workbooks from \"./workbooks\";\r\nimport accountingadjustments from \"./accountingadjustments\";\r\nimport debits from \"./debits\";\r\nimport credits from \"./credits\";\r\nimport fullypaidnotverifiedbills from \"./fullypaidnotverifiedbills\";\r\nimport fullypaidbills from \"./fullypaidbills\";\r\nimport unpostedandunadjustedjournalentries from \"./unpostedandunadjustedjournalentries\";\r\nimport unadjustedjournalentries from \"./unadjustedjournalentries\";\r\nimport unpostedjournalentries from \"./unpostedjournalentries\";\r\nimport postedjournalentries from \"./postedjournalentries\";\r\nimport inactiveaccounts from \"./inactiveaccounts\";\r\nimport assets from \"./assets\";\r\nimport taxes from \"./taxes\";\r\nimport currencies from \"./currencies\";\r\nimport bills from \"./bills\";\r\nimport billpayments from \"./billpayments\";\r\nimport unverifiedproductionprocesses from \"./unverifiedproductionprocesses\";\r\nimport verifiedproductionprocesses from \"./verifiedproductionprocesses\";\r\nimport processmachines from \"./processmachines\";\r\nimport processmachinegroups from \"./processmachinegroups\";\r\nimport shifts from \"./shifts\";\r\nimport shiftschedules from \"./shiftschedules\";\r\nimport processrates from \"./processrates\";\r\nimport productionorders from \"./productionorders\";\r\nimport manufacturingteams from \"./manufacturingteams\";\r\nimport manufacturingpersonels from \"./manufacturingpersonels\";\r\nimport processproducts from \"./processproducts\";\r\nimport wastegenerationreports from \"./wastegenerationreports\";\r\nimport processedproductstockreceipts from \"./processedproductstockreceipts\";\r\nimport processedproductstockadjustments from \"./processedproductstockadjustments\";\r\nimport processedproductstocktakes from \"./processedproductstocktakes\";\r\nimport inventorycategories from \"./inventorycategories\";\r\nimport debitnotes from \"./debitnotes\";\r\nimport inventoryorders from \"./inventoryorders\";\r\nimport inventoryorderpayments from \"./inventoryorderpayments\";\r\nimport warehouses from \"./warehouses\";\r\nimport inventorystockitems from \"./inventorystockitems\";\r\nimport storagemedias from \"./storagemedias\";\r\nimport orderitems from \"./orderitems\";\r\nimport inventoryreceipts from \"./inventoryreceipts\";\r\nimport stockadjustments from \"./stockadjustments\";\r\nimport inventorystocktakes from \"./inventorystocktakes\";\r\nimport activesuppliers from \"./activesuppliers\";\r\nimport deactivedsuppliers from \"./deactivedsuppliers\";\r\nimport supplieraddresses from \"./supplieraddresses\";\r\nimport rawmaterials from \"./rawmaterials\";\r\nimport equipments from \"./equipments\";\r\nimport upcomingevents from \"./upcomingevents\";\r\nimport consumables from \"./consumables\";\r\nimport completedevents from \"./completedevents\";\r\nimport eventconfigs from \"./eventconfigs\";\r\nimport fullyreceivedandtotalpaidfororders from \"./fullyreceivedandtotalpaidfororders\";\r\nimport fullyreceivedtotalpaidforandverifiedorders from \"./fullyreceivedtotalpaidforandverifiedorders\";\r\nimport employeeconfigs from \"./employeeconfigs\";\r\nimport employeecontracts from \"./employeecontracts\";\r\nimport employeecontractsterminations from \"./employeecontractsterminations\";\r\nimport employeedepartments from \"./employeedepartments\";\r\nimport employeeleaves from \"./employeeleaves\";\r\nimport employees from \"./employees\";\r\nimport employeepaygrades from \"./employeepaygrades\";\r\nimport employeeallowances from \"./employeeallowances\";\r\nimport employeepaydeductions from \"./employeepaydeductions\";\r\nimport employeepaycommissionrules from \"./employeepaycommissionrules\";\r\nimport employeepayrolltaxes from \"./employeepayrolltaxes\";\r\nimport employeepayrollschedules from \"./employeepayrollschedules\";\r\nimport employeepayrolldates from \"./employeepayrolldates\";\r\nimport employeepayslips from \"./employeepayslips\";\r\nimport employeeattendancetimesheets from \"./employeeattendancetimesheets\";\r\nimport companyshareholders from \"./companyshareholders\";\r\nimport companymanagers from \"./companymanagers\";\r\nimport companybookkeepers from \"./companybookkeepers\";\r\nimport companypayrollofficers from \"./companypayrollofficers\";\r\nimport companydrivers from \"./companydrivers\";\r\nimport companymanufacturingpersonells from \"./companymanufacturingpersonells\";\r\nimport companyinventorycontrollers from \"./companyinventorycontrollers\";\r\nimport companysalesreps from \"./companysalesreps\";\r\nimport pendingemployeeleaves from \"./pendingemployeeleaves\";\r\nimport authorisedemployeeleaves from \"./authorisedemployeeleaves\";\r\nimport declinedemployeeleaves from \"./declinedemployeeleaves\";\r\nimport deactivatedcustomers from \"./deactivatedcustomers\";\r\nimport customeraddresses from \"./customeraddresses\";\r\nimport activecustomers from \"./activecustomers\";\r\nimport creditnotes from \"./creditnotes\";\r\nimport payments from \"./payments\";\r\nimport receipts from \"./receipts\";\r\nimport invoicelines from \"./invoicelines\";\r\nimport salesgroupspricingdiscounts from \"./salesgroupspricingdiscounts\";\r\nimport quotations from \"./quotations\";\r\nimport unverifiedinvoices from \"./unverifiedinvoices\";\r\nimport overdueinvoices from \"./overdueinvoices\";\r\nimport voidedinvoices from \"./voidedinvoices\";\r\nimport refundedinvoices from \"./refundedinvoices\";\r\nimport fullypaidnotyetsalesinvoices from \"./fullypaidnotyetsalesinvoices\";\r\nimport sales from \"./sales\";\r\nimport manufacturedstockitems from \"./manufacturedstockitems\";\r\nimport journalentries from \"./journalentries\";\r\nimport errors from './errors';\r\nimport messages from './messages';\r\nimport productionprocesses from './productionprocesses';\r\nimport inventoryitems from './inventoryitems';\r\nimport cashdrawers from './cashdrawers';\r\nimport invoices from './invoices';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    errors,\r\n    messages,\r\n    cashdrawers,\r\n    invoices,\r\n    inventoryitems,\r\n    productionprocesses,\r\n    journalentries,\r\n    creditnotes,\r\n    manufacturedstockitems,\r\n    payments,\r\n    receipts,\r\n    invoicelines,\r\n    salesgroupspricingdiscounts,\r\n    quotations,\r\n    unverifiedinvoices,\r\n    overdueinvoices,\r\n    voidedinvoices,\r\n    refundedinvoices,\r\n    fullypaidnotyetsalesinvoices,\r\n    sales,\r\n    deactivatedcustomers,\r\n    customeraddresses,\r\n    activecustomers,\r\n    companyshareholders,\r\n    companymanagers,\r\n    companybookkeepers,\r\n    companypayrollofficers,\r\n    companydrivers,\r\n    companymanufacturingpersonells,\r\n    companyinventorycontrollers,\r\n    companysalesreps,\r\n    pendingemployeeleaves,\r\n    authorisedemployeeleaves,\r\n    declinedemployeeleaves,\r\n    employeeconfigs,\r\n    employees,\r\n    employeecontracts,\r\n    employeecontractsterminations,\r\n    employeedepartments,\r\n    employeeleaves,\r\n    employeepaygrades,\r\n    employeeallowances,\r\n    employeepaydeductions,\r\n    employeepaycommissionrules,\r\n    employeepayrolltaxes,\r\n    employeepayrollschedules,\r\n    employeepayrolldates,\r\n    employeepayslips,\r\n    employeeattendancetimesheets,\r\n    accounttypescategorychoices,\r\n    assettypeschoices,\r\n    inventorycategories,\r\n    debitnotes,\r\n    eventconfigs,\r\n    completedevents,\r\n    upcomingevents,\r\n    fullyreceivedtotalpaidforandverifiedorders,\r\n    fullyreceivedandtotalpaidfororders,\r\n    consumables,\r\n    equipments,\r\n    rawmaterials,\r\n    supplieraddresses,\r\n    deactivedsuppliers,\r\n    activesuppliers,\r\n    inventorystocktakes,\r\n    inventoryreceipts,\r\n    stockadjustments,\r\n    orderitems,\r\n    storagemedias,\r\n    inventorystockitems,\r\n    warehouses,\r\n    inventoryorderpayments,\r\n    inventoryorders,\r\n    processedproductstocktakes,\r\n    processedproductstockadjustments,\r\n    processedproductstockreceipts,\r\n    wastegenerationreports,\r\n    productionorders,\r\n    processproducts,\r\n    manufacturingpersonels,\r\n    manufacturingteams,\r\n    shiftschedules,\r\n    processrates,\r\n    shifts,\r\n    processmachines,\r\n    processmachinegroups,\r\n    verifiedproductionprocesses,\r\n    inactiveaccounts,\r\n    assets,\r\n    unverifiedproductionprocesses,\r\n    billpayments,\r\n    bills,\r\n    currencies,\r\n    taxes,\r\n    postedjournalentries,\r\n    unpostedjournalentries,\r\n    unadjustedjournalentries,\r\n    unpostedandunadjustedjournalentries,\r\n    fullypaidbills,\r\n    fullypaidnotverifiedbills,\r\n    credits,\r\n    debits,\r\n    workbooks,\r\n    accountingadjustments,\r\n    ledgers,\r\n    accountingposts,\r\n    accounts,\r\n    journals,\r\n    interestbearingaccounts,\r\n    processedproductsstockstatuschoices,\r\n    billofmaterialslinechoices,\r\n    manufacturingproducttypeschoices,\r\n    processrateunittimechoices,\r\n    customerpaymentmethodschoices,\r\n    invoicesaleschoices,\r\n    manufacturingprocesschoices,\r\n    invoicelinechoices,\r\n    inventoryorderstatuschoices,\r\n    productcomponentpricingchoices,\r\n    equipmentcomponentconditionchoices,\r\n    inventorytypeschoices,\r\n    employeesgenderchoices,\r\n    accountingperiodschoices,\r\n    journalentrytypeschoices,\r\n    employmentcontractterminationreasons,\r\n    employeecategorychoices,\r\n    employeeleavecategorychoices,\r\n    employeeleavestatuschoices,\r\n    employeelunchchoices,\r\n    employeepayfrequencies,\r\n    employeedeductionmethods,\r\n    employeepayrolldatechoices,\r\n    employeepayslipstatuschoices,\r\n    employeetimesheetmonthchoices,\r\n    employeeyearchoices,\r\n    natureofemploymentchoices,\r\n    employeepayrolltaxchoices,\r\n    eventrepeatchoices,\r\n    eventiconchoices,\r\n    eventtimechoices,\r\n    eventreminderchoices,\r\n    eventparticipanttypeschoices,\r\n    manufactringshifttimechoices,\r\n    eventprioritychoices,\r\n    billingchoices,\r\n    inventoryorderpaymentmethodschoices,\r\n    invoicesalestypeschoices,\r\n    billpaymentmethodschoices,\r\n    customerstatuschoices,\r\n    supplierstatuschoices,\r\n    supplieraddresstypechoices,\r\n    billpaymentstatuschoices,\r\n    employeestypechoices,\r\n    unitofmeasurechoices,\r\n    employeesattendancestatuschoices,\r\n    customeraddresstypechoices,\r\n    inventorycheckdatechoices,\r\n    inventorycheckfrequencychoices,\r\n    inventoryvaluationmethodschoices,\r\n    inventoryvaluationperiodchoices,\r\n    accountinterestmethodchoices,\r\n    interestintervalaccountchoices,\r\n    accountbalancesheetcategorieschoices,\r\n    billfrequencychoices,\r\n    accounttypechoices,\r\n    accounttypesclassificationchoices,\r\n    assetsdepriciationmethodchoices,\r\n\r\n});\r\n","export const GET_ACCOUNT_TYPES_CATEGORY_CHOICES = 'GET_ACCOUNT_TYPES_CATEGORY_CHOICES';\r\nexport const GET_ACCOUNT_TYPES_CLASSIFICATION_CHOICES = 'GET_ACCOUNT_TYPES_CLASSIFICATION_CHOICES';\r\nexport const GET_ASSETS_DEPRECIATION_METHOD_CHOICES = 'GET_ASSETS_DEPRECIATION_METHOD_CHOICES';\r\nexport const GET_ASSET_TYPES_CHOICES = 'GET_ASSET_TYPES_CHOICES';\r\nexport const GET_ACCOUNT_TYPE_CHOICES = 'GET_ACCOUNT_TYPE_CHOICES';\r\nexport const GET_BILL_FREQUENCY_CHOICES = 'GET_BILL_FREQUENCY_CHOICES';\r\nexport const GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES = 'GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES';\r\nexport const GET_INTEREST_INTERVAL_ACCOUNT_CHOICES = 'GET_INTEREST_INTERVAL_ACCOUNT_CHOICES';\r\nexport const GET_ACCOUNT_INTEREST_METHOD_CHOICES = 'GET_ACCOUNT_INTEREST_METHOD_CHOICES';\r\nexport const GET_INVENTORY_VALUATION_PERIOD_CHOICES = 'GET_INVENTORY_VALUATION_PERIOD_CHOICES';\r\nexport const GET_INVENTORY_VALUATION_METHODS_CHOICES = 'GET_INVENTORY_VALUATION_METHODS_CHOICES';\r\nexport const GET_INVENTORY_CHECK_FREQUENCY_CHOICES = 'GET_INVENTORY_CHECK_FREQUENCY_CHOICES';\r\nexport const GET_INVENTORY_CHECK_DATE_CHOICES = 'GET_INVENTORY_CHECK_DATE_CHOICES';\r\nexport const GET_UNIT_OF_MEASURE_CHOICES = 'GET_UNIT_OF_MEASURE_CHOICES';\r\nexport const GET_CUSTOMER_ADDRESS_TYPE_CHOICES = 'GET_CUSTOMER_ADDRESS_TYPE_CHOICES';\r\nexport const GET_EMPLOYEES_ATTENDANCE_STATUS_CHOICES = 'GET_EMPLOYEES_ATTENDANCE_STATUS_CHOICES';\r\nexport const GET_EMPLOYEES_TYPE_CHOICES = 'GET_EMPLOYEES_TYPE_CHOICES';\r\nexport const GET_BILL_PAYMENT_STATUS_CHOICES = 'GET_BILL_PAYMENT_STATUS_CHOICES';\r\nexport const GET_SUPPLIER_ADDRESS_TYPE_CHOICES = 'GET_SUPPLIER_ADDRESS_TYPE_CHOICES';\r\nexport const GET_SUPPLIER_STATUS_CHOICES = 'GET_SUPPLIER_STATUS_CHOICES';\r\nexport const GET_CUSTOMER_STATUS_CHOICES = 'GET_CUSTOMER_STATUS_CHOICES';\r\nexport const GET_BILLING_CHOICES = 'GET_BILLING_CHOICES';\r\nexport const GET_BILL_PAYMENT_METHODS_CHOICES = 'GET_BILL_PAYMENT_METHODS_CHOICES';\r\nexport const GET_INVOICE_SALES_TYPES_CHOICES = 'GET_INVOICE_SALES_TYPES_CHOICES';\r\nexport const GET_INVENTORY_ORDER_PAYMENT_METHODS_CHOICES = 'GET_INVENTORY_ORDER_PAYMENT_METHODS_CHOICES';\r\nexport const GET_MANUFACTURING_SHIFT_TIME_CHOICES = 'GET_MANUFACTURING_SHIFT_TIME_CHOICES';\r\nexport const GET_EVENT_PRIORITY_CHOICES = 'GET_EVENT_PRIORITY_CHOICES';\r\nexport const GET_EVENT_PARTICIPANT_TYPES_CHOICES = 'GET_EVENT_PARTICIPANT_TYPES_CHOICES';\r\nexport const GET_EVENT_REMINDER_CHOICES = 'GET_EVENT_REMINDER_CHOICES';\r\nexport const GET_EVENT_TIME_CHOICES = 'GET_EVENT_TIME_CHOICES';\r\nexport const GET_EVENT_ICON_CHOICES = 'GET_EVENT_ICON_CHOICES';\r\nexport const GET_EVENT_REPEAT_CHOICES = 'GET_EVENT_REPEAT_CHOICES';\r\nexport const GET_EMPLOYEE_PAYROLL_TAX_CHOICES = 'GET_EMPLOYEE_PAYROLL_TAX_CHOICES';\r\nexport const GET_NATURE_OF_EMPLOYMENT_CHOICES = 'GET_NATURE_OF_EMPLOYMENT_CHOICES';\r\nexport const GET_EMPLOYEE_YEAR_CHOICES = 'GET_EMPLOYEE_YEAR_CHOICES';\r\nexport const GET_EMPLOYEE_TIMESHEET_MONTH_CHOICES = 'GET_EMPLOYEE_TIMESHEET_MONTH_CHOICES';\r\nexport const GET_EMPLOYEE_PAYSLIP_STATUS_CHOICES = 'GET_EMPLOYEE_PAYSLIP_STATUS_CHOICES';\r\nexport const GET_EMPLOYEE_PAYROLL_DATE_CHOICES = 'GET_EMPLOYEE_PAYROLL_DATE_CHOICES';\r\nexport const GET_EMPLOYEE_DEDUCTION_METHODS = 'GET_EMPLOYEE_DEDUCTION_METHODS';\r\nexport const GET_EMPLOYEE_PAY_FREQUENCIES = 'GET_EMPLOYEE_PAY_FREQUENCIES';\r\nexport const GET_EMPLOYEE_LUNCH_CHOICES = 'GET_EMPLOYEE_LUNCH_CHOICES';\r\nexport const GET_EMPLOYEE_LEAVE_STATUS_CHOICES = 'GET_EMPLOYEE_LEAVE_STATUS_CHOICES';\r\nexport const GET_EMPLOYEE_LEAVE_CATEGORY_CHOICES = 'GET_EMPLOYEE_LEAVE_CATEGORY_CHOICES';\r\nexport const GET_EMPLOYEE_CATEGORY_CHOICES = 'GET_EMPLOYEE_CATEGORY_CHOICES';\r\nexport const GET_EMPLOYMENT_CONTRACT_TERMINATION_REASONS = 'GET_EMPLOYMENT_CONTRACT_TERMINATION_REASONS';\r\nexport const GET_ACCOUNTING_PERIODS_CHOICES = 'GET_ACCOUNTING_PERIODS_CHOICES';\r\nexport const GET_JOURNAL_ENTRY_TYPES_CHOICES = 'GET_JOURNAL_ENTRY_TYPES_CHOICES';\r\nexport const GET_EMPLOYEES_GENDER_CHOICES = 'GET_EMPLOYEES_GENDER_CHOICES';\r\nexport const GET_INVENTORY_TYPES_CHOICES = 'GET_INVENTORY_TYPES_CHOICES';\r\nexport const GET_PRODUCT_COMPONENT_PRICING_CHOICES = 'GET_PRODUCT_COMPONENT_PRICING_CHOICES';\r\nexport const GET_EQUIPMENT_COMPONENT_CONDITION_CHOICES = 'GET_EQUIPMENT_COMPONENT_CONDITION_CHOICES';\r\nexport const GET_INVENTORY_ORDER_STATUS_CHOICES = 'GET_INVENTORY_ORDER_STATUS_CHOICES';\r\nexport const GET_INVOICE_SALES_CHOICES = 'GET_INVOICE_SALES_CHOICES';\r\nexport const GET_INVOICE_LINE_CHOICES = 'GET_INVOICE_LINE_CHOICES';\r\nexport const GET_MANUFACTURING_PROCESS_CHOICES = 'GET_MANUFACTURING_PROCESS_CHOICES';\r\nexport const GET_CUSTOMER_PAYMENT_METHODS_CHOICES = 'GET_CUSTOMER_PAYMENT_METHODS_CHOICES';\r\nexport const GET_PROCESS_RATE_UNIT_TIME_CHOICES = 'GET_PROCESS_RATE_UNIT_TIME_CHOICES';\r\nexport const GET_MANUFACTURING_PRODUCT_TYPES_CHOICES = 'GET_MANUFACTURING_PRODUCT_TYPES_CHOICES';\r\nexport const GET_BILL_OF_MATERIALS_LINE_CHOICES = 'GET_BILL_OF_MATERIALS_LINE_CHOICES';\r\nexport const GET_PROCESSED_PRODUCTS_STOCK_STATUS_CHOICES = 'GET_PROCESSED_PRODUCTS_STOCK_STATUS_CHOICES';\r\nexport const GET_ENTRIES = 'GET_ENTRIES';\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_MESSAGES = 'GET_MESSAGES';\r\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\r\nexport const ADD_PROCESS = 'ADD_PROCESS';\r\nexport const GET_PROCESSES = 'GET_PROCESSES';\r\nexport const ADD_INVOICE = 'ADD_INVOICE';\r\nexport const GET_INVOICES = 'GET_INVOICES';\r\nexport const GET_INVENTORY_ITEMS = 'GET_INVENTORY_ITEMS';\r\nexport const GET_CASH_DRAWERS = 'GET_CASH_DRAWERS';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const GET_CREDIT_NOTES = 'GET_CREDIT_NOTES';\r\nexport const DELETE_CREDIT_NOTE = 'DELETE_CREDIT_NOTE';\r\nexport const ADD_CREDIT_NOTE = 'ADD_CREDIT_NOTE';\r\nexport const GET_CREDIT_NOTE = 'GET_CREDIT_NOTE';\r\n","export const ADD_MANUFACTURED_STOCK_ITEM = 'ADD_MANUFACTURED_STOCK_ITEM';\r\nexport const GET_MANUFACTURED_STOCK_ITEMS = 'GET_MANUFACTURED_STOCK_ITEMS';\r\nexport const DELETE_MANUFACTURED_STOCK_ITEM = 'DELETE_MANUFACTURED_STOCK_ITEM';\r\nexport const GET_MANUFACTURED_STOCK_ITEM = 'GET_MANUFACTURED_STOCK_ITEM';\r\nexport const EDIT_MANUFACTURED_STOCK_ITEM = 'EDIT_MANUFACTURED_STOCK_ITEM';\r\n","export const GET_PAYMENTS = 'GET_PAYMENTS';\r\nexport const DELETE_PAYMENT = 'DELETE_PAYMENT';\r\nexport const ADD_PAYMENT = 'ADD_PAYMENT';\r\nexport const GET_PAYMENT = 'GET_PAYMENT';\r\nexport const EDIT_PAYMENT = 'EDIT_PAYMENT';\r\n\r\n","export const GET_RECEIPTS = 'GET_RECEIPTS';\r\nexport const DELETE_RECEIPT = 'DELETE_RECEIPT';\r\nexport const GET_RECEIPT = 'GET_RECEIPT';\r\n","export const GET_INVOICE_LINES = 'GET_INVOICE_LINES';\r\n","export const GET_SALES_GROUPS_PRICING_DISCOUNTS = 'GET_SALES_GROUPS_PRICING_DISCOUNTS';\r\nexport const DELETE_SALES_GROUPS_PRICING_DISCOUNT = 'DELETE_SALES_GROUPS_PRICING_DISCOUNT';\r\nexport const ADD_SALES_GROUPS_PRICING_DISCOUNT = 'ADD_SALES_GROUPS_PRICING_DISCOUNT';\r\nexport const GET_SALES_GROUPS_PRICING_DISCOUNT = 'GET_SALES_GROUPS_PRICING_DISCOUNT';\r\n","export const GET_QUOTATIONS = 'GET_QUOTATIONS';\r\nexport const DELETE_QUOTATION = 'DELETE_QUOTATION';\r\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\r\nexport const GET_QUOTATION = 'GET_QUOTATION';\r\n","export const GET_UNVERIFIED_INVOICES = 'GET_UNVERIFIED_INVOICES';\r\nexport const DELETE_UNVERIFIED_INVOICE = 'DELETE_UNVERIFIED_INVOICE';\r\nexport const GET_UNVERIFIED_INVOICE = 'GET_UNVERIFIED_INVOICE';\r\n","export const GET_OVERDUE_INVOICES = 'GET_OVERDUE_INVOICES';\r\nexport const DELETE_OVERDUE_INVOICE = 'DELETE_OVERDUE_INVOICE';\r\nexport const GET_OVERDUE_INVOICE = 'GET_OVERDUE_INVOICE';\r\n","export const GET_VOIDED_INVOICES = 'GET_VOIDED_INVOICES';\r\nexport const DELETE_VOIDED_INVOICE = 'DELETE_VOIDED_INVOICE';\r\nexport const GET_VOIDED_INVOICE = 'GET_VOIDED_INVOICE';\r\n","export const GET_REFUNDED_INVOICES = 'GET_REFUNDED_INVOICES';\r\nexport const DELETE_REFUNDED_INVOICE = 'DELETE_REFUNDED_INVOICE';\r\nexport const GET_REFUNDED_INVOICE = 'GET_REFUNDED_INVOICE';\r\n","export const GET_FULLYPAID_NOT_YET_SALES_INVOICES = 'GET_FULLYPAID_NOT_YET_SALES_INVOICES';\r\nexport const DELETE_FULLYPAID_NOT_YET_SALES_INVOICE = 'DELETE_FULLYPAID_NOT_YET_SALES_INVOICE';\r\nexport const GET_FULLYPAID_NOT_YET_SALES_INVOICE = 'GET_FULLYPAID_NOT_YET_SALES_INVOICE';\r\n","export const GET_SALES = 'GET_SALES';\r\nexport const DELETE_SALE = 'DELETE_SALE';\r\nexport const GET_SALE = 'GET_SALE';\r\nexport const ADD_SALE = 'ADD_SALE';\r\n","export const GET_DEACTIVATED_CUSTOMERS = 'GET_DEACTIVATED_CUSTOMERS'\r\n","export const ADD_CUSTOMER_ADDRESS = 'ADD_CUSTOMER_ADDRESS';\r\nexport const GET_CUSTOMER_ADDRESSES = 'GET_CUSTOMER_ADDRESSES';\r\nexport const DELETE_CUSTOMER_ADDRESS = 'DELETE_CUSTOMER_ADDRESS';\r\nexport const GET_CUSTOMER_ADDRESS = 'GET_CUSTOMER_ADDRESS';\r\nexport const EDIT_CUSTOMER_ADDRESS = 'EDIT_CUSTOMER_ADDRESS';\r\n","export const GET_ACTIVE_CUSTOMERS = 'GET_ACTIVE_CUSTOMERS';\r\nexport const ADD_ACTIVE_CUSTOMER = 'ADD_ACTIVE_CUSTOMER';\r\nexport const DELETE_ACTIVE_CUSTOMER = 'DELETE_ACTIVE_CUSTOMER';\r\nexport const EDIT_ACTIVE_CUSTOMER = 'EDIT_ACTIVE_CUSTOMER';\r\nexport const GET_ACTIVE_CUSTOMER = 'GET_ACTIVE_CUSTOMER'\r\n","export const ADD_COMPANY_SHAREHOLDER = 'ADD_COMPANY_SHAREHOLDER';\r\nexport const GET_COMPANY_SHAREHOLDERS = 'GET_COMPANY_SHAREHOLDERS';\r\nexport const DELETE_COMPANY_SHAREHOLDER = 'DELETE_COMPANY_SHAREHOLDER';\r\nexport const GET_COMPANY_SHAREHOLDER = 'GET_COMPANY_SHAREHOLDER';\r\n","export const ADD_COMPANY_MANAGER = 'ADD_COMPANY_MANAGER';\r\nexport const GET_COMPANY_MANAGERS = 'GET_COMPANY_MANAGERS';\r\nexport const DELETE_COMPANY_MANAGER = 'DELETE_COMPANY_MANAGER';\r\nexport const GET_COMPANY_MANAGER = 'GET_COMPANY_MANAGER';\r\n","export const ADD_COMPANY_BOOKKEEPER = 'ADD_COMPANY_BOOKKEEPER';\r\nexport const GET_COMPANY_BOOKKEEPERS = 'GET_COMPANY_BOOKKEEPERS';\r\nexport const DELETE_COMPANY_BOOKKEEPER = 'DELETE_COMPANY_BOOKKEEPER';\r\nexport const GET_COMPANY_BOOKKEEPER = 'GET_COMPANY_BOOKKEEPER';\r\n","export const ADD_COMPANY_PAYROLL_OFFICER = 'ADD_COMPANY_PAYROLL_OFFICER';\r\nexport const GET_COMPANY_PAYROLL_OFFICERS = 'GET_COMPANY_PAYROLL_OFFICERS';\r\nexport const DELETE_COMPANY_PAYROLL_OFFICER = 'DELETE_COMPANY_PAYROLL_OFFICER';\r\nexport const GET_COMPANY_PAYROLL_OFFICER = 'GET_COMPANY_PAYROLL_OFFICER';\r\n","export const ADD_COMPANY_DRIVER = 'ADD_COMPANY_DRIVER';\r\nexport const GET_COMPANY_DRIVERS = 'GET_COMPANY_DRIVERS';\r\nexport const DELETE_COMPANY_DRIVER = 'DELETE_COMPANY_DRIVER';\r\nexport const GET_COMPANY_DRIVER = 'GET_COMPANY_DRIVER';\r\n","export const ADD_COMPANY_MANUFACTURING_PERSONELL = 'ADD_COMPANY_MANUFACTURING_PERSONELL';\r\nexport const GET_COMPANY_MANUFACTURING_PERSONELLS = 'GET_COMPANY_MANUFACTURING_PERSONELLS';\r\nexport const DELETE_COMPANY_MANUFACTURING_PERSONELL = 'DELETE_COMPANY_MANUFACTURING_PERSONELL';\r\nexport const GET_COMPANY_MANUFACTURING_PERSONELL = 'GET_COMPANY_MANUFACTURING_PERSONELL';\r\n","export const ADD_COMPANY_INVENTORY_CONTROLLER = 'ADD_COMPANY_INVENTORY_CONTROLLER';\r\nexport const GET_COMPANY_INVENTORY_CONTROLLERS = 'GET_COMPANY_INVENTORY_CONTROLLERS';\r\nexport const DELETE_COMPANY_INVENTORY_CONTROLLER = 'DELETE_COMPANY_INVENTORY_CONTROLLER';\r\nexport const GET_COMPANY_INVENTORY_CONTROLLER = 'GET_COMPANY_INVENTORY_CONTROLLER';\r\n","export const ADD_COMPANY_SALESREP = 'ADD_COMPANY_SALESREP';\r\nexport const GET_COMPANY_SALESREPS = 'GET_COMPANY_SALESREPS';\r\nexport const DELETE_COMPANY_SALESREP = 'DELETE_COMPANY_SALESREP';\r\nexport const GET_COMPANY_SALESREP = 'GET_COMPANY_SALESREP';\r\n","export const ADD_PENDING_EMPLOYEE_LEAVE = 'ADD_PENDING_EMPLOYEE_LEAVE';\r\nexport const GET_PENDING_EMPLOYEE_LEAVES = 'GET_PENDING_EMPLOYEE_LEAVES';\r\nexport const DELETE_PENDING_EMPLOYEE_LEAVE = 'DELETE_PENDING_EMPLOYEE_LEAVE';\r\nexport const GET_PENDING_EMPLOYEE_LEAVE = 'GET_PENDING_EMPLOYEE_LEAVE';\r\n","export const ADD_AUTHORISED_EMPLOYEE_LEAVE = 'ADD_AUTHORISED_EMPLOYEE_LEAVE';\r\nexport const GET_AUTHORISED_EMPLOYEE_LEAVES = 'GET_AUTHORISED_EMPLOYEE_LEAVES';\r\nexport const DELETE_AUTHORISED_EMPLOYEE_LEAVE = 'DELETE_AUTHORISED_EMPLOYEE_LEAVE';\r\nexport const GET_AUTHORISED_EMPLOYEE_LEAVE = 'GET_AUTHORISED_EMPLOYEE_LEAVE';\r\n","export const ADD_DECLINED_EMPLOYEE_LEAVE = 'ADD_DECLINED_EMPLOYEE_LEAVE';\r\nexport const GET_DECLINED_EMPLOYEE_LEAVES = 'GET_DECLINED_EMPLOYEE_LEAVES';\r\nexport const DELETE_DECLINED_EMPLOYEE_LEAVE = 'DELETE_DECLINED_EMPLOYEE_LEAVE';\r\nexport const GET_DECLINED_EMPLOYEE_LEAVE = 'GET_DECLINED_EMPLOYEE_LEAVE';\r\n","export const ADD_EMPLOYEE_CONFIG = \"ADD_EMPLOYEE_CONFIG\";\r\n","export const GET_EMPLOYEES = 'GET_EMPLOYEES';\r\nexport const ADD_EMPLOYEE = 'ADD_EMPLOYEE';\r\n","export const ADD_EMPLOYEE_CONTRACT = \"ADD_EMPLOYEE_CONTRACT\";\r\nexport const GET_EMPLOYEE_CONTRACTS = \"GET_EMPLOYEE_CONTRACTS\";\r\nexport const GET_EMPLOYEE_CONTRACT = \"GET_EMPLOYEE_CONTRACT\";\r\nexport const DELETE_EMPLOYEE_CONTRACT = \"DELETE_EMPLOYEE_CONTRACT\";\r\nexport const EDIT_EMPLOYEE_CONTRACT = \"EDIT_EMPLOYEE_CONTRACT\";\r\n","export const ADD_EMPLOYEE_CONTRACTS_TERMINATION = \"ADD_EMPLOYEE_CONTRACTS_TERMINATION\";\r\nexport const GET_EMPLOYEE_CONTRACTS_TERMINATIONS = \"GET_EMPLOYEE_CONTRACTS_TERMINATIONS\";\r\nexport const GET_EMPLOYEE_CONTRACTS_TERMINATION = \"GET_EMPLOYEE_CONTRACTS_TERMINATION\";\r\nexport const DELETE_EMPLOYEE_CONTRACTS_TERMINATION = \"DELETE_EMPLOYEE_CONTRACTS_TERMINATION\";\r\nexport const EDIT_EMPLOYEE_CONTRACTS_TERMINATION = \"EDIT_EMPLOYEE_CONTRACTS_TERMINATION\";\r\n","export const ADD_EMPLOYEE_DEPARTMENT = \"ADD_EMPLOYEE_DEPARTMENT\";\r\nexport const GET_EMPLOYEE_DEPARTMENTS = \"GET_EMPLOYEE_DEPARTMENTS\";\r\nexport const GET_EMPLOYEE_DEPARTMENT = \"GET_EMPLOYEE_DEPARTMENT\";\r\nexport const DELETE_EMPLOYEE_DEPARTMENT = \"DELETE_EMPLOYEE_DEPARTMENT\";\r\nexport const EDIT_EMPLOYEE_DEPARTMENT = \"EDIT_EMPLOYEE_DEPARTMENT\";\r\n","export const ADD_EMPLOYEE_LEAVE = \"ADD_EMPLOYEE_LEAVE\";\r\nexport const GET_EMPLOYEE_LEAVES = \"GET_EMPLOYEE_LEAVES\";\r\nexport const GET_EMPLOYEE_LEAVE = \"GET_EMPLOYEE_LEAVE\";\r\nexport const DELETE_EMPLOYEE_LEAVE = \"DELETE_EMPLOYEE_LEAVE\";\r\nexport const EDIT_EMPLOYEE_LEAVE = \"EDIT_EMPLOYEE_LEAVE\";\r\n","export const ADD_EMPLOYEE_PAYGRADE = \"ADD_EMPLOYEE_PAYGRADE\";\r\nexport const GET_EMPLOYEE_PAYGRADES = \"GET_EMPLOYEE_PAYGRADES\";\r\nexport const GET_EMPLOYEE_PAYGRADE = \"GET_EMPLOYEE_PAYGRADE\";\r\nexport const DELETE_EMPLOYEE_PAYGRADE = \"DELETE_EMPLOYEE_PAYGRADE\";\r\nexport const EDIT_EMPLOYEE_PAYGRADE = \"EDIT_EMPLOYEE_PAYGRADE\";\r\n","export const ADD_EMPLOYEE_ALLOWANCE = \"ADD_EMPLOYEE_ALLOWANCE\";\r\nexport const GET_EMPLOYEE_ALLOWANCES = \"GET_EMPLOYEE_ALLOWANCES\";\r\nexport const GET_EMPLOYEE_ALLOWANCE = \"GET_EMPLOYEE_ALLOWANCE\";\r\nexport const DELETE_EMPLOYEE_ALLOWANCE = \"DELETE_EMPLOYEE_ALLOWANCE\";\r\nexport const EDIT_EMPLOYEE_ALLOWANCE = \"EDIT_EMPLOYEE_ALLOWANCE\";\r\n","export const ADD_EMPLOYEE_PAY_DEDUCTION = \"ADD_EMPLOYEE_PAY_DEDUCTION\";\r\nexport const GET_EMPLOYEE_PAY_DEDUCTIONS = \"GET_EMPLOYEE_PAY_DEDUCTIONS\";\r\nexport const GET_EMPLOYEE_PAY_DEDUCTION = \"GET_EMPLOYEE_PAY_DEDUCTION\";\r\nexport const DELETE_EMPLOYEE_PAY_DEDUCTION = \"DELETE_EMPLOYEE_PAY_DEDUCTION\";\r\nexport const EDIT_EMPLOYEE_PAY_DEDUCTION = \"EDIT_EMPLOYEE_PAY_DEDUCTION\";\r\n","export const ADD_EMPLOYEE_PAY_COMMISSION_RULE = \"ADD_EMPLOYEE_PAY_COMMISSION_RULE\";\r\nexport const GET_EMPLOYEE_PAY_COMMISSION_RULES = \"GET_EMPLOYEE_PAY_COMMISSION_RULES\";\r\nexport const GET_EMPLOYEE_PAY_COMMISSION_RULE = \"GET_EMPLOYEE_PAY_COMMISSION_RULE\";\r\nexport const DELETE_EMPLOYEE_PAY_COMMISSION_RULE = \"DELETE_EMPLOYEE_PAY_COMMISSION_RULE\";\r\nexport const EDIT_EMPLOYEE_PAY_COMMISSION_RULE = \"EDIT_EMPLOYEE_PAY_COMMISSION_RULE\";\r\n","export const ADD_EMPLOYEE_PAYROLL_TAX = \"ADD_EMPLOYEE_PAYROLL_TAX\";\r\nexport const GET_EMPLOYEE_PAYROLL_TAXES = \"GET_EMPLOYEE_PAYROLL_TAXES\";\r\nexport const GET_EMPLOYEE_PAYROLL_TAX = \"GET_EMPLOYEE_PAYROLL_TAX\";\r\nexport const DELETE_EMPLOYEE_PAYROLL_TAX = \"DELETE_EMPLOYEE_PAYROLL_TAX\";\r\nexport const EDIT_EMPLOYEE_PAYROLL_TAX = \"EDIT_EMPLOYEE_PAYROLL_TAX\";\r\n","export const ADD_EMPLOYEE_PAYROLL_SCHEDULE = \"ADD_EMPLOYEE_PAYROLL_SCHEDULE\";\r\nexport const GET_EMPLOYEE_PAYROLL_SCHEDULES = \"GET_EMPLOYEE_PAYROLL_SCHEDULES\";\r\nexport const GET_EMPLOYEE_PAYROLL_SCHEDULE = \"GET_EMPLOYEE_PAYROLL_SCHEDULE\";\r\nexport const DELETE_EMPLOYEE_PAYROLL_SCHEDULE = \"DELETE_EMPLOYEE_PAYROLL_SCHEDULE\";\r\nexport const EDIT_EMPLOYEE_PAYROLL_SCHEDULE = \"EDIT_EMPLOYEE_PAYROLL_SCHEDULE\";\r\n","export const ADD_EMPLOYEE_PAYROLL_DATE = \"ADD_EMPLOYEE_PAYROLL_DATE\";\r\nexport const GET_EMPLOYEE_PAYROLL_DATES = \"GET_EMPLOYEE_PAYROLL_DATES\";\r\nexport const GET_EMPLOYEE_PAYROLL_DATE = \"GET_EMPLOYEE_PAYROLL_DATE\";\r\nexport const DELETE_EMPLOYEE_PAYROLL_DATE = \"DELETE_EMPLOYEE_PAYROLL_DATE\";\r\nexport const EDIT_EMPLOYEE_PAYROLL_DATE = \"EDIT_EMPLOYEE_PAYROLL_DATE\";\r\n","export const ADD_EMPLOYEE_PAYSLIP = \"ADD_EMPLOYEE_PAYSLIP\"; \r\nexport const GET_EMPLOYEE_PAYSLIPS = \"GET_EMPLOYEE_PAYSLIPS\"; \r\nexport const GET_EMPLOYEE_PAYSLIP = \"GET_EMPLOYEE_PAYSLIP\"; \r\nexport const DELETE_EMPLOYEE_PAYSLIP = \"DELETE_EMPLOYEE_PAYSLIP\";\r\n","export const ADD_EMPLOYEE_ATTENDANCE_TIMESHEET = \"ADD_EMPLOYEE_ATTENDANCE_TIMESHEET\";\r\nexport const GET_EMPLOYEE_ATTENDANCE_TIMESHEETS = \"GET_EMPLOYEE_ATTENDANCE_TIMESHEETS\";\r\nexport const GET_EMPLOYEE_ATTENDANCE_TIMESHEET = \"GET_EMPLOYEE_ATTENDANCE_TIMESHEET\";\r\nexport const DELETE_EMPLOYEE_ATTENDANCE_TIMESHEET = \"DELETE_EMPLOYEE_ATTENDANCE_TIMESHEET\";\r\nexport const EDIT_EMPLOYEE_ATTENDANCE_TIMESHEET = \"EDIT_EMPLOYEE_ATTENDANCE_TIMESHEET\";\r\n","export const GET_INVENTORY_CATEGORIES = 'GET_INVENTORY_CATEGORIES';\r\nexport const DELETE_INVENTORY_CATEGORY = 'DELETE_INVENTORY_CATEGORY';\r\nexport const ADD_INVENTORY_CATEGORY = 'ADD_INVENTORY_CATEGORY';\r\nexport const GET_INVENTORY_CATEGORY = 'GET_INVENTORY_CATEGORY';\r\nexport const EDIT_INVENTORY_CATEGORY = 'EDIT_INVENTORY_CATEGORY';\r\n","export const GET_DEBIT_NOTES = 'GET_DEBIT_NOTES';\r\nexport const DELETE_DEBIT_NOTE = 'DELETE_DEBIT_NOTE';\r\nexport const ADD_DEBIT_NOTE = 'ADD_DEBIT_NOTE';\r\nexport const GET_DEBIT_NOTE = 'GET_DEBIT_NOTE';\r\n","export const ADD_EVENT_CONFIG = 'ADD_EVENT_CONFIG';\r\n","export const GET_COMPLETED_EVENTS = 'GET_COMPLETED_EVENTS';\r\nexport const DELETE_COMPLETED_EVENT = 'DELETE_COMPLETED_EVENT';\r\nexport const ADD_COMPLETED_EVENT = 'ADD_COMPLETED_EVENT';\r\nexport const GET_COMPLETED_EVENT = 'GET_COMPLETED_EVENT';\r\n","export const GET_UPCOMING_EVENTS = 'GET_UPCOMING_EVENTS';\r\nexport const DELETE_UPCOMING_EVENT = 'DELETE_UPCOMING_EVENT';\r\nexport const ADD_UPCOMING_EVENT = 'ADD_UPCOMING_EVENT';\r\nexport const GET_UPCOMING_EVENT = 'GET_UPCOMING_EVENT';\r\n","export const GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDERS = 'GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDERS';\r\nexport const DELETE_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER = 'DELETE_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER';\r\nexport const ADD_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER = 'ADD_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER';\r\nexport const GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER = 'GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER';\r\n","export const GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDERS = 'GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDERS';\r\nexport const DELETE_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER = 'DELETE_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER';\r\nexport const ADD_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER = 'ADD_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER';\r\nexport const GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER = 'GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER';\r\n","export const GET_CONSUMABLES = 'GET_CONSUMABLES';\r\nexport const DELETE_CONSUMABLE = 'DELETE_CONSUMABLE';\r\nexport const ADD_CONSUMABLE = 'ADD_CONSUMABLE';\r\nexport const GET_CONSUMABLE = 'GET_CONSUMABLE';\r\nexport const EDIT_CONSUMABLE = 'EDIT_CONSUMABLE';\r\n","export const GET_EQUIPMENTS = 'GET_EQUIPMENTS';\r\nexport const DELETE_EQUIPMENT = 'DELETE_EQUIPMENT';\r\nexport const ADD_EQUIPMENT = 'ADD_EQUIPMENT';\r\nexport const GET_EQUIPMENT = 'GET_EQUIPMENT';\r\nexport const EDIT_EQUIPMENT = 'EDIT_EQUIPMENT';\r\n","export const GET_RAW_MATERIALS = 'GET_RAW_MATERIALS';\r\nexport const DELETE_RAW_MATERIAL = 'DELETE_RAW_MATERIAL';\r\nexport const ADD_RAW_MATERIAL = 'ADD_RAW_MATERIAL';\r\nexport const GET_RAW_MATERIAL = 'GET_RAW_MATERIAL';\r\nexport const EDIT_RAW_MATERIAL = 'EDIT_RAW_MATERIAL';\r\n","export const ADD_SUPPLIER_ADDRESS = 'ADD_SUPPLIER_ADDRESS';\r\nexport const GET_SUPPLIER_ADDRESSES = 'GET_SUPPLIER_ADDRESSES';\r\nexport const DELETE_SUPPLIER_ADDRESS = 'DELETE_SUPPLIER_ADDRESS';\r\nexport const GET_SUPPLIER_ADDRESS = 'GET_SUPPLIER_ADDRESS';\r\nexport const EDIT_SUPPLIER_ADDRESS = 'EDIT_SUPPLIER_ADDRESS';\r\n","export const GET_DE_ACTIVED_SUPPLIERS = 'GET_DE_ACTIVED_SUPPLIERS';\r\nexport const DELETE_DE_ACTIVED_SUPPLIER = 'DELETE_DE_ACTIVED_SUPPLIER';\r\nexport const GET_DE_ACTIVED_SUPPLIER = 'GET_DE_ACTIVED_SUPPLIER';\r\n","export const GET_ACTIVE_SUPPLIERS = 'GET_ACTIVE_SUPPLIERS';\r\nexport const DELETE_ACTIVE_SUPPLIER = 'DELETE_ACTIVE_SUPPLIER';\r\nexport const GET_ACTIVE_SUPPLIER = 'GET_ACTIVE_SUPPLIER';\r\nexport const ADD_ACTIVE_SUPPLIER = 'ADD_ACTIVE_SUPPLIER';\r\n","export const GET_INVENTORY_STOCK_TAKES = 'GET_INVENTORY_STOCK_TAKES';\r\nexport const DELETE_INVENTORY_STOCK_TAKE = 'DELETE_INVENTORY_STOCK_TAKE';\r\nexport const ADD_INVENTORY_STOCK_TAKE = 'ADD_INVENTORY_STOCK_TAKE';\r\nexport const GET_INVENTORY_STOCK_TAKE = 'GET_INVENTORY_STOCK_TAKE';\r\nexport const EDIT_INVENTORY_STOCK_TAKE = 'EDIT_INVENTORY_STOCK_TAKE';\r\n","export const GET_INVENTORY_RECEIPTS = 'GET_INVENTORY_RECEIPTS';\r\nexport const DELETE_INVENTORY_RECEIPT = 'DELETE_INVENTORY_RECEIPT';\r\nexport const ADD_INVENTORY_RECEIPT = 'ADD_INVENTORY_RECEIPT';\r\nexport const GET_INVENTORY_RECEIPT = 'GET_INVENTORY_RECEIPT';\r\n","export const GET_STOCK_ADJUSTMENTS = 'GET_STOCK_ADJUSTMENTS';\r\nexport const DELETE_STOCK_ADJUSTMENT = 'DELETE_STOCK_ADJUSTMENT';\r\nexport const ADD_STOCK_ADJUSTMENT = 'ADD_STOCK_ADJUSTMENT';\r\nexport const GET_STOCK_ADJUSTMENT = 'GET_STOCK_ADJUSTMENT';\r\nexport const EDIT_STOCK_ADJUSTMENT = 'EDIT_STOCK_ADJUSTMENT';\r\n","export const GET_ORDER_ITEMS = 'GET_ORDER_ITEMS';\r\nexport const DELETE_ORDER_ITEM = 'DELETE_ORDER_ITEM';\r\nexport const ADD_ORDER_ITEM = 'ADD_ORDER_ITEM';\r\nexport const GET_ORDER_ITEM = 'GET_ORDER_ITEM';\r\nexport const EDIT_ORDER_ITEM = 'EDIT_ORDER_ITEM';\r\n","export const GET_STORAGEMEDIAS = 'GET_STORAGEMEDIAS';\r\nexport const DELETE_STORAGEMEDIA = 'DELETE_STORAGEMEDIA';\r\nexport const ADD_STORAGEMEDIA = 'ADD_STORAGEMEDIA';\r\nexport const GET_STORAGEMEDIA = 'GET_STORAGEMEDIA';\r\nexport const EDIT_STORAGEMEDIA = 'EDIT_STORAGEMEDIA';\r\n","export const GET_INVENTORY_STOCK_ITEMS = 'GET_INVENTORY_STOCK_ITEMS';\r\nexport const DELETE_INVENTORY_STOCK_ITEM = 'DELETE_INVENTORY_STOCK_ITEM';\r\nexport const ADD_INVENTORY_STOCK_ITEM = 'ADD_INVENTORY_STOCK_ITEM';\r\nexport const GET_INVENTORY_STOCK_ITEM = 'GET_INVENTORY_STOCK_ITEM';\r\nexport const EDIT_INVENTORY_STOCK_ITEM = 'EDIT_INVENTORY_STOCK_ITEM';\r\n","export const GET_WAREHOUSES = 'GET_WAREHOUSES';\r\nexport const DELETE_WAREHOUSE = 'DELETE_WAREHOUSE';\r\nexport const ADD_WAREHOUSE = 'ADD_WAREHOUSE';\r\nexport const GET_WAREHOUSE = 'GET_WAREHOUSE';\r\nexport const EDIT_WAREHOUSE = 'EDIT_WAREHOUSE';\r\n","export const GET_INVENTORY_ORDERPAYMENTS = 'GET_INVENTORY_ORDERPAYMENTS';\r\nexport const DELETE_INVENTORY_ORDERPAYMENT = 'DELETE_INVENTORY_ORDERPAYMENT';\r\nexport const ADD_INVENTORY_ORDERPAYMENT = 'ADD_INVENTORY_ORDERPAYMENT';\r\nexport const GET_INVENTORY_ORDERPAYMENT = 'GET_INVENTORY_ORDERPAYMENT';\r\nexport const EDIT_INVENTORY_ORDERPAYMENT = 'EDIT_INVENTORY_ORDERPAYMENT';\r\n","export const GET_INVENTORY_ORDERS = 'GET_INVENTORY_ORDERS';\r\nexport const DELETE_INVENTORY_ORDER = 'DELETE_INVENTORY_ORDER';\r\nexport const ADD_INVENTORY_ORDER = 'ADD_INVENTORY_ORDER';\r\nexport const GET_INVENTORY_ORDER = 'GET_INVENTORY_ORDER';\r\n","export const ADD_PROCESSED_PRODUCT_STOCK_TAKE = \"ADD_PROCESSED_PRODUCT_STOCK_TAKE\";\r\nexport const GET_PROCESSED_PRODUCT_STOCK_TAKES = \"GET_PROCESSED_PRODUCT_STOCK_TAKES\";\r\nexport const GET_PROCESSED_PRODUCT_STOCK_TAKE = \"GET_PROCESSED_PRODUCT_STOCK_TAKE\";\r\nexport const DELETE_PROCESSED_PRODUCT_STOCK_TAKE = \"DELETE_PROCESSED_PRODUCT_STOCK_TAKE\";\r\n","export const ADD_PROCESSED_PRODUCT_STOCK_ADJUSTMENT = \"ADD_PROCESSED_PRODUCT_STOCK_ADJUSTMENT\";\r\nexport const GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENTS = \"GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENTS\";\r\nexport const GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENT = \"GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENT\";\r\nexport const DELETE_PROCESSED_PRODUCT_STOCK_ADJUSTMENT = \"DELETE_PROCESSED_PRODUCT_STOCK_ADJUSTMENT\";\r\nexport const EDIT_PROCESSED_PRODUCT_STOCK_ADJUSTMENT = \"EDIT_PROCESSED_PRODUCT_STOCK_ADJUSTMENT\";\r\n","export const ADD_PROCESSED_PRODUCT_STOCK_RECEIPT = \"ADD_PROCESSED_PRODUCT_STOCK_RECEIPT\"; \r\nexport const GET_PROCESSED_PRODUCT_STOCK_RECEIPTS = \"GET_PROCESSED_PRODUCT_STOCK_RECEIPTS\"; \r\nexport const GET_PROCESSED_PRODUCT_STOCK_RECEIPT = \"GET_PROCESSED_PRODUCT_STOCK_RECEIPT\";\r\nexport const DELETE_PROCESSED_PRODUCT_STOCK_RECEIPT = \"DELETE_PROCESSED_PRODUCT_STOCK_RECEIPT\";\r\n","export const GET_WASTE_GENERATION_REPORTS = 'GET_WASTE_GENERATION_REPORTS';\r\nexport const DELETE_WASTE_GENERATION_REPORT = 'DELETE_WASTE_GENERATION_REPORT';\r\nexport const ADD_WASTE_GENERATION_REPORT = 'ADD_WASTE_GENERATION_REPORT';\r\nexport const GET_WASTE_GENERATION_REPORT = 'GET_WASTE_GENERATION_REPORT';\r\nexport const EDIT_WASTE_GENERATION_REPORT = 'EDIT_WASTE_GENERATION_REPORT';\r\n","export const GET_PRODUCTION_ORDERS = 'GET_PRODUCTION_ORDERS';\r\nexport const DELETE_PRODUCTION_ORDER = 'DELETE_PRODUCTION_ORDER';\r\nexport const ADD_PRODUCTION_ORDER = 'ADD_PRODUCTION_ORDER';\r\nexport const GET_PRODUCTION_ORDER = 'GET_PRODUCTION_ORDER';\r\n","export const GET_PROCESS_PRODUCTS = 'GET_PROCESS_PRODUCTS';\r\nexport const DELETE_PROCESS_PRODUCT = 'DELETE_PROCESS_PRODUCT';\r\nexport const ADD_PROCESS_PRODUCT = 'ADD_PROCESS_PRODUCT';\r\nexport const GET_PROCESS_PRODUCT = 'GET_PROCESS_PRODUCT';\r\nexport const EDIT_PROCESS_PRODUCT = 'EDIT_PROCESS_PRODUCT';\r\n","export const ADD_MANUFACTURING_PERSONEL = \"ADD_MANUFACTURING_PERSONEL\";\r\nexport const GET_MANUFACTURING_PERSONELS = \"GET_MANUFACTURING_PERSONELS\";\r\nexport const GET_MANUFACTURING_PERSONEL = \"GET_MANUFACTURING_PERSONEL\";\r\nexport const DELETE_MANUFACTURING_PERSONEL = \"DELETE_MANUFACTURING_PERSONEL\";\r\nexport const EDIT_MANUFACTURING_PERSONEL = \"EDIT_MANUFACTURING_PERSONEL\";\r\n","export const ADD_MANUFACTURING_TEAM = \"ADD_MANUFACTURING_TEAM\";\r\nexport const GET_MANUFACTURING_TEAMS = \"GET_MANUFACTURING_TEAMS\";\r\nexport const GET_MANUFACTURING_TEAM = \"GET_MANUFACTURING_TEAM\";\r\nexport const DELETE_MANUFACTURING_TEAM = \"DELETE_MANUFACTURING_TEAM\";\r\nexport const EDIT_MANUFACTURING_TEAM = \"EDIT_MANUFACTURING_TEAM\";\r\n","export const ADD_SHIFT_SCHEDULE = 'ADD_SHIFT_SCHEDULE';\r\nexport const GET_SHIFT_SCHEDULES = 'GET_SHIFT_SCHEDULES';\r\nexport const DELETE_SHIFT_SCHEDULE = 'DELETE_SHIFT_SCHEDULE'\r\nexport const GET_SHIFT_SCHEDULE = 'GET_SHIFT_SCHEDULE';\r\nexport const EDIT_SHIFT_SCHEDULE = 'EDIT_SHIFT_SCHEDULE';\r\n","export const GET_PROCESS_RATES = 'GET_PROCESS_RATES';\r\nexport const DELETE_PROCESS_RATE = 'DELETE_PROCESS_RATE';\r\nexport const ADD_PROCESS_RATE = 'ADD_PROCESS_RATE';\r\nexport const GET_PROCESS_RATE = 'GET_PROCESS_RATE';\r\nexport const EDIT_PROCESS_RATE = 'EDIT_PROCESS_RATE';\r\n","export const ADD_SHIFT = 'ADD_SHIFT';\r\nexport const GET_SHIFTS = 'GET_SHIFTS';\r\nexport const DELETE_SHIFT = 'DELETE_SHIFT'\r\nexport const GET_SHIFT = 'GET_SHIFT';\r\nexport const EDIT_SHIFT = 'EDIT_SHIFT';\r\n","export const GET_PROCESS_MACHINES = 'GET_PROCESS_MACHINES';\r\nexport const DELETE_PROCESS_MACHINE = 'DELETE_PROCESS_MACHINE';\r\nexport const ADD_PROCESS_MACHINE = 'ADD_PROCESS_MACHINE';\r\nexport const GET_PROCESS_MACHINE = 'GET_PROCESS_MACHINE';\r\n","export const GET_PROCESS_MACHINE_GROUPS = 'GET_PROCESS_MACHINE_GROUPS';\r\nexport const DELETE_PROCESS_MACHINE_GROUP = 'DELETE_PROCESS_MACHINE_GROUP';\r\nexport const ADD_PROCESS_MACHINE_GROUP = 'ADD_PROCESS_MACHINE_GROUP';\r\nexport const GET_PROCESS_MACHINE_GROUP = 'GET_PROCESS_MACHINE_GROUP';\r\n","export const GET_VERIFIED_PRODUCTION_PROCESSES = 'GET_VERIFIED_PRODUCTION_PROCESSES';\r\nexport const DELETE_VERIFIED_PRODUCTION_PROCESS = 'DELETE_VERIFIED_PRODUCTION_PROCESS';\r\nexport const GET_VERIFIED_PRODUCTION_PROCESS = 'GET_VERIFIED_PRODUCTION_PROCESS'\r\n","export const GET_IN_ACTIVE_ACCOUNTS = 'GET_IN_ACTIVE_ACCOUNTS';\r\nexport const DELETE_IN_ACTIVE_ACCOUNT = 'DELETE_IN_ACTIVE_ACCOUNT';\r\nexport const GET_IN_ACTIVE_ACCOUNT = 'GET_IN_ACTIVE_ACCOUNT'\r\n","export const ADD_ASSET = 'ADD_ASSET';\r\nexport const GET_ASSETS = 'GET_ASSETS';\r\nexport const DELETE_ASSET = 'DELETE_ASSET';\r\nexport const GET_ASSET = 'GET_ASSET';\r\nexport const EDIT_ASSET = 'EDIT_ASSET';\r\n","export const GET_UNVERIFIED_PRODUCTION_PROCESSES = 'GET_UNVERIFIED_PRODUCTION_PROCESSES';\r\nexport const DELETE_UNVERIFIED_PRODUCTION_PROCESS = 'DELETE_UNVERIFIED_PRODUCTION_PROCESS';\r\nexport const GET_UNVERIFIED_PRODUCTION_PROCESS = 'GET_UNVERIFIED_PRODUCTION_PROCESS'\r\n","export const GET_BILL_PAYMENTS = 'GET_BILL_PAYMENTS';\r\nexport const DELETE_BILL_PAYMENT = 'DELETE_BILL_PAYMENT';\r\nexport const ADD_BILL_PAYMENT = 'ADD_BILL_PAYMENT';\r\nexport const GET_BILL_PAYMENT = 'GET_BILL_PAYMENT';\r\nexport const EDIT_BILL_PAYMENT = 'EDIT_BILL_PAYMENT'\r\n","export const ADD_BILL= 'ADD_BILL';\r\nexport const GET_BILLS = 'GET_BILLS';\r\nexport const DELETE_BILL = 'DELETE_BILL';\r\nexport const GET_BILL = 'GET_BILL'\r\n","export const ADD_CURRENCY = 'ADD_CURRENCY';\r\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\r\nexport const DELETE_CURRENCY = 'DELETE_CURRENCY';\r\nexport const EDIT_CURRENCY = 'EDIT_CURRENCY';\r\n","export const ADD_TAX = 'ADD_TAX';\r\nexport const GET_TAXES = 'GET_TAXES';\r\nexport const EDIT_TAX = 'EDIT_TAX';\r\nexport const DELETE_TAX = 'DELETE_TAX'\r\n","export const GET_POSTED_JOURNAL_ENTRIES = 'GET_POSTED_JOURNAL_ENTRIES';\r\nexport const DELETE_POSTED_JOURNAL_ENTRY = 'DELETE_POSTED_JOURNAL_ENTRY';\r\nexport const GET_POSTED_JOURNAL_ENTRY = 'GET_POSTED_JOURNAL_ENTRY'\r\n","export const GET_UNPOSTED_JOURNAL_ENTRIES = 'GET_UNPOSTED_JOURNAL_ENTRIES';\r\nexport const DELETE_UNPOSTED_JOURNAL_ENTRY = 'DELETE_UNPOSTED_JOURNAL_ENTRY';\r\nexport const GET_UNPOSTED_JOURNAL_ENTRY = 'GET_UNPOSTED_JOURNAL_ENTRY'\r\n","export const GET_UNADJUSTED_JOURNAL_ENTRIES = 'GET_UNADJUSTED_JOURNAL_ENTRIES';\r\nexport const DELETE_UNADJUSTED_JOURNAL_ENTRY = 'DELETE_UNADJUSTED_JOURNAL_ENTRY';\r\nexport const GET_UNADJUSTED_JOURNAL_ENTRY = 'GET_UNADJUSTED_JOURNAL_ENTRY'\r\n","export const GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRIES = 'GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRIES';\r\nexport const DELETE_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY = 'DELETE_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY';\r\nexport const GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY = 'GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY'\r\n","export const GET_FULLY_PAID_BILLS = 'GET_FULLY_PAID_BILLS';\r\nexport const DELETE_FULLY_PAID_BILL = 'DELETE_FULLY_PAID_BILL';\r\nexport const GET_FULLY_PAID_BILL = 'GET_FULLY_PAID_BILL'\r\n","export const GET_FULLY_PAID_NOT_VERIFIED_BILLS = 'GET_FULLY_PAID_NOT_VERIFIED_BILLS';\r\nexport const DELETE_FULLY_PAID_NOT_VERIFIED_BILL = 'DELETE_FULLY_PAID_NOT_VERIFIED_BILL';\r\nexport const GET_FULLY_PAID_NOT_VERIFIED_BILL = 'GET_FULLY_PAID_NOT_VERIFIED_BILL'\r\n","export const GET_CREDITS = 'GET_CREDITS';\r\nexport const DELETE_CREDIT = 'DELETE_CREDIT';\r\nexport const GET_CREDIT = 'GET_CREDIT'\r\n","export const GET_DEBITS = 'GET_DEBITS';\r\nexport const DELETE_DEBIT = 'DELETE_DEBIT';\r\nexport const GET_DEBIT = 'GET_DEBIT'\r\n","export const ADD_WORKBOOK = 'ADD_WORKBOOK';\r\nexport const GET_WORKBOOKS = 'GET_WORKBOOKS';\r\nexport const DELETE_WORKBOOK = 'DELETE_WORKBOOK';\r\nexport const GET_WORKBOOK = 'GET_WORKBOOK';\r\nexport const EDIT_WORKBOOK = 'EDIT_WORKBOOK';\r\n","export const ADD_ACCOUNTING_ADJUSTMENT = 'ADD_ACCOUNTING_ADJUSTMENT';\r\nexport const GET_ACCOUNTING_ADJUSTMENTS = 'GET_ACCOUNTING_ADJUSTMENTS';\r\nexport const DELETE_ACCOUNTING_ADJUSTMENT = 'DELETE_ACCOUNTING_ADJUSTMENT';\r\nexport const GET_ACCOUNTING_ADJUSTMENT = 'GET_ACCOUNTING_ADJUSTMENT';\r\nexport const EDIT_ACCOUNTING_ADJUSTMENT = 'EDIT_ACCOUNTING_ADJUSTMENT'\r\n","export const GET_LEDGERS = 'GET_LEDGERS';\r\nexport const DELETE_LEDGER = 'DELETE_LEDGER';\r\nexport const GET_LEDGER = 'GET_LEDGER';\r\nexport const EDIT_LEDGER = 'EDIT_LEDGER';\r\nexport const ADD_LEDGER = 'ADD_LEDGER'\r\n","export const ADD_ACCOUNTING_POST = 'ADD_ACCOUNTING_POST';\r\nexport const GET_ACCOUNTING_POSTS = 'GET_ACCOUNTING_POSTS';\r\nexport const DELETE_ACCOUNTING_POST = 'DELETE_ACCOUNTING_POST';\r\nexport const GET_ACCOUNTING_POST = 'GET_ACCOUNTING_POST';\r\nexport const EDIT_ACCOUNTING_POST = 'EDIT_ACCOUNTING_POST'\r\n","export const ADD_ACCOUNT = 'ADD_ACCOUNT';\r\nexport const GET_ACCOUNTS = 'GET_ACCOUNTS';\r\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\r\nexport const GET_ACCOUNT = 'GET_ACCOUNT';\r\nexport const EDIT_ACCOUNT = 'EDIT_ACCOUNT';","export const GET_JOURNALS = 'GET_JOURNALS';\r\nexport const DELETE_JOURNAL = 'DELETE_JOURNAL';\r\nexport const GET_JOURNAL = 'GET_JOURNAL'\r\n","export const ADD_INTEREST_BEARING_ACCOUNT = 'ADD_INTEREST_BEARING_ACCOUNT';\r\nexport const GET_INTEREST_BEARING_ACCOUNTS = 'GET_INTEREST_BEARING_ACCOUNTS';\r\nexport const DELETE_INTEREST_BEARING_ACCOUNT = 'DELETE_INTEREST_BEARING_ACCOUNT';\r\nexport const GET_INTEREST_BEARING_ACCOUNT = 'GET_INTEREST_BEARING_ACCOUNT';\r\nexport const EDIT_INTEREST_BEARING_ACCOUNT = 'EDIT_INTEREST_BEARING_ACCOUNT'\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React,  {Component, Fragment } from 'react';\r\n\r\nclass Home extends Component {\r\n\trender(){\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<h1>HOME OF SALES</h1>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component, Fragment} from 'react';\r\n\r\n\r\nclass Default extends Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<h3>The Page you looking is not found</h3>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Default;\r\n","import React, {Component} from 'react';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AppTopbar extends Component {\r\n\r\n    static defaultProps = {\r\n        onToggleMenu: null\r\n    }\r\n\r\n    static propTypes = {\r\n        onToggleMenu: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"layout-topbar clearfix\">\r\n                <button className=\"p-link layout-menu-button\" onClick={this.props.onToggleMenu}>\r\n                    <span className=\"pi pi-bars\"/>\r\n                </button>\r\n                <div className=\"layout-topbar-icons\">\r\n                    <span className=\"layout-topbar-search\">\r\n                        <InputText type=\"text\" placeholder=\"Search\" />\r\n                        <span className=\"layout-topbar-search-icon pi pi-search\"/>\r\n                    </span>\r\n                    <button className=\"p-link\">\r\n                        <span className=\"layout-topbar-item-text\">Events</span>\r\n                        <span className=\"layout-topbar-icon pi pi-calendar\"/>\r\n                        <span className=\"layout-topbar-badge\">5</span>\r\n                    </button>\r\n                    <button className=\"p-link\">\r\n                        <span className=\"layout-topbar-item-text\">Settings</span>\r\n                        <span className=\"layout-topbar-icon pi pi-cog\"/>\r\n                    </button>\r\n                    <button className=\"p-link\">\r\n                        <span className=\"layout-topbar-item-text\">User</span>\r\n                        <span className=\"layout-topbar-icon pi pi-user\"/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class AppFooter extends Component {\r\n\r\n    render() {\r\n        return  (\r\n            <div className=\"layout-footer\">\r\n                <span className=\"footer-text\" style={{'marginRight': '5px'}}>Soapsales</span>\r\n                <span className=\"footer-text\" style={{'marginLeft': '5px'}}>Company</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nclass AppSubmenu extends Component {\r\n\r\n    static defaultProps = {\r\n        className: null,\r\n        items: null,\r\n        onMenuItemClick: null,\r\n        root: false\r\n    }\r\n\r\n    static propTypes = {\r\n        className: PropTypes.string,\r\n        items: PropTypes.array,\r\n        onMenuItemClick: PropTypes.func,\r\n        root: PropTypes.bool\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {activeIndex: null};\r\n    }\r\n    \r\n    onMenuItemClick(event, item, index) {\r\n        //avoid processing disabled items\r\n        if(item.disabled) {\r\n            event.preventDefault();\r\n            return true;\r\n        }\r\n                        \r\n        //execute command\r\n        if(item.command) {\r\n            item.command({originalEvent: event, item: item});\r\n        }\r\n\r\n        if(index === this.state.activeIndex)\r\n            this.setState({activeIndex: null});    \r\n        else\r\n            this.setState({activeIndex: index});\r\n\r\n        if(this.props.onMenuItemClick) {\r\n            this.props.onMenuItemClick({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n    }\r\n\r\n\trenderLinkContent(item) {\r\n\t\tlet submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\r\n\t\tlet badge = item.badge && <span className=\"menuitem-badge\">{item.badge}</span>;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<i className={item.icon}></i>\r\n\t\t\t\t<span>{item.label}</span>\r\n\t\t\t\t{submenuIcon}\r\n\t\t\t\t{badge}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\trenderLink(item, i) {\r\n\t\tlet content = this.renderLinkContent(item);\r\n\r\n\t\tif (item.to) {\r\n\t\t\treturn (\r\n\t\t\t\t<NavLink activeClassName=\"active-route\" to={item.to} onClick={(e) => this.onMenuItemClick(e, item, i)} exact target={item.target}>\r\n                    {content}\r\n                </NavLink>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<a href={item.url} onClick={(e) => this.onMenuItemClick(e, item, i)} target={item.target}>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</a>\r\n\t\t\t);\r\n\r\n\t\t}\r\n\t}\r\n    \r\n    render() {\r\n        let items = this.props.items && this.props.items.map((item, i) => {\r\n            let active = this.state.activeIndex === i;\r\n            let styleClass = classNames(item.badgeStyleClass, {'active-menuitem': active && !item.to});\r\n\r\n            return (\r\n                <li className={styleClass} key={i}>\r\n                    {item.items && this.props.root===true && <div className='arrow'></div>}\r\n\t\t\t\t\t{this.renderLink(item, i)}\r\n                    <AppSubmenu items={item.items} onMenuItemClick={this.props.onMenuItemClick}/>\r\n                </li>\r\n            );\r\n        });\r\n        \r\n        return items ? <ul className={this.props.className}>{items}</ul> : null;\r\n    }\r\n}\r\n\r\nexport class AppMenu extends Component {\r\n\r\n    static defaultProps = {\r\n        model: null,\r\n        onMenuItemClick: null\r\n    }\r\n\r\n    static propTypes = {\r\n        model: PropTypes.array,\r\n        onMenuItemClick: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"layout-menu-container\">\r\n                <AppSubmenu items={this.props.model} className=\"layout-menu\" onMenuItemClick={this.props.onMenuItemClick} root={true}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n//import { logout } from '..//./actions/auth';\r\n\r\nexport class AppProfile extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            expanded: false\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        auth: PropTypes.object.isRequired,\r\n        logout: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onClick(event) {\r\n        this.setState({expanded: !this.state.expanded});\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return  (\r\n            <div className=\"layout-profile\">\r\n                <div>\r\n                    <img src=\"assets/layout/images/profile.png\" alt=\"\" />\r\n                </div>\r\n                <button className=\"p-link layout-profile-link\" onClick={this.onClick}>\r\n                    <span className=\"username\">User</span>\r\n                    <i className=\"pi pi-fw pi-cog\"/>\r\n                </button>\r\n                <ul className={classNames({'layout-profile-expanded': this.state.expanded})}>\r\n                    <li><button className=\"p-link\"><i className=\"pi pi-fw pi-user\"/><span>Account</span></button></li>\r\n                    <li><button className=\"p-link\"><i className=\"pi pi-fw pi-inbox\"/><span>Notifications</span><span className=\"menuitem-badge\">2</span></button></li>\r\n                    <li><button onClick={this.props.logout}className=\"p-link\"><i className=\"pi pi-fw pi-power-off\"/><span>Logout</span></button></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps) (AppProfile);\r\n","import axios from 'axios';\r\n\r\nexport class CarService {\r\n    \r\n    getCarsSmall() {\r\n        return axios.get('assets/demo/data/cars-small.json')\r\n                .then(res => res.data.data);\r\n    }\r\n\r\n    getCarsMedium() {\r\n        return axios.get('assets/demo/data/cars-medium.json')\r\n                .then(res => res.data.data);\r\n    }\r\n\r\n    getCarsLarge() {\r\n        return axios.get('assets/demo/data/cars-large.json')\r\n                .then(res => res.data.data);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {CarService} from '../service/CarService';\r\nimport {Panel} from 'primereact/panel';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Chart} from 'primereact/chart';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {FullCalendar} from 'primereact/fullcalendar';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tasks: [],\r\n            selectedCar: null,\r\n            lineData: {\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n                datasets: [\r\n                    {\r\n                        label: 'First Dataset',\r\n                        data: [65, 59, 80, 81, 56, 55, 40],\r\n                        fill: false,\r\n                        borderColor: '#007be5'\r\n                    },\r\n                    {\r\n                        label: 'Second Dataset',\r\n                        data: [28, 48, 40, 19, 86, 27, 90],\r\n                        fill: false,\r\n                        borderColor: '#20d077'\r\n                    }\r\n                ]\r\n            },\r\n            fullcalendarOptions: {\r\n                plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n                defaultDate: '2017-02-01',\r\n                header: {\r\n                    left: 'prev,next today',\r\n                    center: 'title',\r\n                    right: 'month,agendaWeek,agendaDay'\r\n                },\r\n                editable: true\r\n            },\r\n            events: [\r\n                {\r\n                    \"id\": 1,\r\n                    \"title\": \"All Day Event\",\r\n                    \"start\": \"2017-02-01\"\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"title\": \"Long Event\",\r\n                    \"start\": \"2017-02-07\",\r\n                    \"end\": \"2017-02-10\"\r\n                },\r\n                {\r\n                    \"id\": 3,\r\n                    \"title\": \"Repeating Event\",\r\n                    \"start\": \"2017-02-09T16:00:00\"\r\n                },\r\n                {\r\n                    \"id\": 4,\r\n                    \"title\": \"Repeating Event\",\r\n                    \"start\": \"2017-02-16T16:00:00\"\r\n                },\r\n                {\r\n                    \"id\": 5,\r\n                    \"title\": \"Conference\",\r\n                    \"start\": \"2017-02-11\",\r\n                    \"end\": \"2017-02-13\"\r\n                },\r\n                {\r\n                    \"id\": 6,\r\n                    \"title\": \"Meeting\",\r\n                    \"start\": \"2017-02-12T10:30:00\",\r\n                    \"end\": \"2017-02-12T12:30:00\"\r\n                },\r\n                {\r\n                    \"id\": 7,\r\n                    \"title\": \"Lunch\",\r\n                    \"start\": \"2017-02-12T12:00:00\"\r\n                },\r\n                {\r\n                    \"id\": 8,\r\n                    \"title\": \"Meeting\",\r\n                    \"start\": \"2017-02-12T14:30:00\"\r\n                },\r\n                {\r\n                    \"id\": 9,\r\n                    \"title\": \"Happy Hour\",\r\n                    \"start\": \"2017-02-12T17:30:00\"\r\n                },\r\n                {\r\n                    \"id\": 10,\r\n                    \"title\": \"Dinner\",\r\n                    \"start\": \"2017-02-12T20:00:00\"\r\n                },\r\n                {\r\n                    \"id\": 11,\r\n                    \"title\": \"Birthday Party\",\r\n                    \"start\": \"2017-02-13T07:00:00\"\r\n                },\r\n                {\r\n                    \"id\": 12,\r\n                    \"title\": \"Click for Google\",\r\n                    \"url\": \"http://google.com/\",\r\n                    \"start\": \"2017-02-28\"\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.onTaskChange = this.onTaskChange.bind(this);\r\n        this.carservice = new CarService();\r\n    }\r\n\r\n    onTaskChange(e) {\r\n        let selectedTasks = [...this.state.tasks];\r\n        if(e.checked)\r\n            selectedTasks.push(e.value);\r\n        else\r\n            selectedTasks.splice(selectedTasks.indexOf(e.value), 1);\r\n\r\n        this.setState({tasks: selectedTasks});\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.carservice.getCarsSmall().then(data => this.setState({cars: data}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-fluid dashboard\">\r\n                <div className=\"p-col-12 p-lg-4\">\r\n                    <div className=\"card summary\">\r\n                        <span className=\"title\">Users</span>\r\n                        <span className=\"detail\">Number of visitors</span>\r\n                        <span className=\"count visitors\">12</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-lg-4\">\r\n                    <div className=\"card summary\">\r\n                        <span className=\"title\">Sales</span>\r\n                        <span className=\"detail\">Number of purchases</span>\r\n                        <span className=\"count purchases\">534</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-lg-4\">\r\n                    <div className=\"card summary\">\r\n                        <span className=\"title\">Revenue</span>\r\n                        <span className=\"detail\">Income for today</span>\r\n                        <span className=\"count revenue\">$3,200</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-col-12 p-md-6 p-xl-3\">\r\n                    <div className=\"highlight-box\">\r\n                        <div className=\"initials\" style={{backgroundColor:'#007be5',color:'#00448f'}}><span>TV</span></div>\r\n                        <div className=\"highlight-details \">\r\n                            <i className=\"pi pi-search\"/>\r\n                            <span>Total Queries</span>\r\n                            <span className=\"count\">523</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6 p-xl-3\">\r\n                    <div className=\"highlight-box\">\r\n                        <div className=\"initials\" style={{backgroundColor:'#ef6262',color:'#a83d3b'}}><span>TI</span></div>\r\n                        <div className=\"highlight-details \">\r\n                            <i className=\"pi pi-question-circle\"/>\r\n                            <span>Total Issues</span>\r\n                            <span className=\"count\">81</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6 p-xl-3\">\r\n                    <div className=\"highlight-box\">\r\n                        <div className=\"initials\" style={{backgroundColor:'#20d077',color:'#038d4a'}}><span>OI</span></div>\r\n                        <div className=\"highlight-details \">\r\n                            <i className=\"pi pi-filter\"/>\r\n                            <span>Open Issues</span>\r\n                            <span className=\"count\">21</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6 p-xl-3\">\r\n                    <div className=\"highlight-box\">\r\n                        <div className=\"initials\" style={{backgroundColor:'#f9c851',color:'#b58c2b'}}><span>CI</span></div>\r\n                        <div className=\"highlight-details \">\r\n                            <i className=\"pi pi-check\"/>\r\n                            <span>Closed Issues</span>\r\n                            <span className=\"count\">60</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6 p-lg-4\">\r\n                    <Panel header=\"Tasks\" style={{height: '100%'}}>\r\n                        <ul className='task-list'>\r\n                            <li>\r\n                                <Checkbox value=\"task1\" onChange={this.onTaskChange} checked={this.state.tasks.indexOf('task1')>-1?true:false}></Checkbox>\r\n                                <span className=\"task-name\">Sales Reports</span>\r\n                                <i className=\"pi pi-chart-bar\" />\r\n                            </li>\r\n                            <li>\r\n                                <Checkbox value=\"task2\" onChange={this.onTaskChange} checked={this.state.tasks.indexOf('task2')>-1?true:false}></Checkbox>\r\n                                <span className=\"task-name\">Pay Invoices</span>\r\n                                <i className=\"pi pi-dollar\" />\r\n                            </li>\r\n                            <li>\r\n                                <Checkbox value=\"task3\" onChange={this.onTaskChange} checked={this.state.tasks.indexOf('task3')>-1?true:false}></Checkbox>\r\n                                <span className=\"task-name\">Dinner with Tony</span>\r\n                                <i className=\"pi pi-user\" />\r\n                            </li>\r\n                            <li>\r\n                                <Checkbox value=\"task4\" onChange={this.onTaskChange} checked={this.state.tasks.indexOf('task4')>-1?true:false}></Checkbox>\r\n                                <span className=\"task-name\">Client Meeting</span>\r\n                                <i className=\"pi pi-users\" />\r\n                            </li>\r\n                            <li>\r\n                                <Checkbox value=\"task5\" onChange={this.onTaskChange} checked={this.state.tasks.indexOf('task5')>-1?true:false}></Checkbox>\r\n                                <span className=\"task-name\">New Theme</span>\r\n                                <i className=\"pi pi-briefcase\" />\r\n                            </li>\r\n                            <li>\r\n                                <Checkbox value=\"task6\" onChange={this.onTaskChange} checked={this.state.tasks.indexOf('task6')>-1?true:false}></Checkbox>\r\n                                <span className=\"task-name\">Flight Ticket</span>\r\n                                <i className=\"pi pi-briefcase\" />\r\n                            </li>\r\n                        </ul>\r\n                    </Panel>\r\n                </div>\r\n                <div className=\"p-col-12 p-md-6 p-lg-4 p-fluid contact-form\">\r\n                    <Panel header=\"Contact Us\">\r\n                        <div className=\"p-grid\">\r\n                            <div className=\"p-col-12\">\r\n                                <Dropdown value='' options='' placeholder=\"Select\" onChange='' autoWidth={false} />\r\n                            </div>\r\n                            <div className=\"p-col-12\">\r\n                                <InputText type=\"text\" placeholder=\"Name\" />\r\n                            </div>\r\n                            <div className=\"p-col-12\">\r\n                                <InputText type=\"text\" placeholder=\"Age\" />\r\n                            </div>\r\n                            <div className=\"p-col-12\">\r\n                                <InputText type=\"text\" placeholder=\"Message\" />\r\n                            </div>\r\n                            <div className=\"p-col-12\">\r\n                                <Button type=\"button\" label=\"Send\" icon=\"fa-send\"/>\r\n                            </div>\r\n                        </div>\r\n                    </Panel>\r\n                </div>\r\n\r\n                <div className=\"p-col-12 p-lg-4 contacts\">\r\n                    <Panel header=\"Contacts\">\r\n                        <ul>\r\n                            <li>\r\n                                <button className=\"p-link\">\r\n                                    <img src=\"assets/layout/images/avatar_1.png\" width=\"35\" alt=\"avatar1\"/>\r\n                                    <span className=\"name\">Claire Williams</span>\r\n                                    <span className=\"email\">clare@pf-sigma.com</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button className=\"p-link\">\r\n                                    <img src=\"assets/layout/images/avatar_2.png\" width=\"35\" alt=\"avatar2\"/>\r\n                                    <span className=\"name\">Jason Dourne</span>\r\n                                    <span className=\"email\">jason@pf-sigma.com</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button className=\"p-link\">\r\n                                    <img src=\"assets/layout/images/avatar_3.png\" width=\"35\" alt=\"avatar3\"/>\r\n                                    <span className=\"name\">Jane Davidson</span>\r\n                                    <span className=\"email\">jane@pf-sigma.com</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button className=\"p-link\">\r\n                                    <img src=\"assets/layout/images/avatar_4.png\" width=\"35\" alt=\"avatar4\"/>\r\n                                    <span className=\"name\">Tony Corleone</span>\r\n                                    <span className=\"email\">tony@pf-sigma.com</span>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </Panel>\r\n                </div>\r\n                <div className=\"p-col-12 p-lg-6\">\r\n                    <div className=\"card\">\r\n                        <h1 style={{fontSize:'16px'}}>Recent Sales</h1>\r\n                        <DataTable value={this.state.cars}  style={{marginBottom: '20px'}} responsive={true}\r\n                                selectionMode=\"single\" selection={this.state.selectedCar} onSelectionChange={(e) => this.setState({selectedCar: e.value})}>\r\n                            <Column field=\"vin\" header=\"Vin\" sortable={true} />\r\n                            <Column field=\"year\" header=\"Year\" sortable={true} />\r\n                            <Column field=\"brand\" header=\"Brand\" sortable={true} />\r\n                            <Column field=\"color\" header=\"Color\" sortable={true} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-lg-6\">\r\n                    <div className=\"card\">\r\n                        <Chart type=\"line\" data={this.state.lineData}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-col-12 p-lg-8\">\r\n                    <Panel header=\"Calendar\" style={{height: '100%'}}>\r\n                        <FullCalendar events={this.state.events} options={this.state.fullcalendarOptions}></FullCalendar>\r\n                    </Panel>\r\n                </div>\r\n\r\n                <div className=\"p-col-12 p-lg-4\">\r\n                    <Panel header=\"Activity\" style={{height:'100%'}}>\r\n                        <div className=\"activity-header\">\r\n                            <div className=\"p-grid\">\r\n                                <div className=\"p-col-6\">\r\n                                    <span style={{fontWeight:'bold'}}>Last Activity</span>\r\n                                    <p>Updated 1 minute ago</p>\r\n                                </div>\r\n                                <div className=\"p-col-6\" style={{textAlign:'right'}}>\r\n                                    <Button label=\"Refresh\" icon=\"pi pi-refresh\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ul className=\"activity-list\">\r\n                            <li>\r\n                                <div className=\"count\">$900</div>\r\n                                <div className=\"p-grid\">\r\n                                    <div className=\"p-col-6\">Income</div>\r\n                                    <div className=\"p-col-6\">95%</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"count\" style={{backgroundColor:'#f9c851'}}>$250</div>\r\n                                <div className=\"p-grid\">\r\n                                    <div className=\"p-col-6\">Tax</div>\r\n                                    <div className=\"p-col-6\">24%</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"count\" style={{backgroundColor:'#20d077'}}>$125</div>\r\n                                <div className=\"p-grid\">\r\n                                    <div className=\"p-col-6\">Invoices</div>\r\n                                    <div className=\"p-col-6\">55%</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"count\" style={{backgroundColor:'#f9c851'}}>$250</div>\r\n                                <div className=\"p-grid\">\r\n                                    <div className=\"p-col-6\">Expenses</div>\r\n                                    <div className=\"p-col-6\">15%</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"count\" style={{backgroundColor:'#007be5'}}>$350</div>\r\n                                <div className=\"p-grid\">\r\n                                    <div className=\"p-col-6\">Bonus</div>\r\n                                    <div className=\"p-col-6\">5%</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"count\" style={{backgroundColor:'#ef6262'}}>$500</div>\r\n                                <div className=\"p-grid\">\r\n                                    <div className=\"p-col-6\">Revenue</div>\r\n                                    <div className=\"p-col-6\">25%</div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </Panel>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Dashboard;\r\n","import React, {Component} from 'react';\r\nimport classNames from 'classnames';\r\nimport {AppTopbar} from './AppTopbar';\r\nimport {AppFooter} from './AppFooter';\r\nimport {AppMenu} from './AppMenu';\r\nimport {AppProfile} from './AppProfile';\r\nimport Dashboard from './components/Dashboard';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport './layout/layout.scss';\r\nimport './App.scss';\r\n\r\n\r\nclass Content extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            layoutMode: 'static',\r\n            layoutColorMode: 'dark',\r\n            staticMenuInactive: false,\r\n            overlayMenuActive: false,\r\n            mobileMenuActive: false\r\n        };\r\n\r\n        this.onWrapperClick = this.onWrapperClick.bind(this);\r\n        this.onToggleMenu = this.onToggleMenu.bind(this);\r\n        this.onSidebarClick = this.onSidebarClick.bind(this);\r\n        this.onMenuItemClick = this.onMenuItemClick.bind(this);\r\n        this.createMenu();\r\n    }\r\n\r\n    onWrapperClick(event) {\r\n        if (!this.menuClick) {\r\n            this.setState({\r\n                overlayMenuActive: false,\r\n                mobileMenuActive: false\r\n            });\r\n        }\r\n\r\n        this.menuClick = false;\r\n    }\r\n\r\n    onToggleMenu(event) {\r\n        this.menuClick = true;\r\n\r\n        if (this.isDesktop()) {\r\n            if (this.state.layoutMode === 'overlay') {\r\n                this.setState({\r\n                    overlayMenuActive: !this.state.overlayMenuActive\r\n                });\r\n            }\r\n            else if (this.state.layoutMode === 'static') {\r\n                this.setState({\r\n                    staticMenuInactive: !this.state.staticMenuInactive\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            const mobileMenuActive = this.state.mobileMenuActive;\r\n            this.setState({\r\n                mobileMenuActive: !mobileMenuActive\r\n            });\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    onSidebarClick(event) {\r\n        this.menuClick = true;\r\n    }\r\n\r\n    onMenuItemClick(event) {\r\n        if(!event.item.items) {\r\n            this.setState({\r\n                overlayMenuActive: false,\r\n                mobileMenuActive: false\r\n            })\r\n        }\r\n    }\r\n\r\n    createMenu() {\r\n        this.menu = [\r\n            {label: 'Dashboard', icon: 'pi pi-fw pi-home', command: () => {window.location = '#/dash-view'}},\r\n            {\r\n                label: 'Menu Modes', icon: 'pi pi-fw pi-cog',\r\n                items: [\r\n                    {label: 'Static Menu', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutMode: 'static'}) },\r\n                    {label: 'Overlay Menu', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutMode: 'overlay'}) }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Menu Colors', icon: 'pi pi-fw pi-align-left',\r\n                items: [\r\n                    {label: 'Dark', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutColorMode: 'dark'}) },\r\n                    {label: 'Light', icon: 'pi pi-fw pi-bars',  command: () => this.setState({layoutColorMode: 'light'}) }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Configurations', icon: 'pi pi-fw pi-unlock',\r\n                items: [\r\n                    {\r\n                        label: 'Employee Config', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeeconfig'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Accounting Configuration', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/accountingconfiguration'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Event Config', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/eventconfig'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Inventory Config', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/config'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Accounting Journal Entries', icon: 'pi pi-fw pi-id-card',\r\n                items: [\r\n                    {\r\n                        label: 'Journals', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/journals'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Unposted & Unadjusted Entries', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/unpostedandunadjustedjournalentries'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Unadjusted Entries', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/unadjustedjournalentries'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Unposted Entries', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/unpostedjournalentries'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Posted Entries', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/postedjournalentries'},\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n            },\r\n            {\r\n                label: 'Accounts & Transactions', icon: 'pi pi-fw pi-id-card',\r\n                items: [\r\n                    {\r\n                        label: 'Accounts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/accounts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Interest Bearing Accounts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/interestbearingaccounts'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'In Active Accounts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inactiveaccounts'},\r\n                        ]\r\n                    },\r\n\r\n                    {\r\n                        label: 'Debits', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/debits'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Credits', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/credits'},\r\n                        ]\r\n                    },\r\n\r\n                ]\r\n            },\r\n            {\r\n                label: 'Bills & Assets', icon: 'pi pi-fw pi-id-card',\r\n                items: [\r\n                    {\r\n                        label: 'Assets', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/assets'},\r\n                        ]\r\n                    },\r\n\r\n                    {\r\n                        label: 'Bills', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/bills/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/bills'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Bill Payments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/billpayments'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Fully Paid Not Verified Bills', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/fullypaidnotverifiedbills'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Fully Paid Bills', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/fullypaidbills'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Accounting Books', icon: 'pi pi-fw pi-id-card',\r\n                items: [\r\n                    {\r\n                        label: 'Ledgers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/ledgers'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Accounting Posts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/accountingposts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Accounting Adjustments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/accountingadjustments'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Workbooks', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/workbooks'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Taxes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/taxes'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Currencies', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/currencies'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Customers', icon: 'pi pi-fw pi-users',\r\n                items: [\r\n                    {\r\n                        label: 'Deactivated Customers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/deactivatedcustomers'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Customer Addresses', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/customeraddresses'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Active Customers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/activecustomers'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Officers', icon: 'pi pi-fw pi-user-plus',\r\n                items: [\r\n                    {\r\n                        label: 'Shareholders', icon: 'pi pi-fw pi-bookmark',\r\n                            items: [\r\n                                {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companyshareholders'},\r\n                            ]\r\n                    },\r\n                    {\r\n                        label: 'Managers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companymanagers'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Bookkeepers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companybookkeepers'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Payroll Officers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companypayrollofficers'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Drivers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companydrivers'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Manufacturing Staff', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companymanufacturingpersonells'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Inventory Controllers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companyinventorycontrollers'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Company Salesreps', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/companysalesreps'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Leave Requests', icon: 'pi pi-fw pi-user-plus',\r\n                items: [\r\n                    {\r\n                        label: 'Pending Leaves', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/pendingemployeeleaves'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Authorised Leaves', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/authorisedemployeeleaves'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Declined Leaves', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/declinedemployeeleaves'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Create', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/employeeleaves/create'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Payroll Configurations', icon: 'pi pi-fw pi-user-plus',\r\n                items: [\r\n                    {\r\n                        label: 'Pay Deductions', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepaydeductions'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Commission Rules', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepaycommissionrules'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Schedule', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepayrollschedules'},\r\n                        ]\r\n                    },\r\n\r\n                    {\r\n                        label: 'Allowances', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeeallowances'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Paygrades', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepaygrades'}\r\n                        ]\r\n                    },\r\n\r\n                    {\r\n                        label: 'Payroll Dates', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepayrolldates'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Payroll Taxes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepayrolltaxes'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Human Resource', icon: 'pi pi-fw pi-user-plus',\r\n                items: [\r\n                    {\r\n                        label: 'Employee Contracts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeecontracts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Contracts Terminations', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeecontractsterminations'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Employee Departments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeedepartments'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Attendance', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeeattendancetimesheets'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n\r\n                label: 'Payslips', icon: 'pi pi-fw pi-bookmark',\r\n                items: [\r\n                    {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/employeepayslips'}\r\n                ]\r\n            },\r\n            {\r\n                label: 'Events', icon: 'pi pi-fw pi-calendar-plus',\r\n                items: [\r\n                    {\r\n                        label: 'Upcoming Events', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/upcomingevents'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Completed Events', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/completedevents/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/completedevents'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Inventory Orders', icon: 'pi pi-fw pi-calendar',\r\n                items: [\r\n                    {\r\n                        label: 'Orders', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/inventoryorders/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inventoryorders'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Received & Paid', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/fullyreceivedandtotalpaidfororders'}\r\n                        ]\r\n                    },\r\n\r\n                    {\r\n                        label: 'Received, Paid & Verified', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/fullyreceivedtotalpaidforandverifiedorders'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Payments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inventoryorderpayments'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Inventory Configurations', icon: 'pi pi-fw pi-calendar',\r\n                items: [\r\n                    {\r\n                        label: 'Warehouses', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/warehouses'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Storage Medias', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/storagemedias'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Inventory Categories', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inventorycategories'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Debit Notes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/debitnotes/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/debitnotes'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Stock Management', icon: 'pi pi-fw pi-calendar',\r\n                items: [\r\n                    {\r\n                        label: 'Stock Items', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Add', icon: 'pi pi-fw pi-bookmark', to: '/inventorystockitems/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inventorystockitems'}\r\n                        ]\r\n                    },\r\n\r\n                    {\r\n                        label: 'Stock Receipts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Receive', icon: 'pi pi-fw pi-bookmark', to: '/inventoryreceipts/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inventoryreceipts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Stock Takes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/inventorystocktakes'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Stock Adjustments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/stockadjustments'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Inventory Items', icon: 'pi pi-fw pi-calendar',\r\n                items: [\r\n                    {\r\n                        label: 'Raw Materials', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/rawmaterials'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Equipments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/equipments'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Consumables', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/consumables'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Company Suppliers', icon: 'pi pi-fw pi-calendar',\r\n                items: [\r\n                    {\r\n                        label: 'Active Suppliers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/activesuppliers/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/activesuppliers'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'DeActived Suppliers', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/deactivedsuppliers'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Sales', icon: 'pi pi-fw pi-shopping-cart',\r\n                items: [\r\n                    {\r\n                        label: 'Quotations', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/quotations'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Unverified Invoices', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/unverifiedinvoices'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Overdue Invoices', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/overdueinvoices'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Voided Invoices', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/voidedinvoices'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Refunded Invoices', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/refundedinvoices'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Make Sales Invoices', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/fullypaidnotyetsalesinvoices'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Sales', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/sales'},\r\n                        ]\r\n                    },\r\n                    {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/sales/create'},\r\n                ]\r\n            },\r\n            {\r\n                label: 'Sales Payments', icon: 'pi pi-fw pi-money-bill',\r\n                items: [\r\n                    {\r\n                        label: 'Payments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/payments'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Receipts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/receipts/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/receipts'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Sales Returns & Discounts', icon: 'pi pi-fw pi-shopping-cart',\r\n                items: [\r\n                    {\r\n                        label: 'Credit Notes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/creditnotes/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/creditnotes'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Sales Groups Pricing Discounts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/salesgroupspricingdiscounts/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/salesgroupspricingdiscounts'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Production Process', icon: 'pi pi-fw pi-clone',\r\n                items: [\r\n                    {\r\n                        label: 'Unverified Production Processes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/unverifiedproductionprocesses'}\r\n                        ]\r\n                    },\r\n                    {label: 'CREATE', icon: 'pi pi-fw pi-bookmark', to: '/productionprocess'},\r\n                    {\r\n                        label: 'Verified Production Processes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/verifiedproductionprocesses'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Process Machines', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processmachines'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Process Machine Groups', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processmachinegroups'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Production Orders', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/productionorders/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/productionorders'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Process Rates', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processrates'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Manufactured Stock Management', icon: 'pi pi-fw pi-clone',\r\n                items: [\r\n                    {\r\n                        label: 'Stock Adjustments', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processedproductstockadjustments'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Stock Receipts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Receive', icon: 'pi pi-fw pi-bookmark', to: '/processedproductstockreceipts/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processedproductstockreceipts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Process Products', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/processproducts/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processproducts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Stock Takes', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/processedproductstocktakes'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Stock Items', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Add', icon: 'pi pi-fw pi-bookmark', to: '/manufacturedstockitems/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/manufacturedstockitems'},\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Waste Generation Reports', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/wastegenerationreports/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/wastegenerationreports'},\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                label: 'Manufacturing Shifts & Personel', icon: 'pi pi-fw pi-clone',\r\n                items: [\r\n                    {\r\n                        label: 'Shifts', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/shifts/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/shifts'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Shift Schedules', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'Create', icon: 'pi pi-fw pi-bookmark', to: '/shiftschedules/create'},\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/shiftschedules'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Manufacturing Teams', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/manufacturingteams'}\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Manufacturing Personels', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {label: 'View', icon: 'pi pi-fw pi-bookmark', to: '/manufacturingpersonels'}\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n        ];\r\n    }\r\n\r\n    addClass(element, className) {\r\n        if (element.classList)\r\n            element.classList.add(className);\r\n        else\r\n            element.className += ' ' + className;\r\n    }\r\n\r\n    removeClass(element, className) {\r\n        if (element.classList)\r\n            element.classList.remove(className);\r\n        else\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    }\r\n\r\n    isDesktop() {\r\n        return window.innerWidth > 1024;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.mobileMenuActive)\r\n            this.addClass(document.body, 'body-overflow-hidden');\r\n        else\r\n            this.removeClass(document.body, 'body-overflow-hidden');\r\n    }\r\n\r\n    render() {\r\n\r\n        const wrapperClass = classNames('layout-wrapper', {\r\n            'layout-overlay': this.state.layoutMode === 'overlay',\r\n            'layout-static': this.state.layoutMode === 'static',\r\n            'layout-static-sidebar-inactive': this.state.staticMenuInactive && this.state.layoutMode === 'static',\r\n            'layout-overlay-sidebar-active': this.state.overlayMenuActive && this.state.layoutMode === 'overlay',\r\n            'layout-mobile-sidebar-active': this.state.mobileMenuActive\r\n        });\r\n\r\n        const sidebarClassName = classNames(\"layout-sidebar\", {\r\n            'layout-sidebar-dark': this.state.layoutColorMode === 'dark',\r\n            'layout-sidebar-light': this.state.layoutColorMode === 'light'\r\n        });\r\n\r\n        return (\r\n            <div className={wrapperClass} onClick={this.onWrapperClick}>\r\n                <AppTopbar onToggleMenu={this.onToggleMenu}/>\r\n\r\n                <div ref={(el) => this.sidebar = el} className={sidebarClassName} onClick={this.onSidebarClick}>\r\n                    <AppProfile />\r\n                    <AppMenu model={this.menu} onMenuItemClick={this.onMenuItemClick} />\r\n                </div>\r\n\r\n                <Dashboard />\r\n\r\n                <AppFooter />\r\n\r\n                <div className=\"layout-mask\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n","import axios from 'axios';\r\nimport {\r\n    GET_ACCOUNT_TYPES_CATEGORY_CHOICES,\r\n    GET_ACCOUNT_TYPES_CLASSIFICATION_CHOICES,\r\n    GET_ASSETS_DEPRECIATION_METHOD_CHOICES,\r\n    GET_ASSET_TYPES_CHOICES,\r\n    GET_ACCOUNT_TYPE_CHOICES,\r\n    GET_BILL_FREQUENCY_CHOICES,\r\n    GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES,\r\n    GET_INTEREST_INTERVAL_ACCOUNT_CHOICES,\r\n    GET_ACCOUNT_INTEREST_METHOD_CHOICES,\r\n    GET_INVENTORY_VALUATION_PERIOD_CHOICES,\r\n    GET_INVENTORY_VALUATION_METHODS_CHOICES,\r\n    GET_INVENTORY_CHECK_FREQUENCY_CHOICES,\r\n    GET_INVENTORY_CHECK_DATE_CHOICES,\r\n    GET_UNIT_OF_MEASURE_CHOICES,\r\n    GET_CUSTOMER_ADDRESS_TYPE_CHOICES,\r\n    GET_EMPLOYEES_ATTENDANCE_STATUS_CHOICES,\r\n    GET_EMPLOYEES_TYPE_CHOICES,\r\n    GET_BILL_PAYMENT_STATUS_CHOICES,\r\n    GET_SUPPLIER_ADDRESS_TYPE_CHOICES,\r\n    GET_SUPPLIER_STATUS_CHOICES,\r\n    GET_CUSTOMER_STATUS_CHOICES,\r\n    GET_BILLING_CHOICES,\r\n    GET_BILL_PAYMENT_METHODS_CHOICES,\r\n    GET_INVOICE_SALES_TYPES_CHOICES,\r\n    GET_INVENTORY_ORDER_PAYMENT_METHODS_CHOICES,\r\n    GET_MANUFACTURING_SHIFT_TIME_CHOICES,\r\n    GET_EVENT_PRIORITY_CHOICES,\r\n    GET_EVENT_PARTICIPANT_TYPES_CHOICES,\r\n    GET_EVENT_REMINDER_CHOICES,\r\n    GET_EVENT_TIME_CHOICES,\r\n    GET_EVENT_ICON_CHOICES,\r\n    GET_EVENT_REPEAT_CHOICES,\r\n    GET_EMPLOYEE_PAYROLL_TAX_CHOICES,\r\n    GET_NATURE_OF_EMPLOYMENT_CHOICES,\r\n    GET_EMPLOYEE_YEAR_CHOICES,\r\n    GET_EMPLOYEE_TIMESHEET_MONTH_CHOICES,\r\n    GET_EMPLOYEE_PAYSLIP_STATUS_CHOICES,\r\n    GET_EMPLOYEE_PAYROLL_DATE_CHOICES,\r\n    GET_EMPLOYEE_DEDUCTION_METHODS,\r\n    GET_EMPLOYEE_PAY_FREQUENCIES,\r\n    GET_EMPLOYEE_LUNCH_CHOICES,\r\n    GET_EMPLOYEE_LEAVE_STATUS_CHOICES,\r\n    GET_EMPLOYEE_LEAVE_CATEGORY_CHOICES,\r\n    GET_EMPLOYEE_CATEGORY_CHOICES,\r\n    GET_EMPLOYMENT_CONTRACT_TERMINATION_REASONS,\r\n    GET_ACCOUNTING_PERIODS_CHOICES,\r\n    GET_JOURNAL_ENTRY_TYPES_CHOICES,\r\n    GET_EMPLOYEES_GENDER_CHOICES,\r\n    GET_INVENTORY_TYPES_CHOICES,\r\n    GET_PRODUCT_COMPONENT_PRICING_CHOICES,\r\n    GET_EQUIPMENT_COMPONENT_CONDITION_CHOICES,\r\n    GET_INVENTORY_ORDER_STATUS_CHOICES,\r\n    GET_INVOICE_SALES_CHOICES,\r\n    GET_INVOICE_LINE_CHOICES,\r\n    GET_MANUFACTURING_PROCESS_CHOICES,\r\n    GET_CUSTOMER_PAYMENT_METHODS_CHOICES,\r\n    GET_PROCESS_RATE_UNIT_TIME_CHOICES,\r\n    GET_MANUFACTURING_PRODUCT_TYPES_CHOICES,\r\n    GET_BILL_OF_MATERIALS_LINE_CHOICES,\r\n    GET_PROCESSED_PRODUCTS_STOCK_STATUS_CHOICES,\r\n\r\n} from './types';\r\n\r\nexport const getProcessedProductsStockStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/processed-products-stock-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESSED_PRODUCTS_STOCK_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getBillOfMaterialsLineChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/bill-of-materials-line-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL_OF_MATERIALS_LINE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getManufacturingProductTypesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/manufacturing-product-types-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURING_PRODUCT_TYPES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessRateUnitTimeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/process-rate-unit-time-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_RATE_UNIT_TIME_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCustomerPaymentMethodsChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/customer-payment-methods-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CUSTOMER_PAYMENT_METHODS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getManufacturingProcessChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/manufacturing-process-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURING_PROCESS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInvoiceLineChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/invoice-line-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVOICE_LINE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInvoiceSalesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/invoice-sales-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVOICE_SALES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryOrderStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-order-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ORDER_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEquipmentComponentConditionChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/equipment-component-condition-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EQUIPMENT_COMPONENT_CONDITION_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProductComponentPricingChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/product-component-pricing-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PRODUCT_COMPONENT_PRICING_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryTypesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-types-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_TYPES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeesGenderChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employees-gender-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEES_GENDER_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getJournalEntryTypesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/journal-entry-types-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_JOURNAL_ENTRY_TYPES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAccountingPeriodsChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/accounting-periods-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNTING_PERIODS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmploymentContractTerminationReasons = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employment-contract-termination-reasons/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYMENT_CONTRACT_TERMINATION_REASONS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeCategoryChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-category-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_CATEGORY_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeLeaveCategoryChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-leave-category-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_LEAVE_CATEGORY_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeLeaveStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-leave-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_LEAVE_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeLunchChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-lunch-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_LUNCH_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayFrequencies = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-pay-frequencies/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAY_FREQUENCIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeDeductionMethods = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-deduction-methods/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_DEDUCTION_METHODS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayrollDateChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-payroll-date-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYROLL_DATE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayslipStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-payslip-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYSLIP_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeTimesheetMonthChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-timesheet-month-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_TIMESHEET_MONTH_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeYearChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-year-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_YEAR_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getNatureOfEmploymentChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/nature-of-employment-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_NATURE_OF_EMPLOYMENT_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayrollTaxChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employee-payroll-tax-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYROLL_TAX_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getEventRepeatChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/event-repeat-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENT_REPEAT_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEventIconChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/event-icon-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENT_ICON_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEventTimeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/event-time-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENT_TIME_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEventReminderChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/event-reminder-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENT_REMINDER_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEventParticipantTypesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/event-participant-types-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENT_PARTICIPANT_TYPES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEventPriorityChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/event-priority-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EVENT_PRIORITY_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getManufacturingShiftTimeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/manufactring-shift-time-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURING_SHIFT_TIME_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryOrderPaymentMethodsChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-order-payment-methods-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ORDER_PAYMENT_METHODS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInvoiceSalesTypesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/invoice-sales-types-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVOICE_SALES_TYPES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getBillPaymentMethodsChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/bill-payment-methods-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL_PAYMENT_METHODS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getBillingChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/billing-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILLING_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getCustomerStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/customer-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CUSTOMER_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getSupplierStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/supplier-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SUPPLIER_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getSupplierAddressTypeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/supplier-address-type-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SUPPLIER_ADDRESS_TYPE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getBillPaymentStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/bill-payment-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL_PAYMENT_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeesTypeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employees-type-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEES_TYPE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeesAttendanceStatusChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/employees-attendance-status-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEES_ATTENDANCE_STATUS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCustomerAddressTypeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/customer-address-type-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CUSTOMER_ADDRESS_TYPE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getUnitOfMeasureChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/unit-of-measure-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNIT_OF_MEASURE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryCheckDateChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-check-date-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_CHECK_DATE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryCheckFrequencyChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-check-frequency-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_CHECK_FREQUENCY_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryValuationMethodsChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-valuation-methods-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_VALUATION_METHODS_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInventoryValuationPeriodChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/inventory-valuation-period-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_VALUATION_PERIOD_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAccountInterestMethodChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/account-interest-method-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNT_INTEREST_METHOD_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getInterestIntervalAccountChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/interest-interval-account-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INTEREST_INTERVAL_ACCOUNT_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAccountBalanceSheetCategoriesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/account-balance-sheet-categories-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNT_BALANCE_SHEET_CATEGORIES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getBillFrequencyChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/bill-frequency-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL_FREQUENCY_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\nexport const getAccountTypeChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/account-type-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNT_TYPE_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAssetTypesChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/asset-types-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ASSET_TYPES_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAssetsDepriciationMethodChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/assets-depriciation-method-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ASSETS_DEPRECIATION_METHOD_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAccountTypesCategoryChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/account-types-category-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNT_TYPES_CATEGORY_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAccountTypesClassificationChoices = () => dispatch => {\r\n    axios.get('http://127.0.0.1:8000/api/config/account-types-classification-choices/')\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNT_TYPES_CLASSIFICATION_CHOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const localhost = \"http://127.0.0.1:8000\"\r\n\r\nconst apiURL = \"/api\"\r\n\r\nconst endpoint = `${localhost}${apiURL}`\r\n\r\n//accounting\r\nexport const accountsURL = `${endpoint}/accounting/accounts/`\r\nexport const interestbearingaccountsURL = `${endpoint}/accounting/interest-bearing-accounts/`\r\nexport const journalsURL = `${endpoint}/accounting/journals/`\r\nexport const ledgersURL = `${endpoint}/accounting/ledgers/`\r\nexport const accountingpostsURL = `${endpoint}/accounting/accounting-posts/`\r\nexport const workbooksURL = `${endpoint}/accounting/workbooks/`\r\nexport const accountingadjustmentsURL = `${endpoint}/accounting/accounting-adjustments/`\r\nexport const debitsURL = `${endpoint}/accounting/debits/`\r\nexport const creditsURL = `${endpoint}/accounting/credits/`\r\nexport const fullypaidnotverifiedbillsURL = `${endpoint}/accounting/fully-paid-not-verified-bills/`\r\nexport const fullypaidbillsURL = `${endpoint}/accounting/fully-paid-bills/`\r\nexport const unpostedandunadjustedjournalentriesURL = `${endpoint}/accounting/unposted-and-unadjusted-journal-entries/`\r\nexport const unadjustedjournalentriesURL = `${endpoint}/accounting/unadjusted-journal-entries/`\r\nexport const unpostedjournalentriesURL = `${endpoint}/accounting/unposted-journal-entries/`\r\nexport const postedjournalentriesURL = `${endpoint}/accounting/posted-journal-entries/`\r\nexport const journalentriesURL = `${endpoint}/accounting/journal-entries/`\r\nexport const inactiveaccountsURL = `${endpoint}/accounting/in-active-accounts/`\r\nexport const assetsURL = `${endpoint}/accounting/assets/`\r\nexport const taxesURL = `${endpoint}/accounting/taxes/`\r\nexport const currenciesURL = `${endpoint}/accounting/currencies/`\r\nexport const billsURL = `${endpoint}/accounting/bills/`\r\nexport const billpaymentsURL = `${endpoint}/accounting/bill-payments/`\r\n\r\n//manufacture\r\nexport const unverifiedproductionprocessesURL = `${endpoint}/manufacture/unverified-production-processes/`\r\nexport const verifiedproductionprocessesURL = `${endpoint}/manufacture/verified-production-processes/`\r\nexport const processmachinesURL = `${endpoint}/manufacture/process-machines/`\r\nexport const processmachinegroupsURL = `${endpoint}/manufacture/process-machine-groups/`\r\nexport const shiftsURL = `${endpoint}/manufacture/shifts/`\r\nexport const shiftschedulesURL = `${endpoint}/manufacture/shift-schedules/`\r\nexport const processratesURL = `${endpoint}/manufacture/process-rates/`\r\nexport const productionordersURL = `${endpoint}/manufacture/production-orders/`\r\nexport const manufacturingteamsURL = `${endpoint}/manufacture/manufacturing-teams/`\r\nexport const manufacturingpersonelsURL = `${endpoint}/manufacture/manufacturing-personels/`\r\nexport const processproductsURL = `${endpoint}/manufacture/process-products/`\r\nexport const wastegenerationreportsURL = `${endpoint}/manufacture/waste-generation-reports/`\r\nexport const processedproductstockreceiptsURL = `${endpoint}/manufacture/processed-product-stock-receipts/`\r\nexport const processedproductstockadjustmentsURL = `${endpoint}/manufacture/processed-product-stock-adjustments/`\r\nexport const processedproductstocktakesURL = `${endpoint}/manufacture/processed-product-stock-takes/`\r\nexport const manufacturedstockitemsURL = `${endpoint}/manufacture/manufactured-stock-items/`\r\nexport const productionprocessesURL = `${endpoint}/manufacture/production-processes/`\r\n\r\n\r\n//inventory\r\nexport const inventorycategoriesURL = `${endpoint}/inventory/inventory-categories/`\r\nexport const debitnotesURL = `${endpoint}/inventory/debit-notes/`\r\nexport const inventoryordersURL = `${endpoint}/inventory/inventory-orders/`\r\nexport const inventoryorderpaymentsURL = `${endpoint}/inventory/inventory-orderpayments/`\r\nexport const warehousesURL = `${endpoint}/inventory/warehouses/`\r\nexport const inventoryitemsURL = `${endpoint}/inventory/inventory-items/`\r\nexport const inventorystockitemsURL = `${endpoint}/inventory/inventorystockitems/`\r\nexport const storagemediasURL = `${endpoint}/inventory/storagemedias/`\r\nexport const orderitemsURL = `${endpoint}/inventory/orderitems/`\r\nexport const inventoryreceiptsURL = `${endpoint}/inventory/inventoryreceipts/`\r\nexport const stockadjustmentsURL = `${endpoint}/inventory/stockadjustments/`\r\nexport const inventorystocktakesURL = `${endpoint}/inventory/inventorystocktakes/`\r\nexport const activesuppliersURL = `${endpoint}/inventory/active-suppliers/`\r\nexport const deactivedsuppliersURL = `${endpoint}/inventory/de-actived-suppliers/`\r\nexport const supplieraddressesURL = `${endpoint}/inventory/supplier-addresses/`\r\nexport const rawmaterialsURL = `${endpoint}/inventory/raw-materials/`\r\nexport const equipmentsURL = `${endpoint}/inventory/equipments/`\r\nexport const consumablesURL = `${endpoint}/inventory/consumables/`\r\nexport const fullyreceivedandtotalpaidforordersURL = `${endpoint}/inventory/fully-received-and-total-paid-for-orders/`\r\nexport const fullyreceivedtotalpaidforandverifiedordersURL = `${endpoint}/inventory/fully-received-total-paid-for-and-verified-orders/`\r\n\r\n//events\r\nexport const upcomingeventsURL = `${endpoint}/events/upcoming-events/`\r\nexport const completedeventsURL = `${endpoint}/events/completed-events/`\r\nexport const eventconfigURL = `${endpoint}/events/event-config/`\r\n\r\n//customers\r\nexport const deactivatedcustomersURL = `${endpoint}/customers/deactivated-customers/`\r\nexport const customeraddressesURL = `${endpoint}/customers/customer-addresses/`\r\nexport const activecustomersURL = `${endpoint}/customers/active-customers/`\r\n\r\n// cash\r\nexport const cashdrawersURL = `${endpoint}/cash/cash-drawers/`\r\n\r\n//employees\r\nexport const employeesURL= `${endpoint}/employees/employees/`\r\nexport const employeeconfigURL= `${endpoint}/employees/employee-config/`\r\nexport const employeecontractsURL= `${endpoint}/employees/employee-contracts/`\r\nexport const employeecontractsterminationsURL= `${endpoint}/employees/employee-contracts-terminations/`\r\nexport const employeedepartmentsURL= `${endpoint}/employees/employee-departments/`\r\nexport const employeeleavesURL= `${endpoint}/employees/employee-leaves/`\r\nexport const employeepaygradesURL= `${endpoint}/employees/employee-paygrades/`\r\nexport const employeeallowancesURL= `${endpoint}/employees/employee-allowances/`\r\nexport const employeepaydeductionsURL= `${endpoint}/employees/employee-pay-deductions/`\r\nexport const employeepaycommissionrulesURL= `${endpoint}/employees/employee-pay-commission-rules/`\r\nexport const employeepayrolltaxesURL= `${endpoint}/employees/employee-payroll-taxes/`\r\nexport const employeepayrollschedulesURL= `${endpoint}/employees/employee-payroll-schedules/`\r\nexport const employeepayrolldatesURL= `${endpoint}/employees/employee-payroll-dates/`\r\nexport const employeepayslipsURL= `${endpoint}/employees/employee-payslips/`\r\nexport const employeeattendancetimesheetsURL= `${endpoint}/employees/employee-attendance-timesheets/`\r\nexport const companyshareholdersURL= `${endpoint}/employees/company-shareholders/`\r\nexport const companymanagersURL= `${endpoint}/employees/company-managers/`\r\nexport const companybookkeepersURL= `${endpoint}/employees/company-bookkeepers/`\r\nexport const companypayrollofficersURL= `${endpoint}/employees/company-payroll-officers/`\r\nexport const companydriversURL= `${endpoint}/employees/company-drivers/`\r\nexport const companymanufacturingpersonellsURL= `${endpoint}/employees/company-manufacturing-personells/`\r\nexport const companyinventorycontrollersURL= `${endpoint}/employees/company-inventory-controllers/`\r\nexport const companysalesrepsURL= `${endpoint}/employees/company-salesreps/`\r\nexport const pendingemployeeleavesURL= `${endpoint}/employees/pending-employee-leaves/`\r\nexport const authorisedemployeeleavesURL= `${endpoint}/employees/authorised-employee-leaves/`\r\nexport const declinedemployeeleavesURL= `${endpoint}/employees/declined-employee-leaves/`\r\n\r\n//invoicing\r\nexport const creditnotesURL= `${endpoint}/sales/creditnotes/`\r\nexport const paymentsURL= `${endpoint}/sales/payments/`\r\nexport const invoicesURL= `${endpoint}/sales/invoices/`\r\nexport const receiptsURL= `${endpoint}/sales/receipts/`\r\nexport const invoicelinesURL= `${endpoint}/sales/invoicelines/`\r\nexport const salesgroupspricingdiscountsURL= `${endpoint}/sales/sales-groups-pricing-discounts/`\r\nexport const quotationsURL= `${endpoint}/sales/quotations/`\r\nexport const unverifiedinvoicesURL= `${endpoint}/sales/unverified-invoices/`\r\nexport const overdueinvoicesURL= `${endpoint}/sales/overdue-invoices/`\r\nexport const voidedinvoicesURL= `${endpoint}/sales/voided-invoices/`\r\nexport const refundedinvoicesURL= `${endpoint}/sales/refunded-invoices/`\r\nexport const fullypaidnotyetsalesinvoicesURL= `${endpoint}/sales/fullypaid-not-yet-sales-invoices/`\r\nexport const salesURL= `${endpoint}/sales/sales/`\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_CURRENCY,\r\n        GET_CURRENCIES,\r\n        DELETE_CURRENCY,\r\n        EDIT_CURRENCY\r\n    } from '../types/currencyTypes';\r\nimport { currenciesURL } from '../constants';\r\n\r\n// Get\r\nexport const getCurrencies = () => dispatch => {\r\n    axios.get(currenciesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CURRENCIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteCurrency = (id) => dispatch => {\r\n    axios.delete(currenciesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_CURRENCY,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCurrency = (currency) => dispatch => {\r\n    axios.post(currenciesURL, currency)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CURRENCY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Edit\r\nexport const editCurrency = (id, currency) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/currencies/${id}/`, currency)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_CURRENCY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { GET_EMPLOYEES, ADD_EMPLOYEE } from '../types/employeesTypes';\r\nimport { employeesURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getEmployees = () => dispatch => {\r\n    axios.get(employeesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployee = (employee) => dispatch => {\r\n    axios.post(employeesURL, employee)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addAccountingConfiguration } from '..//../actions/accountingconfigurations';\r\nimport PropTypes from 'prop-types';\r\nimport { getAccountingPeriodsChoices } from '..//../actions/choices';\r\nimport { getCurrencies } from '..//../actions/currencies';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Button} from 'primereact/button';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {InputNumber} from 'primereact/inputnumber';\r\n\r\nclass AccountingConfigurationForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            start_of_financial_year: '',\r\n            default_accounting_period: null,\r\n            default_bookkeeper: null,\r\n            equipment_capitalization_limit: '',\r\n            is_configured: false,\r\n            active_currency: null\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onDefaultBookkeeper = this.onDefaultBookkeeper.bind(this);\r\n        this.onActiveCurrency = this.onActiveCurrency.bind(this);\r\n        this.onIsConfigured = this.onIsConfigured.bind(this);\r\n    }\r\n\r\n    onIsConfigured() {\r\n        this.setState({\r\n            is_configured: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({default_accounting_period: e.value})\r\n    }\r\n\r\n    onDefaultBookkeeper (e){\r\n        this.setState({default_bookkeeper: e.value})\r\n    }\r\n\r\n    onActiveCurrency (e){\r\n        this.setState({active_currency: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            start_of_financial_year,\r\n            default_accounting_period,\r\n            default_bookkeeper,\r\n            equipment_capitalization_limit,\r\n            is_configured,\r\n            active_currency\r\n        } = this.state;\r\n        const accountingconfiguration = {\r\n            start_of_financial_year,\r\n            default_accounting_period,\r\n            default_bookkeeper,\r\n            equipment_capitalization_limit,\r\n            is_configured,\r\n            active_currency\r\n        };\r\n        this.props.addAccountingConfiguration(accountingconfiguration);\r\n        this.setState({\r\n            start_of_financial_year: '',\r\n            default_accounting_period: '',\r\n            default_bookkeeper: '',\r\n            equipment_capitalization_limit: '',\r\n            is_configured: true,\r\n            active_currency: ''\r\n        });\r\n    };\r\n\r\n    static propTypes = {\r\n        addAccountingConfiguration: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getAccountingPeriodsChoices: PropTypes.func.isRequired,\r\n        getCurrencies: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployees()\r\n        this.props.getAccountingPeriodsChoices()\r\n        this.props.getCurrencies()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            start_of_financial_year,\r\n            default_accounting_period,\r\n            default_bookkeeper,\r\n            equipment_capitalization_limit,\r\n            active_currency\r\n        } = this.state;\r\n\r\n        const {accountingperiodschoices} = this.props;\r\n        const {employees} = this.props;\r\n        const {currencies} = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Accounting Configuration</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <label>Equipment Capitalization Limit</label>\r\n                         <InputNumber\r\n                            name=\"equipment_capitalization_limit\"\r\n                            mode=\"decimal\"\r\n                            onChange={this.onChange}\r\n                            value={equipment_capitalization_limit}\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                          />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Calendar\r\n                            showIcon={true}\r\n                            className=\"form-control\"\r\n                            name=\"start_of_financial_year\"\r\n                            onChange={this.onChange}\r\n                            value={start_of_financial_year}\r\n                            dateFormat=\"yy-mm-dd\"\r\n                        />\r\n                        <label htmlFor=\"inputtext\">Start Of Financial Year</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>IS CONFIGURED :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.onIsConfigured}\r\n                            checked={this.state.is_configured}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={default_accounting_period}\r\n                            onChange={this.onTypeChange}\r\n                            options={accountingperiodschoices}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT DEFAULT ACCOUNTING PERIOD</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={default_bookkeeper}\r\n                            onChange={this.onDefaultBookkeeper}\r\n                            options={employees}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"id_number\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT DEFAULT BOOKKEEPER</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={active_currency}\r\n                            onChange={this.onActiveCurrency}\r\n                            options={currencies}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT ACTIVE CURRENCIES</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    accountingperiodschoices: state.accountingperiodschoices.accountingperiodschoices,\r\n    currencies: state.currencies.currencies,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEmployees, getAccountingPeriodsChoices, getCurrencies, addAccountingConfiguration})(AccountingConfigurationForm);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_TAX,\r\n        GET_TAXES,\r\n        DELETE_TAX,\r\n        EDIT_TAX\r\n    } from '../types/taxTypes';\r\nimport { taxesURL } from '../constants';\r\n\r\n// Get\r\nexport const getTaxes = () => dispatch => {\r\n    axios.get(taxesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_TAXES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteTax = (id) => dispatch => {\r\n    axios.delete(taxesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_TAX,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addTax = (tax) => dispatch => {\r\n    axios.post(taxesURL, tax)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_TAX,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Edit\r\nexport const editTax = (id, tax) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/taxes/${id}/`, tax)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_TAX,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getTaxes, addTax, editTax, deleteTax } from '..//../actions/taxes';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Taxes extends Component {\r\n\r\n    emptyTax = {\r\n        name: '',\r\n        rate: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            taxes: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedTaxes: null,\r\n            taxDialog: false,\r\n            deleteTaxDialog: false,\r\n            deleteTaxesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                rate: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                rate:''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveTax = this.saveTax.bind(this);\r\n        this.editTax = this.editTax.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteTax = this.confirmDeleteTax.bind(this);\r\n        this.deleteTax = this.deleteTax.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedTaxes = this.deleteSelectedTaxes.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteTaxDialog = this.hideDeleteTaxDialog.bind(this);\r\n        this.hideDeleteTaxesDialog = this.hideDeleteTaxesDialog.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        taxes : PropTypes.array.isRequired,\r\n        getTaxes: PropTypes.func.isRequired,\r\n        addTax: PropTypes.func.isRequired,\r\n        editTax: PropTypes.func.isRequired,\r\n        deleteTax: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                rate: ''\r\n            },\r\n            submitted: false,\r\n            taxDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            taxDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteTaxDialog() {\r\n        this.setState({ deleteTaxDialog: false });\r\n    }\r\n\r\n    hideDeleteTaxesDialog() {\r\n        this.setState({ deleteTaxesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTaxes();\r\n    }\r\n\r\n\r\n    saveTax = (e) => {\r\n        e.preventDefault();\r\n        const { name, rate } = this.state;\r\n        const tax = { name, rate};\r\n        this.props.addTax(tax);\r\n        this.setState({\r\n            name: '',\r\n            rate: '',\r\n            taxDialog: false\r\n        });\r\n        this.props.history.push('/taxes');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                rate: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editTax(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            rate\r\n\r\n        } = this.state.selectRow;\r\n        const tax = {\r\n            name,\r\n            rate,\r\n\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editTax(this.state.selectRow.id, tax);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteTax(tax) {\r\n        this.setState({\r\n            tax,\r\n            deleteTaxDialog: true\r\n        });\r\n    }\r\n\r\n    deleteTax() {\r\n        this.props.deleteTax();\r\n        this.setState({\r\n            deleteTaxDialog: false,\r\n            tax: this.emptyTax\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteTaxesDialog: true });\r\n    }\r\n\r\n    deleteSelectedTaxes() {\r\n        this.props.deleteTax();\r\n        this.setState({\r\n            deleteTaxesDialog: false,\r\n            selectedTaxes: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Taxes</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW TAX\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteTax(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const taxDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveTax} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editTax}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteTaxesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteTaxesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedTaxes} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name, rate } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.taxes}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedTaxes} onSelectionChange={e => this.setState({selectedTaxes: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Taxes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"rate\" header=\"Rate\" sortable filter filterPlaceholder=\"Search by Rate\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.taxDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Tax Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={taxDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Name</label>\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Rate</label>\r\n                                 <InputNumber\r\n                                    name=\"rate\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={rate}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE TAX\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} \r\n                                onChange={(e) => this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inRate\">Rate </label>\r\n                            <InputNumber\r\n                                id=\"inRate\"\r\n                                value={this.state.selectRow.rate}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        rate: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteTaxesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteTaxesDialogFooter} onHide={this.hideDeleteTaxesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.tax && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    taxes: state.taxes.taxes\r\n})\r\n\r\nexport default connect(mapStateToProps, { getTaxes, addTax, editTax, deleteTax } ) (Taxes);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_JOURNALS,\r\n        DELETE_JOURNAL,\r\n        GET_JOURNAL\r\n    } from '../types/journalTypes';\r\nimport { journalsURL } from '../constants';\r\n\r\n// Get\r\nexport const getJournals = () => dispatch => {\r\n    axios.get(journalsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_JOURNALS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteJournal = (id) => dispatch => {\r\n    axios.delete(journalsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_JOURNAL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getJournal = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/journals/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_JOURNAL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getJournals} from '..//../actions/journals';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Journals extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            journals : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedJournals: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        journals : PropTypes.array.isRequired,\r\n        getJournals: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getJournals();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Journal</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.journals}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedJournals} onSelectionChange={e => this.setState({selectedJournals: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Jornals found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"name\"\r\n                        header=\"Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"description\"\r\n                        header=\"Description\"\r\n                        sortable filter filterPlaceholder=\"Search by Description\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    journals: state.journals.journals\r\n})\r\n\r\nexport default connect(mapStateToProps, {getJournals} ) (Journals);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_ACCOUNT,\r\n        GET_ACCOUNTS,\r\n        DELETE_ACCOUNT,\r\n        GET_ACCOUNT,\r\n        EDIT_ACCOUNT,\r\n    } from '../types/accountTypes';\r\nimport { accountsURL } from '../constants';\r\n\r\n// Get\r\nexport const getAccounts = () => dispatch => {\r\n    axios.get(accountsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteAccount = (id) => dispatch => {\r\n    axios.delete(accountsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ACCOUNT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addAccount = (account) => dispatch => {\r\n    axios.post(accountsURL, account)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getAccount = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/accounts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editAccount = (id, account) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/accounts/${id}/`, account)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getAssets, addAsset, editAsset, deleteAsset } from '..//../actions/assets';\r\nimport { getAssetTypesChoices, getAssetsDepriciationMethodChoices } from '..//../actions/choices';\r\nimport { getJournals } from '..//../actions/journals';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getAccounts } from '..//../actions/accounts';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass Assets extends Component {\r\n\r\n    emptyAsset = {\r\n        name: '',\r\n        description: '',\r\n        category: null,\r\n        initial_value: '',\r\n        credit_account: null,\r\n        depreciation_period: '',\r\n        init_date: '',\r\n        depreciation_method: null,\r\n        salvage_value: '',\r\n        created_by: null,\r\n        entry: null\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            assets: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAssets: null,\r\n            assetDialog: false,\r\n            deleteAssetDialog: false,\r\n            deleteAssetsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                category: null,\r\n                initial_value: '',\r\n                credit_account: null,\r\n                depreciation_period: '',\r\n                init_date: '',\r\n                depreciation_method: null,\r\n                salvage_value: '',\r\n                created_by: null,\r\n                entry: null\r\n            },\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                category: null,\r\n                initial_value: '',\r\n                credit_account: null,\r\n                depreciation_period: '',\r\n                init_date: '',\r\n                depreciation_method: null,\r\n                salvage_value: '',\r\n                created_by: null,\r\n                entry: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveAsset = this.saveAsset.bind(this);\r\n        this.editAsset = this.editAsset.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteAsset = this.confirmDeleteAsset.bind(this);\r\n        this.deleteAsset = this.deleteAsset.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedAssets = this.deleteSelectedAssets.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteAssetDialog = this.hideDeleteAssetDialog.bind(this);\r\n        this.hideDeleteAssetsDialog = this.hideDeleteAssetsDialog.bind(this);\r\n        this.onCategory = this.onCategory.bind(this);\r\n        this.onCreditAccount = this.onCreditAccount.bind(this);\r\n        this.onDepreciationMethod = this.onDepreciationMethod.bind(this);\r\n        this.onCreatedBy = this.onCreatedBy.bind(this);\r\n        this.onEntry = this.onEntry.bind(this);\r\n    }\r\n\r\n    onCategory (e){\r\n        this.setState({category: e.value})\r\n    }\r\n\r\n    onCreditAccount (e){\r\n        this.setState({credit_account: e.value})\r\n    }\r\n\r\n    onDepreciationMethod (e){\r\n        this.setState({depreciation_method: e.value})\r\n    }\r\n\r\n    onCreatedBy (e){\r\n        this.setState({created_by: e.value})\r\n    }\r\n\r\n    onEntry (e){\r\n        this.setState({entry: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        assets : PropTypes.array.isRequired,\r\n        getAssets: PropTypes.func.isRequired,\r\n        addAsset: PropTypes.func.isRequired,\r\n        editAsset: PropTypes.func.isRequired,\r\n        deleteAsset: PropTypes.func.isRequired,\r\n        getAssetTypesChoices: PropTypes.func.isRequired,\r\n        getAssetsDepriciationMethodChoices: PropTypes.func.isRequired,\r\n        getJournals: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAssetTypesChoices()\r\n        this.props.getAssetsDepriciationMethodChoices()\r\n        this.props.getJournals()\r\n        this.props.getEmployees()\r\n        this.props.getAccounts()\r\n        this.props.getAssets()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                category: null,\r\n                initial_value: '',\r\n                credit_account: null,\r\n                depreciation_period: '',\r\n                init_date: '',\r\n                depreciation_method: null,\r\n                salvage_value: '',\r\n                created_by: null,\r\n                entry: null\r\n            },\r\n            submitted: false,\r\n            assetDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            assetDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteAssetDialog() {\r\n        this.setState({ deleteAssetDialog: false });\r\n    }\r\n\r\n    hideDeleteAssetsDialog() {\r\n        this.setState({ deleteAssetsDialog: false });\r\n    }\r\n\r\n\r\n    saveAsset = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            description,\r\n            category,\r\n            initial_value,\r\n            credit_account,\r\n            depreciation_period,\r\n            init_date,\r\n            depreciation_method,\r\n            salvage_value,\r\n            created_by,\r\n            entry,\r\n        } = this.state;\r\n        const asset = {\r\n            name,\r\n            description,\r\n            category,\r\n            initial_value,\r\n            credit_account,\r\n            depreciation_period,\r\n            init_date,\r\n            depreciation_method,\r\n            salvage_value,\r\n            created_by,\r\n            entry,\r\n        };\r\n        this.props.addAsset(asset);\r\n        this.setState({\r\n            name: '',\r\n            description: '',\r\n            category: '',\r\n            initial_value: '',\r\n            credit_account: '',\r\n            depreciation_period: '',\r\n            init_date: '',\r\n            depreciation_method: '',\r\n            salvage_value: '',\r\n            created_by: '',\r\n            entry: '',\r\n            assetDialog: false\r\n        });\r\n        this.props.history.push('/assets');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                category: '',\r\n                initial_value: '',\r\n                credit_account: '',\r\n                depreciation_period: '',\r\n                init_date: '',\r\n                depreciation_method: '',\r\n                salvage_value: '',\r\n                created_by: '',\r\n                entry: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editAsset(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            description,\r\n            category,\r\n            initial_value,\r\n            credit_account,\r\n            depreciation_period,\r\n            init_date,\r\n            depreciation_method,\r\n            salvage_value,\r\n            created_by,\r\n            entry,\r\n\r\n        } = this.state.selectRow;\r\n        const asset = {\r\n            name,\r\n            description,\r\n            category,\r\n            initial_value,\r\n            credit_account,\r\n            depreciation_period,\r\n            init_date,\r\n            depreciation_method,\r\n            salvage_value,\r\n            created_by,\r\n            entry,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editAsset(this.state.selectRow.id, asset);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Ad'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteAsset(asset) {\r\n        this.setState({\r\n            asset,\r\n            deleteAssetDialog: true\r\n        });\r\n    }\r\n\r\n    deleteAsset() {\r\n        this.props.deleteAsset();\r\n        this.setState({\r\n            deleteAssetDialog: false,\r\n            asset: this.emptyAsset\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteAssetsDialog: true });\r\n    }\r\n\r\n    deleteSelectedAssets() {\r\n        this.props.deleteAsset();\r\n        this.setState({\r\n            deleteAssetsDialog: false,\r\n            selectedAssets: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Asset</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW ASSET\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteAsset(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const assetDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveAsset} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editAsset}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteAssetsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteAssetsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedAssets} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            description,\r\n            category,\r\n            initial_value,\r\n            credit_account,\r\n            depreciation_period,\r\n            init_date,\r\n            depreciation_method,\r\n            salvage_value,\r\n            created_by,\r\n            entry,\r\n        } = this.state;\r\n\r\n        const { assettypeschoices } = this.props;\r\n        const { assetsdepriciationmethodchoices } = this.props;\r\n        const { journals } = this.props;\r\n        const { employees } = this.props;\r\n        const { accounts } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.taxes}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedAssets} onSelectionChange={e => this.setState({selectedAssets: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Bill Payments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"credit_account\"\r\n                            header=\"Credit Account\"\r\n                            sortable filter filterPlaceholder=\"Search by Credit Account\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"initial_value\"\r\n                            header=\"Initial Value\"\r\n                            sortable filter filterPlaceholder=\"Search by Initial Value\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"created_by\"\r\n                            header=\"Created By\"\r\n                            sortable filter filterPlaceholder=\"Search by Created By\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"category\"\r\n                            header=\"Category\"\r\n                            sortable filter filterPlaceholder=\"Search by Category\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.assetDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Asset Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={assetDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Initial Value</label>\r\n                             <InputNumber\r\n                                name=\"initial_value\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={initial_value}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Depreciation Period</label>\r\n                             <InputNumber\r\n                                name=\"depreciation_period\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={depreciation_period}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Salvage Value</label>\r\n                             <InputNumber\r\n                                name=\"salvage_value\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={salvage_value}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                name=\"init_date\"\r\n                                onChange={this.onChange}\r\n                                value={init_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Init Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"description\"\r\n                                    onChange={this.onChange}\r\n                                    value={description}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={category}\r\n                                onChange={this.onCategory}\r\n                                options={assettypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CATEGORY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={credit_account}\r\n                                onChange={this.onCreditAccount}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CREDIT ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={depreciation_method}\r\n                                onChange={this.onDepreciationMethod}\r\n                                options={assetsdepriciationmethodchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT DEPRECIATION METHOD</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={created_by}\r\n                                onChange={this.onCreatedBy}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"id_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CREATED BY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={entry}\r\n                                onChange={this.onEntry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT ENTRY</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE ASSET\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <InputText\r\n                                id=\"inName\" value={this.state.selectRow.name}\r\n                                style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            name: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Initial Value</label>\r\n                            <InputNumber\r\n                                id=\"inInitialValue\"\r\n                                value={this.state.selectRow.initial_value}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        initial_value: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Depreciation Period</label>\r\n                            <InputNumber\r\n                                id=\"inDepreciationPeriod\"\r\n                                value={this.state.selectRow.depreciation_period}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        depreciation_period: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Salvage Value</label>\r\n                            <InputNumber\r\n                                id=\"inSalvageValue\"\r\n                                value={this.state.selectRow.salvage_value}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        salvage_value: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inInitDate\"\r\n                                value={this.state.selectRow.init_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        init_date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inputtext\">Init Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    id=\"inDescription\"\r\n                                    value={this.state.selectRow.description}\r\n                                    onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            description: e.target.value\r\n                                        }\r\n                                    })\r\n                                }/>\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCategory\"\r\n                                value={this.state.selectRow.category}\r\n                                options={assettypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        category: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCreditAccount\"\r\n                                value={this.state.selectRow.credit_account}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        credit_account: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inDepreciationMethod\"\r\n                                value={this.state.selectRow.depreciation_method}\r\n                                options={assetsdepriciationmethodchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        depreciation_method: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCreatedBy\"\r\n                                value={this.state.selectRow.created_by}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        created_by: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEntry\"\r\n                                value={this.state.selectRow.entry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        entry: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteAssetsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteAssetsDialogFooter} onHide={this.hideDeleteAssetsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.assets && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    assettypeschoices: state.assettypeschoices.assettypeschoices,\r\n    assetsdepriciationmethodchoices: state.assetsdepriciationmethodchoices.assetsdepriciationmethodchoices,\r\n    journals: state.journals.journals,\r\n    employees: state.employees.employees,\r\n    accounts: state.accounts.accounts,\r\n    assets: state.assets.assets,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAssetTypesChoices,\r\n    getAssetsDepriciationMethodChoices,\r\n    getJournals,\r\n    getEmployees,\r\n    getAccounts,\r\n    addAsset,\r\n    getAssets,\r\n    editAsset,\r\n    deleteAsset } ) (Assets);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_ASSET,\r\n        GET_ASSETS,\r\n        DELETE_ASSET,\r\n        GET_ASSET,\r\n        EDIT_ASSET\r\n    } from '../types/assetTypes';\r\nimport { assetsURL } from '../constants';\r\n\r\n// Get\r\nexport const getAssets = () => dispatch => {\r\n    axios.get(assetsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ASSETS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteAsset = (id) => dispatch => {\r\n    axios.delete(assetsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ASSET,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addAsset = (asset) => dispatch => {\r\n    axios.post(assetsURL, asset)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ASSET,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getAsset = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/assets/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ASSET,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editAsset = (id, asset) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/assets/${id}/`, asset)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_ASSET,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCurrencies, addCurrency, editCurrency, deleteCurrency } from '..//../actions/currencies';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass Currencies extends Component {\r\n\r\n    emptyCurrency = {\r\n        name: '',\r\n        symbol: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currencies: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedCurrencies: null,\r\n            taxDialog: false,\r\n            deleteCurrencyDialog: false,\r\n            deleteCurrenciesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                symbol: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                symbol:''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveCurrency = this.saveCurrency.bind(this);\r\n        this.editCurrency = this.editCurrency.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteCurrency = this.confirmDeleteCurrency.bind(this);\r\n        this.deleteCurrency = this.deleteCurrency.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedCurrencies = this.deleteSelectedCurrencies.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteCurrencyDialog = this.hideDeleteCurrencyDialog.bind(this);\r\n        this.hideDeleteCurrenciesDialog = this.hideDeleteCurrenciesDialog.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        currencies : PropTypes.array.isRequired,\r\n        getCurrencies: PropTypes.func.isRequired,\r\n        addCurrency: PropTypes.func.isRequired,\r\n        editCurrency: PropTypes.func.isRequired,\r\n        deleteCurrency: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                symbol: ''\r\n            },\r\n            submitted: false,\r\n            currencyDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            currencyDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteCurrencyDialog() {\r\n        this.setState({ deleteCurrencyDialog: false });\r\n    }\r\n\r\n    hideDeleteCurrenciesDialog() {\r\n        this.setState({ deleteCurrenciesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCurrencies();\r\n    }\r\n\r\n\r\n    saveCurrency = (e) => {\r\n        e.preventDefault();\r\n        const { name, symbol } = this.state;\r\n        const currency = { name, symbol};\r\n        this.props.addCurrency(currency);\r\n        this.setState({\r\n            name: '',\r\n            symbol: '',\r\n            currencyDialog: false\r\n        });\r\n        this.props.history.push('/currencies');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                symbol: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editCurrency(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            symbol\r\n\r\n        } = this.state.selectRow;\r\n        const currency = {\r\n            name,\r\n            symbol,\r\n\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editCurrency(this.state.selectRow.id, currency);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteCurrency(currency) {\r\n        this.setState({\r\n            currency,\r\n            deleteCurrencyDialog: true\r\n        });\r\n    }\r\n\r\n    deleteCurrency() {\r\n        this.props.deleteCurrency();\r\n        this.setState({\r\n            deleteCurrencyDialog: false,\r\n            currency: this.emptyCurrency\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteCurrenciesDialog: true });\r\n    }\r\n\r\n    deleteSelectedCurrencies() {\r\n        this.props.deleteCurrency();\r\n        this.setState({\r\n            deleteCurrenciesDialog: false,\r\n            selectedCurrencies: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Currency</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW CURRENCY\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteCurrency(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const currencyDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveCurrency} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editCurrency}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteCurrenciesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteCurrenciesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedCurrencies} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name, symbol } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.currencies}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedCurrencies} onSelectionChange={e => this.setState({selectedCurrencies: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Currency found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"symbol\" header=\"Symbol\" sortable filter filterPlaceholder=\"Search by Symbol\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.currencyDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Currency Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={currencyDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"symbol\"\r\n                                      onChange={this.onChange}\r\n                                      value={symbol}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Symbol</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE CURRENCY\"\r\n                        footer={editDialogFooter}\r\n                        className=\"p-fluid\"\r\n                        style={{ width: '700px' }}\r\n                        visible={this.state.visibleEditDialog}\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inSymbol\">Symbol </label>\r\n                            <InputText id=\"inSymbol\" value={this.state.selectRow.symbol}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        symbol: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteCurrenciesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteCurrenciesDialogFooter} onHide={this.hideDeleteCurrenciesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.currency && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    currencies: state.currencies.currencies\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCurrencies, addCurrency, editCurrency, deleteCurrency } ) (Currencies);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getAccounts, addAccount, editAccount, deleteAccount } from '..//../actions/accounts';\r\nimport { getAccountTypeChoices, getAccountBalanceSheetCategoriesChoices } from '..//../actions/choices';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass Accounts extends Component {\r\n\r\n    emptyAccount = {\r\n        name: '',\r\n        balance: '',\r\n        type: null,\r\n        description: '',\r\n        bank_account: false,\r\n        control_account: false,\r\n        parent_account: null,\r\n        balance_sheet_category: null,\r\n        active: false,\r\n\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            accounts : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n            accountDialog: false,\r\n            deleteAccountDialog: false,\r\n            deleteAccountsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                bank_account: false,\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n            },\r\n            newData: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                bank_account: false,\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n            },\r\n            submitted: false,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onParentAccount = this.onParentAccount.bind(this);\r\n        this.onBalanceSheetCategory = this.onBalanceSheetCategory.bind(this);\r\n        this.onControlAccount = this.onControlAccount.bind(this);\r\n        this.onActive = this.onActive.bind(this);\r\n        this.onBankAccount = this.onBankAccount.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveAccount = this.saveAccount.bind(this);\r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteAccount = this.confirmDeleteAccount.bind(this);\r\n        this.deleteAccount = this.deleteAccount.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedAccounts = this.deleteSelectedAccounts.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteAccountDialog = this.hideDeleteAccountDialog.bind(this);\r\n        this.hideDeleteAccountsDialog = this.hideDeleteAccountsDialog.bind(this);\r\n\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        accounts : PropTypes.array.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAccounts();\r\n        this.props.getAccountTypeChoices();\r\n        this.props.getAccountBalanceSheetCategoriesChoices();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onBankAccount() {\r\n        this.setState({\r\n            bank_account: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onControlAccount() {\r\n        this.setState({\r\n            control_account: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onActive() {\r\n        this.setState({\r\n            active: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({type: e.value})\r\n    }\r\n\r\n    onParentAccount (e){\r\n        this.setState({parent_account: e.value})\r\n    }\r\n\r\n    onBalanceSheetCategory (e){\r\n        this.setState({balance_sheet_category: e.value})\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                bank_account: false,\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n            },\r\n            submitted: false,\r\n            accountDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            accountDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteAccountDialog() {\r\n        this.setState({ deleteAccountDialog: false });\r\n    }\r\n\r\n    hideDeleteAccountsDialog() {\r\n        this.setState({ deleteAccountsDialog: false });\r\n    }\r\n\r\n    saveAccount = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            bank_account\r\n        } = this.state;\r\n        const account = {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            bank_account\r\n        };\r\n        this.props.addAccount(account);\r\n        this.setState({\r\n            name: '',\r\n            balance: '',\r\n            type: '',\r\n            description: '',\r\n            control_account: true,\r\n            parent_account: '',\r\n            balance_sheet_category: '',\r\n            active: true,\r\n            bank_account: true\r\n        });\r\n        this.props.history.push('/accounts');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                bank_account: false,\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editAccount(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            bank_account\r\n        } = this.state.selectRow;\r\n        const account = {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            bank_account\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editAccount(this.state.selectRow.id, account);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'Boş Bırakılamaz!',\r\n                detail: 'Ad'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteAccount(account) {\r\n        this.setState({\r\n            account,\r\n            deleteAccountDialog: true\r\n        });\r\n    }\r\n\r\n    deleteAccount() {\r\n        this.props.deleteAccount();\r\n        this.setState({\r\n            deleteAccountDialog: false,\r\n            account: this.emptyAccount\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteAccountsDialog: true });\r\n    }\r\n\r\n    deleteSelectedAccounts() {\r\n        this.props.deleteAccount();\r\n        this.setState({\r\n            deleteAccountsDialog: false,\r\n            selectedAccounts: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Accounts</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW ACCOUNT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteAccount(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const accountDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveAccount} />\r\n            </>\r\n        );\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editAccount}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { accounts } = this.props;\r\n        const { accounttypechoices } = this.props;\r\n        const {accountbalancesheetcategorieschoices} = this.props;\r\n        const {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            parent_account,\r\n            balance_sheet_category,\r\n        } = this.state;\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.accounts}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Accounts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"account_number\"\r\n                            header=\"Account Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Account Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"balance_sheet_category\"\r\n                            header=\"Balance Sheet Category\"\r\n                            sortable filter filterPlaceholder=\"Search by Balance Sheet Category\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"balance\"\r\n                            header=\"Balance\"\r\n                            sortable filter filterPlaceholder=\"Search by Balance\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.accountDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Account\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={accountDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Balance</label>\r\n                            <InputNumber\r\n                                name=\"balance\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={balance}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"description\"\r\n                                    onChange={this.onChange}\r\n                                    value={description}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>BANK ACCOUNT :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onBankAccount}\r\n                                checked={this.state.bank_account}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>CONTROL ACCOUNT :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onControlAccount}\r\n                                checked={this.state.control_account}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>ACTIVE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onActive}\r\n                                checked={this.state.active}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={type}\r\n                                onChange={this.onTypeChange}\r\n                                options={accounttypechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT TYPE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={balance_sheet_category}\r\n                                onChange={this.onBalanceSheetCategory}\r\n                                options={accountbalancesheetcategorieschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT BALANCE SHEET CATEGORY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={parent_account}\r\n                                onChange={this.onParentAccount}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT PARENT ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE ACCOUNT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                           <InputNumber\r\n                                id=\"inBalance\"\r\n                                value={this.state.selectRow.balance}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            balance: e.target.value\r\n                                        }\r\n                                    })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                description: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inDes\" \r\n                                    value={this.state.selectRow.description}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>BANK ACCOUNT :</label>\r\n                            <Checkbox\r\n                                onChange={(e) => this.setState({\r\n                                    selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            bank_account: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                inputId=\"working\"\r\n                                id=\"inBankAccount\"\r\n                                checked={this.state.selectRow.bank_account}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>CONTROL ACCOUNT :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            control_account: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.control_account}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>ACTIVE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            active: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.active}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            type: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={accounttypechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inBalanceSheetCategory\"\r\n                                value={this.state.selectRow.balance_sheet_category}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            balance_sheet_category: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={accountbalancesheetcategorieschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inParentAccount\"\r\n                                value={this.state.selectRow.parent_account}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            parent_account: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n\r\n\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    accounttypechoices: state.accounttypechoices.accounttypechoices,\r\n    accountbalancesheetcategorieschoices: state.accountbalancesheetcategorieschoices.accountbalancesheetcategorieschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n            mapStateToProps,\r\n            {getAccounts, addAccount, deleteAccount, editAccount, getAccountTypeChoices, getAccountBalanceSheetCategoriesChoices}\r\n            ) (Accounts);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getInterestBearingAccounts, addInterestBearingAccount, editInterestBearingAccount, deleteInterestBearingAccount } from '..//../actions/interestbearingaccounts';\r\nimport { getAccountTypeChoices, getAccountBalanceSheetCategoriesChoices, getInterestIntervalAccountChoices, getAccountInterestMethodChoices } from '..//../actions/choices';\r\nimport { getAccounts } from '..//../actions/accounts';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\n\r\nclass InterestBearingAccounts extends Component {\r\n\r\n    emptyInterestBearingAccount = {\r\n        name: '',\r\n        balance: '',\r\n        type: null,\r\n        description: '',\r\n        control_account: false,\r\n        parent_account: null,\r\n        balance_sheet_category: null,\r\n        active: false,\r\n        interest_rate: '',\r\n        interest_interval: null,\r\n        interest_method: null,\r\n        last_interest_earned_date: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            interestbearingaccounts: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedInterestBearingAccounts: null,\r\n            interestbearingaccountDialog: false,\r\n            deleteInterestBearingAccountDialog: false,\r\n            deleteInterestBearingAccountsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n                interest_rate: '',\r\n                interest_interval: null,\r\n                interest_method: null,\r\n                last_interest_earned_date: ''\r\n            },\r\n            newData: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n                interest_rate: '',\r\n                interest_interval: null,\r\n                interest_method: null,\r\n                last_interest_earned_date: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveInterestBearingAccount = this.saveInterestBearingAccount.bind(this);\r\n        this.editInterestBearingAccount = this.editInterestBearingAccount.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteInterestBearingAccount = this.confirmDeleteInterestBearingAccount.bind(this);\r\n        this.deleteInterestBearingAccount = this.deleteInterestBearingAccount.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedInterestBearingAccounts = this.deleteSelectedInterestBearingAccounts.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteInterestBearingAccountDialog = this.hideDeleteInterestBearingAccountDialog.bind(this);\r\n        this.hideDeleteInterestBearingAccountsDialog = this.hideDeleteInterestBearingAccountsDialog.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onParentAccount = this.onParentAccount.bind(this);\r\n        this.onBalanceSheetCategory = this.onBalanceSheetCategory.bind(this);\r\n        this.onControlAccount = this.onControlAccount.bind(this);\r\n        this.onActive = this.onActive.bind(this);\r\n        this.onInterestInterval = this.onInterestInterval.bind(this);\r\n        this.onInterestMethod = this.onInterestMethod.bind(this)\r\n    }\r\n\r\n    onControlAccount() {\r\n        this.setState({\r\n            control_account: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onActive() {\r\n        this.setState({\r\n            is_active: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({type: e.value})\r\n    }\r\n\r\n    onInterestInterval (e){\r\n        this.setState({interest_interval: e.value})\r\n    }\r\n\r\n    onInterestMethod (e){\r\n        this.setState({interest_method: e.value})\r\n    }\r\n\r\n    onParentAccount (e){\r\n        this.setState({parent_account: e.value})\r\n    }\r\n\r\n    onBalanceSheetCategory (e){\r\n        this.setState({balance_sheet_category: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        interestbearingaccounts : PropTypes.array.isRequired,\r\n        getInterestBearingAccounts: PropTypes.func.isRequired,\r\n        addInterestBearingAccount: PropTypes.func.isRequired,\r\n        editInterestBearingAccount: PropTypes.func.isRequired,\r\n        deleteInterestBearingAccount: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n        getAccountTypeChoices: PropTypes.func.isRequired,\r\n        getAccountBalanceSheetCategoriesChoices: PropTypes.func.isRequired,\r\n        getInterestIntervalAccountChoices: PropTypes.func.isRequired,\r\n        getAccountInterestMethodChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAccounts()\r\n        this.props.getInterestBearingAccounts()\r\n        this.props.getAccountTypeChoices()\r\n        this.props.getAccountBalanceSheetCategoriesChoices()\r\n        this.props.getInterestIntervalAccountChoices()\r\n        this.props.getAccountInterestMethodChoices()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n                interest_rate: '',\r\n                interest_interval: null,\r\n                interest_method: null,\r\n                last_interest_earned_date: ''\r\n            },\r\n            submitted: false,\r\n            interestbearingaccountDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            interestbearingaccountDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteInterestBearingAccountDialog() {\r\n        this.setState({ deleteInterestBearingAccountDialog: false });\r\n    }\r\n\r\n    hideDeleteInterestBearingAccountsDialog() {\r\n        this.setState({ deleteInterestBearingAccountsDialog: false });\r\n    }\r\n\r\n\r\n    saveInterestBearingAccount = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            interest_rate,\r\n            interest_interval,\r\n            interest_method,\r\n            last_interest_earned_date,\r\n        } = this.state;\r\n        const interestbearingaccount = {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            interest_rate,\r\n            interest_interval,\r\n            interest_method,\r\n            last_interest_earned_date,\r\n        };\r\n        this.props.addInterestBearingAccount(interestbearingaccount);\r\n        this.setState({\r\n            name: '',\r\n            balance: '',\r\n            type: null,\r\n            description: '',\r\n            control_account: false,\r\n            parent_account: null,\r\n            balance_sheet_category: null,\r\n            active: false,\r\n            interest_rate: '',\r\n            interest_interval: null,\r\n            interest_method: null,\r\n            last_interest_earned_date: '',\r\n            billpaymentDialog: false\r\n        });\r\n        this.props.history.push('/interestbearingaccounts');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                balance: '',\r\n                type: null,\r\n                description: '',\r\n                control_account: false,\r\n                parent_account: null,\r\n                balance_sheet_category: null,\r\n                active: false,\r\n                interest_rate: '',\r\n                interest_interval: null,\r\n                interest_method: null,\r\n                last_interest_earned_date: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editInterestBearingAccount(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            interest_rate,\r\n            interest_interval,\r\n            interest_method,\r\n            last_interest_earned_date,\r\n\r\n        } = this.state.selectRow;\r\n        const interestbearingaccount = {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            control_account,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            active,\r\n            interest_rate,\r\n            interest_interval,\r\n            interest_method,\r\n            last_interest_earned_date,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editInterestBearingAccount(this.state.selectRow.id, interestbearingaccount);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteInterestBearingAccount(interestbearingaccount) {\r\n        this.setState({\r\n            interestbearingaccount,\r\n            deleteInterestBearingAccountDialog: true\r\n        });\r\n    }\r\n\r\n    deleteInterestBearingAccount() {\r\n        this.props.deleteInterestBearingAccount();\r\n        this.setState({\r\n            deleteInterestBearingAccountDialog: false,\r\n            interestbearingaccount: this.emptyInterestBearingAccount\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteInterestBearingAccountsDialog: true });\r\n    }\r\n\r\n    deleteSelectedInterestBearingAccounts() {\r\n        this.props.deleteInterestBearingAccount();\r\n        this.setState({\r\n            deleteInterestBearingAccountsDialog: false,\r\n            selectedInterestBearingAccounts: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Interest Bearing Account</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW INTEREST BEARING ACCOUNT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteInterestBearingAccount(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const interestbearingaccountDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveInterestBearingAccount} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editInterestBearingAccount}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteInterestBearingAccountsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteInterestBearingAccountsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedInterestBearingAccounts} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            balance,\r\n            type,\r\n            description,\r\n            parent_account,\r\n            balance_sheet_category,\r\n            interest_rate,\r\n            interest_interval,\r\n            interest_method,\r\n            last_interest_earned_date\r\n        } = this.state;\r\n\r\n        const {accounts} = this.props;\r\n        const {accounttypechoices} = this.props;\r\n        const {accountbalancesheetcategorieschoices} = this.props;\r\n        const {interestintervalaccountchoices} = this.props;\r\n        const {accountinterestmethodchoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.interestbearingaccounts}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedInterestBearingAccounts} onSelectionChange={e => this.setState({selectedInterestBearingAccounts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Bill Payments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"account_number\"\r\n                            header=\"Account Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Account Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"balance_sheet_category\"\r\n                            header=\"Balance Sheet Category\"\r\n                            sortable filter filterPlaceholder=\"Search by Balance Sheet Category\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"balance\"\r\n                            header=\"Balance\"\r\n                            sortable filter filterPlaceholder=\"Search by Balance\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"interest_interval\"\r\n                            header=\"Interest Interval\"\r\n                            sortable filter filterPlaceholder=\"Search by Interest Interval\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"interest_method\"\r\n                            header=\"Interest Method\"\r\n                            sortable filter filterPlaceholder=\"Search by Interest Method\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.interestbearingaccountDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Interest Bearing Account Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={interestbearingaccountDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Balance</label>\r\n                             <InputNumber\r\n                                name=\"balance\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={balance}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Interest Rate</label>\r\n                             <InputNumber\r\n                                name=\"interest_rate\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={interest_rate}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                name=\"last_interest_earned_date\"\r\n                                onChange={this.onChange}\r\n                                value={last_interest_earned_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Last Interest Earned Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"description\"\r\n                                    onChange={this.onChange}\r\n                                    value={description}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>ACTIVE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onActive}\r\n                                checked={this.state.active}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>CONTROL ACCOUNT :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onControlAccount}\r\n                                checked={this.state.control_account}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={type}\r\n                                onChange={this.onTypeChange}\r\n                                options={accounttypechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT TYPE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={parent_account}\r\n                                onChange={this.onParentAccount}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT PARENT ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={balance_sheet_category}\r\n                                onChange={this.onBalanceSheetCategory}\r\n                                options={accountbalancesheetcategorieschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT BALANCE SHEET CATEGORY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={interest_interval}\r\n                                onChange={this.onInterestInterval}\r\n                                options={interestintervalaccountchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT INTEREST INTERVAL</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={interest_method}\r\n                                onChange={this.onInterestMethod}\r\n                                options={accountinterestmethodchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT INTEREST METHOD</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE INTEREST BEARING ACCOUNT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Balance</label>\r\n                            <InputNumber\r\n                                id=\"inBalance\"\r\n                                value={this.state.selectRow.balance}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        balance: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Interest Rate</label>\r\n                            <InputNumber\r\n                                id=\"inInterestRate\"\r\n                                value={this.state.selectRow.interest_rate}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        interest_rate: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                id=\"inDate\" value={this.state.selectRow.last_interest_earned_date}\r\n                                style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            last_interest_earned_date: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    id=\"inDescription\"\r\n                                    value={this.state.selectRow.description}\r\n                                    onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            description: e.target.value\r\n                                        }\r\n                                    })\r\n                                }/>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>ACTIVE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            active: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.active}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>CONTROL ACCOUNT :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            control_account: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.control_account}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                options={accounttypechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        type: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inParentAccount\"\r\n                                value={this.state.selectRow.parent_account}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        parent_account: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inPaidBy\"\r\n                                value={this.state.selectRow.balance_sheet_category}\r\n                                options={accountbalancesheetcategorieschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        balance_sheet_category: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inInterestInterval\"\r\n                                value={this.state.selectRow.interest_interval}\r\n                                options={interestintervalaccountchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        interest_interval: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inInterestMethod\"\r\n                                value={this.state.selectRow.interest_method}\r\n                                options={accountinterestmethodchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        interest_method: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteInterestBearingAccountsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteInterestBearingAccountsDialogFooter} onHide={this.hideDeleteInterestBearingAccountsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.interestbearingaccount && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    interestbearingaccounts: state.interestbearingaccounts.interestbearingaccounts,\r\n    accounts: state.accounts.accounts,\r\n    interestintervalaccountchoices: state.interestintervalaccountchoices.interestintervalaccountchoices,\r\n    accountinterestmethodchoices: state.accountinterestmethodchoices.accountinterestmethodchoices,\r\n    accounttypechoices: state.accounttypechoices.accounttypechoices,\r\n    accountbalancesheetcategorieschoices: state.accountbalancesheetcategorieschoices.accountbalancesheetcategorieschoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAccounts,\r\n    getAccountTypeChoices,\r\n    getInterestIntervalAccountChoices,\r\n    getAccountInterestMethodChoices,\r\n    getAccountBalanceSheetCategoriesChoices,\r\n    getInterestBearingAccounts,\r\n    editInterestBearingAccount,\r\n    deleteInterestBearingAccount,\r\n    addInterestBearingAccount} ) (InterestBearingAccounts);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INTEREST_BEARING_ACCOUNT,\r\n        GET_INTEREST_BEARING_ACCOUNTS,\r\n        DELETE_INTEREST_BEARING_ACCOUNT,\r\n        GET_INTEREST_BEARING_ACCOUNT,\r\n        EDIT_INTEREST_BEARING_ACCOUNT\r\n    } from '../types/interestbearingaccountTypes';\r\nimport { interestbearingaccountsURL } from '../constants';\r\n\r\n// Get\r\nexport const getInterestBearingAccounts = () => dispatch => {\r\n    axios.get(interestbearingaccountsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INTEREST_BEARING_ACCOUNTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInterestBearingAccount = (id) => dispatch => {\r\n    axios.delete(interestbearingaccountsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INTEREST_BEARING_ACCOUNT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInterestBearingAccount = (interestbearingaccount) => dispatch => {\r\n    axios.post(interestbearingaccountsURL, interestbearingaccount)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INTEREST_BEARING_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInterestBearingAccount = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/interest-bearing-accounts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INTEREST_BEARING_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n\r\n//Edit\r\nexport const editInterestBearingAccount = (id, interestbearingaccount) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/interest-bearing-accounts/${id}/`, interestbearingaccount)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_INTEREST_BEARING_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_BILL,\r\n        GET_BILLS,\r\n        DELETE_BILL,\r\n        GET_BILL\r\n    } from '../types/billTypes';\r\nimport { billsURL } from '../constants';\r\n\r\n// Get\r\nexport const getBills = () => dispatch => {\r\n    axios.get(billsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILLS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteBill = (id) => dispatch => {\r\n    axios.delete(billsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_BILL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\n\r\nexport const addBill = (bill) => dispatch => {\r\n    axios.post(billsURL, bill)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_BILL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getBill = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/bills/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getBillPayments, addBillPayment, editBillPayment, deleteBillPayment } from '..//../actions/billpayments';\r\nimport { getAccounts} from '..//../actions/accounts';\r\nimport { getBills} from '..//../actions/bills';\r\nimport { getEmployees} from '..//../actions/employees';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass BillPayments extends Component {\r\n\r\n    emptyBillPayment = {\r\n        date: '',\r\n        account: null,\r\n        bill: null,\r\n        amount: '',\r\n        memo: '',\r\n        paid_by: null,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            billpayments: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedBillPayments: null,\r\n            billpaymentDialog: false,\r\n            deleteBillPaymentDialog: false,\r\n            deleteBillPaymentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                date: '',\r\n                account: null,\r\n                bill: null,\r\n                amount: '',\r\n                memo: '',\r\n                paid_by: null,\r\n            },\r\n            newData: {\r\n                date: '',\r\n                account: null,\r\n                bill: null,\r\n                amount: '',\r\n                memo: '',\r\n                paid_by: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveBillPayment = this.saveBillPayment.bind(this);\r\n        this.editBillPayment = this.editBillPayment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteBillPayment = this.confirmDeleteBillPayment.bind(this);\r\n        this.deleteBillPayment = this.deleteBillPayment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedBillPayments = this.deleteSelectedBillPayments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteBillPaymentDialog = this.hideDeleteBillPaymentDialog.bind(this);\r\n        this.hideDeleteBillPaymentsDialog = this.hideDeleteBillPaymentsDialog.bind(this);\r\n        this.onAccount = this.onAccount.bind(this);\r\n        this.onBill = this.onBill.bind(this);\r\n        this.onPaidBy = this.onPaidBy.bind(this);\r\n    }\r\n\r\n    onAccount (e){\r\n      this.setState({account: e.value})\r\n    }\r\n\r\n    onPaidBy (e){\r\n      this.setState({paid_by: e.value})\r\n    }\r\n\r\n    onBill (e){\r\n      this.setState({bill: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        billpayments : PropTypes.array.isRequired,\r\n        getBillPayments: PropTypes.func.isRequired,\r\n        addBillPayment: PropTypes.func.isRequired,\r\n        editBillPayment: PropTypes.func.isRequired,\r\n        deleteBillPayment: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n        getBills: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.props.getAccounts()\r\n      this.props.getBills()\r\n      this.props.getEmployees()\r\n      this.props.getBillPayments()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                date: '',\r\n                account: null,\r\n                bill: null,\r\n                amount: '',\r\n                memo: '',\r\n                paid_by: null,\r\n            },\r\n            submitted: false,\r\n            billpaymentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            billpaymentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteBillPaymentDialog() {\r\n        this.setState({ deleteBillPaymentDialog: false });\r\n    }\r\n\r\n    hideDeleteBillPaymentsDialog() {\r\n        this.setState({ deleteBillPaymentsDialog: false });\r\n    }\r\n\r\n\r\n    saveBillPayment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            date,\r\n            account,\r\n            bill,\r\n            amount,\r\n            memo,\r\n            paid_by\r\n        } = this.state;\r\n        const billpayment = {\r\n            date,\r\n            account,\r\n            bill,\r\n            amount,\r\n            memo,\r\n            paid_by\r\n        };\r\n        this.props.addBillPayment(billpayment);\r\n        this.setState({\r\n            date: '',\r\n            account: '',\r\n            bill: '',\r\n            amount: '',\r\n            memo: '',\r\n            paid_by: '',\r\n            billpaymentDialog: false\r\n        });\r\n        this.props.history.push('/billpayments');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                account: '',\r\n                bill: '',\r\n                amount: '',\r\n                memo: '',\r\n                paid_by: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editBillPayment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            date,\r\n            account,\r\n            bill,\r\n            amount,\r\n            memo,\r\n            paid_by\r\n\r\n        } = this.state.selectRow;\r\n        const billpayment = {\r\n            date,\r\n            account,\r\n            bill,\r\n            amount,\r\n            memo,\r\n            paid_by\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editBillPayment(this.state.selectRow.id, billpayment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteBillPayment(billpayment) {\r\n        this.setState({\r\n            billpayment,\r\n            deleteBillPaymentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteBillPayment() {\r\n        this.props.deleteBillPayment();\r\n        this.setState({\r\n            deleteBillPaymentDialog: false,\r\n            billpayment: this.emptyBillPayment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteBillPaymentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedBillPayments() {\r\n        this.props.deleteBillPayment();\r\n        this.setState({\r\n            deleteBillPaymentsDialog: false,\r\n            selectedBillPayments: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Bill Payment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW BILL PAYMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteBillPayment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const billpaymentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveBillPayment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editBillPayment}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteBillPaymentsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteBillPaymentsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedBillPayments} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            date,\r\n            account,\r\n            bill,\r\n            amount,\r\n            memo,\r\n            paid_by\r\n        } = this.state;\r\n\r\n\r\n        const {accounts} = this.props;\r\n        const {bills} = this.props;\r\n        const {employees} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.taxes}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedBillPayments} onSelectionChange={e => this.setState({selectedBillPayments: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Bill Payments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"account\"\r\n                            header=\"Account\"\r\n                            sortable filter filterPlaceholder=\"Search by Account\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"bill\"\r\n                            header=\"Bill\"\r\n                            sortable filter filterPlaceholder=\"Search by Bill\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"amount\"\r\n                            header=\"Amount\"\r\n                            sortable filter filterPlaceholder=\"Search by Amount\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"paid_by\"\r\n                            header=\"Paid By\"\r\n                            sortable filter filterPlaceholder=\"Search by Paid By\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"date\"\r\n                            header= \"Date\"\r\n                            sortable filter filterPlaceholder=\"Search by Date\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.billpaymentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Bill Payment Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={billpaymentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                name=\"date\"\r\n                                onChange={this.onChange}\r\n                                value={date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Amount</label>\r\n                            <InputNumber\r\n                              name=\"amount\"\r\n                              onChange={this.onChange}\r\n                              value={amount}\r\n                              showButtons\r\n                              buttonLayout=\"horizontal\"\r\n                              decrementButtonClassName=\"p-button-danger\"\r\n                              incrementButtonClassName=\"p-button-success\"\r\n                              incrementButtonIcon=\"pi pi-plus\"\r\n                              decrementButtonIcon=\"pi pi-minus\"\r\n                              step={1}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"memo\"\r\n                                    onChange={this.onChange}\r\n                                    value={memo}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Memo</label>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={account}\r\n                                onChange={this.onAccount}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={bill}\r\n                                onChange={this.onBill}\r\n                                options={bills}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"vendor\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT BILLS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={paid_by}\r\n                                onChange={this.onPaidBy}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"id_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEES</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE BILL PAYMENT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                id=\"inDate\" value={this.state.selectRow.date}\r\n                                style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            date: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Amount</label>\r\n                            <InputNumber\r\n                                id=\"inAmount\"\r\n                                value={this.state.selectRow.rate}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        amount: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    id=\"inMemo\"\r\n                                    value={this.state.selectRow.memo}\r\n                                    onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            memo: e.target.value\r\n                                        }\r\n                                    })\r\n                                }/>\r\n                                <label htmlFor=\"inputtext\">Memo</label>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inAccount\"\r\n                                value={this.state.selectRow.account}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        account: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inBill\"\r\n                                value={this.state.selectRow.bill}\r\n                                options={bills}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"vendor\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        bill: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT BILLS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inPaidBy\"\r\n                                value={this.state.selectRow.paid_by}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        paid_by: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEES</label>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteBillPaymentsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteBillPaymentsDialogFooter} onHide={this.hideDeleteBillPaymentsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.billpayments && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts,\r\n    bills: state.bills.bills,\r\n    billpayments: state.billpayments.billpayments,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAccounts,\r\n    getBills,\r\n    getEmployees,\r\n    addBillPayment,\r\n    getBillPayments, editBillPayment, deleteBillPayment} ) (BillPayments);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_BILL_PAYMENTS,\r\n        DELETE_BILL_PAYMENT,\r\n        ADD_BILL_PAYMENT,\r\n        GET_BILL_PAYMENT,\r\n        EDIT_BILL_PAYMENT\r\n    } from '../types/billpaymentTypes';\r\nimport { billpaymentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getBillPayments = () => dispatch => {\r\n    axios.get(billpaymentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL_PAYMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteBillPayment = (id) => dispatch => {\r\n    axios.delete(billpaymentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_BILL_PAYMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addBillPayment = (billpayment) => dispatch => {\r\n    axios.post(billpaymentsURL, billpayment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_BILL_PAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getBillPayment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/bill-payments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BILL_PAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editBillPayment = (id, billpayment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/bill-payments/${id}/`, billpayment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_BILL_PAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        GET_LEDGERS,\r\n        DELETE_LEDGER,\r\n        GET_LEDGER,\r\n        ADD_LEDGER,\r\n        EDIT_LEDGER\r\n    } from '../types/ledgerTypes';\r\nimport { ledgersURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getLedgers = () => dispatch => {\r\n    axios.get(ledgersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_LEDGERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addLedger = (ledger) => dispatch => {\r\n    axios.post(ledgersURL, ledger)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_LEDGER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteLedger = (id) => dispatch => {\r\n    axios.delete(ledgersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_LEDGER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getLedger = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/ledgers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_LEDGER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editLedger = (id, ledger) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/ledgers/${id}/`, ledger)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_LEDGER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getLedgers, addLedger, editLedger, deleteLedger } from '..//../actions/ledgers';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Ledgers extends Component {\r\n\r\n    emptyLedger = {\r\n        name: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ledgers: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedLedgers: null,\r\n            ledgerDialog: false,\r\n            deleteLedgerDialog: false,\r\n            deleteLedgersDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: ''\r\n            },\r\n            newData: {\r\n                name: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveLedger = this.saveLedger.bind(this);\r\n        this.editLedger = this.editLedger.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteLedger = this.confirmDeleteLedger.bind(this);\r\n        this.deleteLedger = this.deleteLedger.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedLedgers = this.deleteSelectedLedgers.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteLedgerDialog = this.hideDeleteLedgerDialog.bind(this);\r\n        this.hideDeleteLedgersDialog = this.hideDeleteLedgersDialog.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        ledgers : PropTypes.array.isRequired,\r\n        getLedgers: PropTypes.func.isRequired,\r\n        addLedger: PropTypes.func.isRequired,\r\n        editLedger: PropTypes.func.isRequired,\r\n        deleteLedger: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: ''\r\n            },\r\n            submitted: false,\r\n            ledgerDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            ledgerDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteLedgerDialog() {\r\n        this.setState({ deleteLedgerDialog: false });\r\n    }\r\n\r\n    hideDeleteLedgersDialog() {\r\n        this.setState({ deleteLedgersDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getLedgers();\r\n    }\r\n\r\n\r\n    saveLedger = (e) => {\r\n        e.preventDefault();\r\n        const { name } = this.state;\r\n        const ledger = { name };\r\n        this.props.addLedger(ledger);\r\n        this.setState({\r\n            name: '',\r\n            ledgerDialog: false\r\n        });\r\n        this.props.history.push('/ledgers');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editLedger(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name\r\n        } = this.state.selectRow;\r\n        const ledger = {\r\n            name\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editLedger(this.state.selectRow.id, ledger);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteLedger(ledger) {\r\n        this.setState({\r\n            ledger,\r\n            deleteLedgerDialog: true\r\n        });\r\n    }\r\n\r\n    deleteLedger() {\r\n        this.props.deleteLedger();\r\n        this.setState({\r\n            deleteLedgerDialog: false,\r\n            ledger: this.emptyLedger\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteLedgersDialog: true });\r\n    }\r\n\r\n    deleteSelectedLedgers() {\r\n        this.props.deleteLedger();\r\n        this.setState({\r\n            deleteLedgersDialog: false,\r\n            selectedLedgers: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Ledgers</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW LEDGER\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteLedger(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const ledgerDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveLedger} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editLedger}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteLedgersDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteLedgersDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedLedgers} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.ledgers}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedLedgers} onSelectionChange={e => this.setState({selectedLedgers: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Ledgers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.ledgerDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Ledger Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={ledgerDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Name</label>\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE LEDGER\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteLedgersDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteLedgersDialogFooter} onHide={this.hideDeleteLedgersDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.ledger && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    ledgers: state.ledgers.ledgers\r\n})\r\n\r\nexport default connect(mapStateToProps, { getLedgers, addLedger, editLedger, deleteLedger } ) (Ledgers);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_DEBITS,\r\n        DELETE_DEBIT,\r\n        GET_DEBIT\r\n    } from '../types/debitTypes';\r\nimport { debitsURL } from '../constants';\r\n\r\n// Get\r\nexport const getDebits = () => dispatch => {\r\n    axios.get(debitsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DEBITS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteDebit = (id) => dispatch => {\r\n    axios.delete(debitsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_DEBIT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getDebit = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/debits/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DEBIT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        GET_CREDITS,\r\n        DELETE_CREDIT,\r\n        GET_CREDIT\r\n    } from '../types/creditTypes';\r\nimport { creditsURL } from '../constants';\r\n\r\n// Get\r\nexport const getCredits = () => dispatch => {\r\n    axios.get(creditsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CREDITS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteCredit = (id) => dispatch => {\r\n    axios.delete(creditsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_CREDIT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getCredit = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/credits/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CREDIT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getAccountingPosts, addAccountingPost, deleteAccountingPost, editAccountingPost } from '..//../actions/accountingposts';\r\nimport { getDebits } from '..//../actions/debits';\r\nimport { getCredits } from '..//../actions/credits';\r\nimport { getLedgers } from '..//../actions/ledgers';\r\nimport { getJournals } from '..//../actions/journals';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\nclass AccountingPosts extends Component {\r\n\r\n    emptyAccountingPost = {\r\n        entry: null,\r\n        debit: null,\r\n        credit: null,\r\n        ledger: null,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            accountingposts: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccountingPosts: null,\r\n            accountingpostDialog: false,\r\n            deleteAccountingPostDialog: false,\r\n            deleteAccountingPostsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                entry: null,\r\n    \t\t\tdebit: null,\r\n    \t\t\tcredit: null,\r\n    \t\t\tledger: null,\r\n            },\r\n            newData: {\r\n                entry: null,\r\n    \t\t\tdebit: null,\r\n    \t\t\tcredit: null,\r\n    \t\t\tledger: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveAccountingPost = this.saveAccountingPost.bind(this);\r\n        this.editAccountingPost = this.editAccountingPost.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteAccountingPost = this.confirmDeleteAccountingPost.bind(this);\r\n        this.deleteAccountingPost = this.deleteAccountingPost.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedAccountingPosts = this.deleteSelectedAccountingPosts.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteAccountingPostDialog = this.hideDeleteAccountingPostDialog.bind(this);\r\n        this.hideDeleteAccountingPostsDialog = this.hideDeleteAccountingPostsDialog.bind(this);\r\n        this.onEntry = this.onEntry.bind(this);\r\n        this.onDebit = this.onDebit.bind(this);\r\n        this.onCredit = this.onCredit.bind(this);\r\n        this.onLedger = this.onLedger.bind(this);\r\n    }\r\n\r\n    onEntry (e){\r\n        this.setState({entry: e.value})\r\n    }\r\n\r\n    onDebit (e){\r\n        this.setState({debit: e.value})\r\n    }\r\n\r\n    onCredit (e){\r\n        this.setState({credit: e.value})\r\n    }\r\n\r\n    onLedger (e){\r\n        this.setState({ledger: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        accountingposts : PropTypes.array.isRequired,\r\n        getAccountingPosts: PropTypes.func.isRequired,\r\n        addAccountingPost: PropTypes.func.isRequired,\r\n        editAccountingPost: PropTypes.func.isRequired,\r\n        deleteAccountingPost: PropTypes.func.isRequired,\r\n        getJournals: PropTypes.func.isRequired,\r\n        getDebits: PropTypes.func.isRequired,\r\n        getCredits: PropTypes.func.isRequired,\r\n        getLedgers: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAccountingPosts()\r\n        this.props.getJournals()\r\n        this.props.getDebits()\r\n        this.props.getCredits()\r\n        this.props.getLedgers()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                entry: null,\r\n    \t\t\tdebit: null,\r\n    \t\t\tcredit: null,\r\n    \t\t\tledger: null,\r\n            },\r\n            submitted: false,\r\n            accountingpostDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            accountingpostDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteAccountingPostDialog() {\r\n        this.setState({ deleteAccountingPostDialog: false });\r\n    }\r\n\r\n    hideDeleteAccountingPostsDialog() {\r\n        this.setState({ deleteAccountingPostsDialog: false });\r\n    }\r\n\r\n\r\n    saveAccountingPost = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            entry,\r\n            debit,\r\n            credit,\r\n            ledger,\r\n        } = this.state;\r\n        const accountingpost = {\r\n            entry,\r\n            debit,\r\n            credit,\r\n            ledger,\r\n        };\r\n        this.props.addAccountingPost(accountingpost);\r\n        this.setState({\r\n            entry: '',\r\n\t\t\tdebit: '',\r\n\t\t\tcredit: '',\r\n\t\t\tledger: '',\r\n            accountingpostDialog: false\r\n        });\r\n        this.props.history.push('/accountingposts');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                entry: '',\r\n    \t\t\tdebit: '',\r\n    \t\t\tcredit: '',\r\n    \t\t\tledger: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editAccountingPost(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            entry,\r\n\t\t\tdebit,\r\n\t\t\tcredit,\r\n\t\t\tledger,\r\n\r\n        } = this.state.selectRow;\r\n        const accountingpost = {\r\n            entry,\r\n\t\t\tdebit,\r\n\t\t\tcredit,\r\n\t\t\tledger,\r\n\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editAccountingPost(this.state.selectRow.id, accountingpost);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteAccountingPost(accountingpost) {\r\n        this.setState({\r\n            accountingpost,\r\n            deleteAccountingPostDialog: true\r\n        });\r\n    }\r\n\r\n    deleteAccountingPost() {\r\n        this.props.deleteAccountingPost();\r\n        this.setState({\r\n            deleteAccountingPostDialog: false,\r\n            accountingpost: this.emptyAccountingPost\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteAccountingPostsDialog: true });\r\n    }\r\n\r\n    deleteSelectedAccountingPosts() {\r\n        this.props.deleteAccountingPost();\r\n        this.setState({\r\n            deleteAccountingPostsDialog: false,\r\n            selectedAccountingPosts: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Accounting Post</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW ACCOUNTING POST\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteAccountingPost(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const accountingpostDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveAccountingPost} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editAccountingPost}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteAccountingPostsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteAccountingPostsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedAccountingPosts} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            entry,\r\n\t\t\tdebit,\r\n\t\t\tcredit,\r\n\t\t\tledger,\r\n        } = this.state;\r\n\r\n        const {journals} = this.props;\r\n        const {debits} = this.props;\r\n        const {credits} = this.props;\r\n        const {ledgers} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.accountingposts}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedAccountingPosts} onSelectionChange={e => this.setState({selectedAccountingPosts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Accounting Posts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"entry\"\r\n                            header=\"Entry\"\r\n                            sortable filter filterPlaceholder=\"Search by Entry\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"debit\"\r\n                            header=\"Debit\"\r\n                            sortable filter filterPlaceholder=\"Search by Debit\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"credit\"\r\n                            header=\"Credit\"\r\n                            sortable filter filterPlaceholder=\"Search by Credit\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"ledger\"\r\n                            header=\"Ledger\"\r\n                            sortable filter filterPlaceholder=\"Search by Ledger\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.accountingpostDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Accounting Post Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={accountingpostDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={entry}\r\n                                onChange={this.onEntry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT ENTRY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={debit}\r\n                                onChange={this.onDebit}\r\n                                options={debits}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT DEBITS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={credit}\r\n                                onChange={this.onCredit}\r\n                                options={credits}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CREDIT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={ledger}\r\n                                onChange={this.onLedger}\r\n                                options={ledgers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT LEDGER</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE ACCOUNTING POST\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEntry\"\r\n                                value={this.state.selectRow.entry}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            entry: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inDebit\"\r\n                                value={this.state.selectRow.debit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            debit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={debits}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCredit\"\r\n                                value={this.state.selectRow.credit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            credit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={credits}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inLedger\"\r\n                                value={this.state.selectRow.ledger}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            ledger: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={ledgers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteAccountingPostsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteAccountingPostsDialogFooter} onHide={this.hideDeleteAccountingPostsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.accountingpost && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    accountingposts: state.accountingposts.accountingposts,\r\n    journals: state.journals.journals,\r\n    debits: state.debits.debits,\r\n    ledgers: state.ledgers.ledgers,\r\n    credits: state.credits.credits\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getJournals,\r\n    getDebits,\r\n    getCredits,\r\n    getLedgers,\r\n    getAccountingPosts,\r\n    deleteAccountingPost,\r\n    editAccountingPost,\r\n    addAccountingPost } ) (AccountingPosts);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_ACCOUNTING_POST,\r\n        GET_ACCOUNTING_POSTS,\r\n        DELETE_ACCOUNTING_POST,\r\n        GET_ACCOUNTING_POST,\r\n        EDIT_ACCOUNTING_POST\r\n    } from '../types/accountingpostTypes';\r\nimport { accountingpostsURL } from '../constants';\r\n\r\n// Get\r\nexport const getAccountingPosts = () => dispatch => {\r\n    axios.get(accountingpostsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNTING_POSTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteAccountingPost = (id) => dispatch => {\r\n    axios.delete(accountingpostsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ACCOUNTING_POST,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addAccountingPost = (accountingpost) => dispatch => {\r\n    axios.post(accountingpostsURL, accountingpost)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ACCOUNTING_POST,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getAccountingPost = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/accounting-posts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNTING_POST,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editAccountingPost = (id, accountingpost) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/accounting-posts/${id}/`, accountingpost)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_ACCOUNTING_POST,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_WORKBOOK,\r\n        GET_WORKBOOKS,\r\n        DELETE_WORKBOOK,\r\n        GET_WORKBOOK,\r\n        EDIT_WORKBOOK\r\n    } from '../types/workbookTypes';\r\nimport { workbooksURL } from '../constants';\r\n\r\n// Get\r\nexport const getWorkbooks = () => dispatch => {\r\n    axios.get(workbooksURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_WORKBOOKS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteWorkbook = (id) => dispatch => {\r\n    axios.delete(workbooksURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_WORKBOOK,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addWorkbook = (workbook) => dispatch => {\r\n    axios.post(workbooksURL, workbook)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_WORKBOOK,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getWorkbook = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/workbooks/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_WORKBOOK,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editWorkbook = (id, workbook) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/workbooks/${id}/`, workbook)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_WORKBOOK,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getWorkbooks, addWorkbook, editWorkbook, deleteWorkbook } from '..//../actions/workbooks';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass Workbooks extends Component {\r\n\r\n    emptyWorkbook = {\r\n        name: '',\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            workbooks: null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedWorkbooks: null,\r\n            workbookDialog: false,\r\n            deleteWorkbookDialog: false,\r\n            deleteWorkbooksDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveWorkbook = this.saveWorkbook.bind(this);\r\n        this.editWorkbook = this.editWorkbook.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteWorkbook = this.confirmDeleteWorkbook.bind(this);\r\n        this.deleteWorkbook = this.deleteWorkbook.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedWorkbooks = this.deleteSelectedWorkbooks.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteWorkbookDialog = this.hideDeleteWorkbookDialog.bind(this);\r\n        this.hideDeleteWorkbooksDialog = this.hideDeleteWorkbooksDialog.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        workbooks : PropTypes.array.isRequired,\r\n        getWorkbooks: PropTypes.func.isRequired,\r\n        addWorkbook: PropTypes.func.isRequired,\r\n        editWorkbook: PropTypes.func.isRequired,\r\n        deleteWorkbook: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n            },\r\n            submitted: false,\r\n            workbookDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            workbookDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteWorkbookDialog() {\r\n        this.setState({ deleteWorkbookDialog: false });\r\n    }\r\n\r\n    hideDeleteWorkbooksDialog() {\r\n        this.setState({ deleteWorkbooksDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getWorkbooks();\r\n    }\r\n\r\n\r\n    saveWorkbook = (e) => {\r\n        e.preventDefault();\r\n        const { name } = this.state;\r\n        const workbook = { name };\r\n        this.props.addWorkbook(workbook);\r\n        this.setState({\r\n            name: '',\r\n            workbookDialog: false\r\n        });\r\n        this.props.history.push('/workbooks');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editWorkbook(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n\r\n        } = this.state.selectRow;\r\n        const workbook = {\r\n            name,\r\n\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editWorkbook(this.state.selectRow.id, workbook);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteWorkbook(workbook) {\r\n        this.setState({\r\n            workbook,\r\n            deleteWorkbookDialog: true\r\n        });\r\n    }\r\n\r\n    deleteWorkbook() {\r\n        this.props.deleteWorkbook();\r\n        this.setState({\r\n            deleteWorkbookDialog: false,\r\n            workbook: this.emptyWorkbook\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteWorkbooksDialog: true });\r\n    }\r\n\r\n    deleteSelectedWorkbooks() {\r\n        this.props.deleteWorkbook();\r\n        this.setState({\r\n            deleteWorkbooksDialog: false,\r\n            selectedWorkbooks: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Workbook</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW WORKBOOK\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteWorkbook(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const workbookDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveWorkbook} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editWorkbook}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteWorkbooksDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteWorkbooksDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedWorkbooks} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.workbooks}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedWorkbooks} onSelectionChange={e => this.setState({selectedWorkbooks: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Workbooks found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.workbookDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Workbook Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={workbookDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Name</label>\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE WORKBOOK\"\r\n                        footer={editDialogFooter}\r\n                        style={{ width: '900px' }}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteWorkbooksDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteWorkbooksDialogFooter} onHide={this.hideDeleteWorkbooksDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.workbook && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    workbooks: state.workbooks.workbooks\r\n})\r\n\r\nexport default connect(mapStateToProps, { getWorkbooks, addWorkbook, editWorkbook, deleteWorkbook } ) (Workbooks);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getAccountingAdjustments, addAccountingAdjustment, deleteAccountingAdjustment, editAccountingAdjustment } from '..//../actions/accountingadjustments';\r\nimport { getJournals } from '..//../actions/journals';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getWorkbooks } from '..//../actions/workbooks';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass AccountingAdjustments extends Component {\r\n\r\n    emptyAccountingAdjustment = {\r\n        entry: null,\r\n        adjusting_entry: null,\r\n        workbook: null,\r\n        description: '',\r\n        created_by: null,\r\n        date_created: ''\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            accountingadjustments: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccountingAdjustments: null,\r\n            accountingadjustmentDialog: false,\r\n            deleteAccountingAdjustmentDialog: false,\r\n            deleteAccountingAdjustmentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                entry: null,\r\n                adjusting_entry: null,\r\n                workbook: null,\r\n                description: '',\r\n                created_by: null,\r\n                date_created: ''\r\n            },\r\n            newData: {\r\n                entry: null,\r\n                adjusting_entry: null,\r\n                workbook: null,\r\n                description: '',\r\n                created_by: null,\r\n                date_created: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveAccountingAdjustment = this.saveAccountingAdjustment.bind(this);\r\n        this.editAccountingAdjustment = this.editAccountingAdjustment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteAccountingAdjustment = this.confirmDeleteAccountingAdjustment.bind(this);\r\n        this.deleteAccountingAdjustment = this.deleteAccountingAdjustment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedAccountingAdjustments = this.deleteSelectedAccountingAdjustments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteAccountingAdjustmentDialog = this.hideDeleteAccountingAdjustmentDialog.bind(this);\r\n        this.hideDeleteAccountingAdjustmentsDialog = this.hideDeleteAccountingAdjustmentsDialog.bind(this);\r\n        this.onEntry = this.onEntry.bind(this);\r\n        this.onAdjustingEntry = this.onAdjustingEntry.bind(this);\r\n        this.onWorkbook = this.onWorkbook.bind(this);\r\n        this.onCreatedBy = this.onCreatedBy.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        accountingadjustments : PropTypes.array.isRequired,\r\n        getAccountingAdjustments: PropTypes.func.isRequired,\r\n        addAccountingAdjustment: PropTypes.func.isRequired,\r\n        editAccountingAdjustment: PropTypes.func.isRequired,\r\n        deleteAccountingAdjustment: PropTypes.func.isRequired,\r\n        getJournals: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getWorkbooks: PropTypes.func.isRequired\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getJournals()\r\n        this.props.getEmployees()\r\n        this.props.getWorkbooks()\r\n        this.props.getAccountingAdjustments()\r\n    }\r\n\r\n    onEntry (e){\r\n        this.setState({entry: e.value})\r\n    }\r\n\r\n    onAdjustingEntry (e){\r\n        this.setState({adjusting_entry: e.value})\r\n    }\r\n\r\n    onWorkbook (e){\r\n        this.setState({workbook: e.value})\r\n    }\r\n\r\n    onCreatedBy (e){\r\n        this.setState({created_by: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                entry: null,\r\n    \t\t\tadjusting_entry: null,\r\n    \t\t\tworkbook: null,\r\n    \t\t\tdescription: '',\r\n    \t\t\tcreated_by: null,\r\n    \t\t\tdate_created: ''\r\n            },\r\n            submitted: false,\r\n            accountingadjustmentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            accountingadjustmentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteAccountingAdjustmentDialog() {\r\n        this.setState({ deleteAccountingAdjustmentDialog: false });\r\n    }\r\n\r\n    hideDeleteAccountingAdjustmentsDialog() {\r\n        this.setState({ deleteAccountingAdjustmentsDialog: false });\r\n    }\r\n\r\n\r\n    saveAccountingAdjustment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            entry,\r\n\t\t\tadjusting_entry,\r\n\t\t\tworkbook,\r\n\t\t\tdescription,\r\n\t\t\tcreated_by,\r\n\t\t\tdate_created,\r\n        } = this.state;\r\n        const accountingadjustment = {\r\n            entry,\r\n\t\t\tadjusting_entry,\r\n\t\t\tworkbook,\r\n\t\t\tdescription,\r\n\t\t\tcreated_by,\r\n\t\t\tdate_created,\r\n        };\r\n        this.props.addAccountingAdjustment(accountingadjustment);\r\n        this.setState({\r\n            entry: '',\r\n\t\t\tadjusting_entry: '',\r\n\t\t\tworkbook: '',\r\n\t\t\tdescription: '',\r\n\t\t\tcreated_by: '',\r\n\t\t\tdate_created: '',\r\n            accountingadjustmentDialog: false\r\n        });\r\n        this.props.history.push('/accountingadjustments');\r\n    };\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                entry: '',\r\n    \t\t\tadjusting_entry: '',\r\n    \t\t\tworkbook: '',\r\n    \t\t\tdescription: '',\r\n    \t\t\tcreated_by: '',\r\n    \t\t\tdate_created: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editAccountingAdjustment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            entry,\r\n\t\t\tadjusting_entry,\r\n\t\t\tworkbook,\r\n\t\t\tdescription,\r\n\t\t\tcreated_by,\r\n\t\t\tdate_created,\r\n\r\n        } = this.state.selectRow;\r\n        const accountingadjustment = {\r\n            entry,\r\n\t\t\tadjusting_entry,\r\n\t\t\tworkbook,\r\n\t\t\tdescription,\r\n\t\t\tcreated_by,\r\n\t\t\tdate_created,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editAccountingAdjustment(this.state.selectRow.id, accountingadjustment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Ad'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteAccountingAdjustment(accountingadjustment) {\r\n        this.setState({\r\n            accountingadjustment,\r\n            deleteAccountingAdjustmentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteAccountingAdjustment() {\r\n        this.props.deleteBillPayment();\r\n        this.setState({\r\n            deleteAccountingAdjustmentDialog: false,\r\n            accountingadjustment: this.emptyAccountingAdjustment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteAccountingAdjustmentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedAccountingAdjustments() {\r\n        this.props.deleteAccountingAdjustment();\r\n        this.setState({\r\n            deleteAccountingAdjustmentsDialog: false,\r\n            selectedAccountingAdjustments: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Accounting Adjustment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW ACCOUNTING ADJUSTMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteAccountingAdjustment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const accountingadjustmentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveAccountingAdjustment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editAccountingAdjustment}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteAccountingAdjustmentsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteAccountingAdjustmentsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedAccountingAdjustments} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            entry,\r\n\t\t\tadjusting_entry,\r\n\t\t\tworkbook,\r\n\t\t\tdescription,\r\n\t\t\tcreated_by,\r\n\t\t\tdate_created,\r\n        } = this.state;\r\n\r\n        const {journals} = this.props;\r\n        const {workbooks} = this.props;\r\n        const {employees} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.accountingadjustments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedAccountingPosts} onSelectionChange={e => this.setState({selectedAccountingPosts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Bill Payments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"entry\"\r\n                            header=\"Entry\"\r\n                            sortable filter filterPlaceholder=\"Search by Entry\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"adjusting_entry\"\r\n                            header=\"Adjusting Entry\"\r\n                            sortable filter filterPlaceholder=\"Search by Adjusting Entry\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"workbook\"\r\n                            header=\"Workbook\"\r\n                            sortable filter filterPlaceholder=\"Search by Workbook\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"created_by\"\r\n                            header=\"Created By\"\r\n                            sortable filter filterPlaceholder=\"Search by Created By\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.accountingadjustmentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Accounting Adjustment Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={accountingadjustmentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                name=\"date_created\"\r\n                                onChange={this.onChange}\r\n                                value={date_created}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Last Interest Earned Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"description\"\r\n                                    onChange={this.onChange}\r\n                                    value={description}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={entry}\r\n                                onChange={this.onEntry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT ENTRY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={adjusting_entry}\r\n                                onChange={this.onAdjustingEntry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT ADJUSTING ENTRY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={workbook}\r\n                                onChange={this.onWorkbook}\r\n                                options={workbooks}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT WORKBOOK</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={created_by}\r\n                                onChange={this.onCreatedBy}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CREATED BY</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE ACCOUNTING ADJUSTMENT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                id=\"inDateCreated\" value={this.state.selectRow.date_created}\r\n                                style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            date_created: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    id=\"inDescription\"\r\n                                    value={this.state.selectRow.description}\r\n                                    onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            description: e.target.value\r\n                                        }\r\n                                    })\r\n                                }/>\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEntry\"\r\n                                value={this.state.selectRow.entry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        entry: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT ENTRY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inAdjustingEntry\"\r\n                                value={this.state.selectRow.adjusting_entry}\r\n                                options={journals}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"vendor\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        adjusting_entry: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT ADJUSTING ENTRY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWorkbook\"\r\n                                value={this.state.selectRow.workbook}\r\n                                options={ workbooks}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        workbook: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT  WORKBOOK</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCreatedBy\"\r\n                                value={this.state.selectRow.created_by}\r\n                                options={ employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        created_by: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEES</label>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteAccountingAdjustmentsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteAccountingAdjustmentsDialogFooter} onHide={this.hideDeleteAccountingAdjustmentsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.accountingadjustment && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    journals: state.journals.journals,\r\n    workbooks: state.workbooks.workbooks,\r\n    employees: state.employees.employees,\r\n    accountingadjustments: state.accountingadjustments.accountingadjustments,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployees,\r\n    getJournals,\r\n    getWorkbooks,\r\n    getAccountingAdjustments,\r\n    deleteAccountingAdjustment,\r\n    editAccountingAdjustment,\r\n    addAccountingAdjustment} ) (AccountingAdjustments);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_ACCOUNTING_ADJUSTMENT,\r\n        GET_ACCOUNTING_ADJUSTMENTS,\r\n        DELETE_ACCOUNTING_ADJUSTMENT,\r\n        GET_ACCOUNTING_ADJUSTMENT,\r\n        EDIT_ACCOUNTING_ADJUSTMENT\r\n    } from '../types/accountingadjustmentTypes';\r\nimport { accountingadjustmentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getAccountingAdjustments = () => dispatch => {\r\n    axios.get(accountingadjustmentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNTING_ADJUSTMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Delete\r\nexport const deleteAccountingAdjustment = (id) => dispatch => {\r\n    axios.delete(accountingadjustmentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ACCOUNTING_ADJUSTMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addAccountingAdjustment = (accountingadjustment) => dispatch => {\r\n    axios.post(accountingadjustmentsURL, accountingadjustment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ACCOUNTING_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getAccountingAdjustment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/accounting-adjustments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACCOUNTING_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editAccountingAdjustment = (id, accountingadjustment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/accounting/accounting-adjustments/${id}/`, accountingadjustment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_ACCOUNTING_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getDebits} from '..//../actions/debits';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Debits extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            debits : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        debits : PropTypes.array.isRequired,\r\n        getDebits: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getDebits();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Debits</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.debits}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Debits found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"amount\"\r\n                        header=\"Amount\"\r\n                        sortable filter filterPlaceholder=\"Search by Amount\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"entry\"\r\n                        header=\"Entry\"\r\n                        sortable filter filterPlaceholder=\"Search by Entry\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    debits: state.debits.debits\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDebits} ) (Debits);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCredits} from '..//../actions/credits';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Credits extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            credits : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        credits : PropTypes.array.isRequired,\r\n        getCredits: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCredits();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Credits</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.credits}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Credits found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"amount\"\r\n                        header=\"Amount\"\r\n                        sortable filter filterPlaceholder=\"Search by Amount\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"entry\"\r\n                        header=\"Entry\"\r\n                        sortable filter filterPlaceholder=\"Search by Entry\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    credits: state.credits.credits\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCredits} ) (Credits);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getFullyPaidNotVerifiedBills} from '..//../actions/fullypaidnotverifiedbills';\r\nimport \"./form.css\";\r\n\r\n\r\nclass FullyPaidNotVerifiedBills extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullypaidnotverifiedbills : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        fullypaidnotverifiedbills : PropTypes.array.isRequired,\r\n        getFullyPaidNotVerifiedBills: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getFullyPaidNotVerifiedBills();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Fully Paid Not Verified Bills</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.fullypaidnotverifiedbills}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Fully Paid Not Verified Bills found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"vendor\"\r\n                        header=\"Vendor\"\r\n                        sortable filter filterPlaceholder=\"Search by Vendor\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference\"\r\n                        header=\"Reference\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"due\"\r\n                        header=\"Due\"\r\n                        sortable filter filterPlaceholder=\"Search by Due\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"entry\"\r\n                        header=\"Entry\"\r\n                        sortable filter filterPlaceholder=\"Search by Entry\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"lines\"\r\n                        header=\"Lines\"\r\n                        sortable filter filterPlaceholder=\"Search by Lines\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    fullypaidnotverifiedbills: state.fullypaidnotverifiedbills.fullypaidnotverifiedbills\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFullyPaidNotVerifiedBills} ) (FullyPaidNotVerifiedBills);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_FULLY_PAID_NOT_VERIFIED_BILLS,\r\n        DELETE_FULLY_PAID_NOT_VERIFIED_BILL,\r\n        GET_FULLY_PAID_NOT_VERIFIED_BILL\r\n    } from '../types/fullypaidnotverifiedbillTypes';\r\nimport { fullypaidnotverifiedbillsURL } from '../constants';\r\n\r\n// Get\r\nexport const getFullyPaidNotVerifiedBills = () => dispatch => {\r\n    axios.get(fullypaidnotverifiedbillsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_PAID_NOT_VERIFIED_BILLS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteFullyPaidNotVerifiedBill = (id) => dispatch => {\r\n    axios.delete(fullypaidnotverifiedbillsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_FULLY_PAID_NOT_VERIFIED_BILL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getFullyPaidNotVerifiedBill = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/fully-paid-not-verified-bills/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_PAID_NOT_VERIFIED_BILL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getFullyPaidBills} from '..//../actions/fullypaidbills';\r\nimport \"./form.css\";\r\n\r\n\r\nclass FullyPaidBills extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullypaidbills : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        fullypaidbills : PropTypes.array.isRequired,\r\n        getFullyPaidBills: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getFullyPaidBills();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Fully Paid Bills</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.fullypaidbills}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Fully Paid Bills found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"vendor\"\r\n                        header=\"Vendor\"\r\n                        sortable filter filterPlaceholder=\"Search by Vendor\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference\"\r\n                        header=\"Reference\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"due\"\r\n                        header=\"Due\"\r\n                        sortable filter filterPlaceholder=\"Search by Due\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"entry\"\r\n                        header=\"Entry\"\r\n                        sortable filter filterPlaceholder=\"Search by Entry\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"lines\"\r\n                        header=\"Lines\"\r\n                        sortable filter filterPlaceholder=\"Search by Lines\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    fullypaidbills: state.fullypaidbills.fullypaidbills\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFullyPaidBills} ) (FullyPaidBills);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_FULLY_PAID_BILLS,\r\n        DELETE_FULLY_PAID_BILL,\r\n        GET_FULLY_PAID_BILL\r\n    } from '../types/fullypaidbillTypes';\r\nimport { fullypaidbillsURL } from '../constants';\r\n\r\n// Get\r\nexport const getFullyPaidBills = () => dispatch => {\r\n    axios.get(fullypaidbillsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_PAID_BILLS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteFullyPaidBill = (id) => dispatch => {\r\n    axios.delete(fullypaidbillsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_FULLY_PAID_BILL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getFullyPaidBill = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/fully-paid-bills/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_PAID_BILL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getUnpostedAndUnadjustedJournalEntries} from '..//../actions/unpostedandunadjustedjournalentries';\r\nimport \"./form.css\";\r\n\r\n\r\nclass UnpostedAndUnadjustedJournalEntries extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            unpostedandunadjustedjournalentries : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedJournals: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        unpostedandunadjustedjournalentries : PropTypes.array.isRequired,\r\n        getUnpostedAndUnadjustedJournalEntries: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUnpostedAndUnadjustedJournalEntries();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Unposted And Unadjusted Journal Entry</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.unpostedandunadjustedjournalentries}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedJournals} onSelectionChange={e => this.setState({selectedJournals: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Unposted And Unadjusted Journal Entries found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"creator\"\r\n                        header=\"Creator\"\r\n                        sortable filter filterPlaceholder=\"Search by Creator\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"journal\"\r\n                        header=\"Journal\"\r\n                        sortable filter filterPlaceholder=\"Search by Journal\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    unpostedandunadjustedjournalentries: state.unpostedandunadjustedjournalentries.unpostedandunadjustedjournalentries\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUnpostedAndUnadjustedJournalEntries} ) (UnpostedAndUnadjustedJournalEntries);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRIES,\r\n        DELETE_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY,\r\n        GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY\r\n    } from '../types/unpostedandunadjustedjournalentryTypes';\r\nimport { unpostedandunadjustedjournalentriesURL } from '../constants';\r\n\r\n// Get\r\nexport const getUnpostedAndUnadjustedJournalEntries = () => dispatch => {\r\n    axios.get(unpostedandunadjustedjournalentriesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteUnpostedAndUnadjustedJournalEntry = (id) => dispatch => {\r\n    axios.delete(unpostedandunadjustedjournalentriesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getUnpostedAndUnadjustedJournalEntry = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/unposted-and-unadjusted-journal-entries/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNPOSTED_AND_UNADJUSTED_JOURNAL_ENTRY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getUnadjustedJournalEntries} from '..//../actions/unadjustedjournalentries';\r\nimport \"./form.css\";\r\n\r\n\r\nclass UnadjustedJournalEntries extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            unadjustedjournalentries : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedJournals: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        unadjustedjournalentries : PropTypes.array.isRequired,\r\n        getUnadjustedJournalEntries: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUnadjustedJournalEntries();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Unadjusted Journal Entry</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.unadjustedjournalentries}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedJournals} onSelectionChange={e => this.setState({selectedJournals: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Unadjusted Journal Entries found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"creator\"\r\n                        header=\"Creator\"\r\n                        sortable filter filterPlaceholder=\"Search by Creator\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"journal\"\r\n                        header=\"Journal\"\r\n                        sortable filter filterPlaceholder=\"Search by Journal\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    unadjustedjournalentries: state.unadjustedjournalentries.unadjustedjournalentries\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUnadjustedJournalEntries} ) (UnadjustedJournalEntries);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_UNADJUSTED_JOURNAL_ENTRIES,\r\n        DELETE_UNADJUSTED_JOURNAL_ENTRY,\r\n        GET_UNADJUSTED_JOURNAL_ENTRY\r\n    } from '../types/unadjustedjournalentryTypes';\r\nimport { unadjustedjournalentriesURL } from '../constants';\r\n\r\n// Get\r\nexport const getUnadjustedJournalEntries = () => dispatch => {\r\n    axios.get(unadjustedjournalentriesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNADJUSTED_JOURNAL_ENTRIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteUnadjustedJournalEntry = (id) => dispatch => {\r\n    axios.delete(unadjustedjournalentriesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_UNADJUSTED_JOURNAL_ENTRY,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getUnadjustedJournalEntry = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/unadjusted-journal-entries/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNADJUSTED_JOURNAL_ENTRY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getUnpostedJournalEntries} from '..//../actions/unpostedjournalentries';\r\nimport \"./form.css\";\r\n\r\n\r\nclass UnpostedJournalEntries extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            unpostedjournalentries : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedJournals: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        unpostedjournalentries : PropTypes.array.isRequired,\r\n        getUnpostedJournalEntries: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUnpostedJournalEntries();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Unposted Journal Entry</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.unpostedjournalentries}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedJournals} onSelectionChange={e => this.setState({selectedJournals: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Unposted Journal Entries found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"creator\"\r\n                        header=\"Creator\"\r\n                        sortable filter filterPlaceholder=\"Search by Creator\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"journal\"\r\n                        header=\"Journal\"\r\n                        sortable filter filterPlaceholder=\"Search by Journal\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    unpostedjournalentries: state.unpostedjournalentries.unpostedjournalentries\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUnpostedJournalEntries} ) (UnpostedJournalEntries);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_UNPOSTED_JOURNAL_ENTRIES,\r\n        DELETE_UNPOSTED_JOURNAL_ENTRY,\r\n        GET_UNPOSTED_JOURNAL_ENTRY\r\n    } from '../types/unpostedjournalentryTypes';\r\nimport { unpostedjournalentriesURL } from '../constants';\r\n\r\n// Get\r\nexport const getUnpostedJournalEntries = () => dispatch => {\r\n    axios.get(unpostedjournalentriesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNPOSTED_JOURNAL_ENTRIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteUnpostedJournalEntry = (id) => dispatch => {\r\n    axios.delete(unpostedjournalentriesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_UNPOSTED_JOURNAL_ENTRY,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getUnpostedJournalEntry = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/unposted-journal-entries/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNPOSTED_JOURNAL_ENTRY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getPostedJournalEntries} from '..//../actions/postedjournalentries';\r\nimport \"./form.css\";\r\n\r\n\r\nclass PostedJournalEntries extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            postedjournalentries : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedJournals: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        postedjournalentries : PropTypes.array.isRequired,\r\n        getPostedJournalEntries: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPostedJournalEntries();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Posted Journal Entries</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.postedjournalentries}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedJournals} onSelectionChange={e => this.setState({selectedJournals: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Posted Journal Entries found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"creator\"\r\n                        header=\"Creator\"\r\n                        sortable filter filterPlaceholder=\"Search by Creator\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"journal\"\r\n                        header=\"Journal\"\r\n                        sortable filter filterPlaceholder=\"Search by Journal\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    postedjournalentries: state.postedjournalentries.postedjournalentries\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPostedJournalEntries} ) (PostedJournalEntries);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_POSTED_JOURNAL_ENTRIES,\r\n        DELETE_POSTED_JOURNAL_ENTRY,\r\n        GET_POSTED_JOURNAL_ENTRY\r\n    } from '../types/postedjournalentryTypes';\r\nimport { postedjournalentriesURL } from '../constants';\r\n\r\n// Get\r\nexport const getPostedJournalEntries = () => dispatch => {\r\n    axios.get(postedjournalentriesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_POSTED_JOURNAL_ENTRIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deletePostedJournalEntry = (id) => dispatch => {\r\n    axios.delete(postedjournalentriesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_POSTED_JOURNAL_ENTRY,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getPostedJournalEntry = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/posted-journal-entries/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_POSTED_JOURNAL_ENTRY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getInActiveAccounts} from '..//../actions/inactiveaccounts';\r\nimport \"./form.css\";\r\n\r\n\r\nclass InActiveAccounts extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inactiveaccounts : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        inactiveaccounts : PropTypes.array.isRequired,\r\n        getInActiveAccounts: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInActiveAccounts();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage In Active Accounts</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.inactiveaccounts}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No In Active Accounts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"account_number\"\r\n                        header=\"Account Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Account Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"type\"\r\n                        header=\"Type\"\r\n                        sortable filter filterPlaceholder=\"Search by Type\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"balance_sheet_category\"\r\n                        header=\"Balance Sheet Category\"\r\n                        sortable filter filterPlaceholder=\"Search by Balance Sheet Category\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"balance\"\r\n                        header=\"Balance\"\r\n                        sortable filter filterPlaceholder=\"Search by Balance\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"created_date\"\r\n                        header=\"Created Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Created Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inactiveaccounts: state.inactiveaccounts.inactiveaccounts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getInActiveAccounts} ) (InActiveAccounts);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_IN_ACTIVE_ACCOUNTS,\r\n        DELETE_IN_ACTIVE_ACCOUNT,\r\n        GET_IN_ACTIVE_ACCOUNT\r\n    } from '../types/inactiveaccountTypes';\r\nimport { inactiveaccountsURL } from '../constants';\r\n\r\n// Get\r\nexport const getInActiveAccounts = () => dispatch => {\r\n    axios.get(inactiveaccountsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_IN_ACTIVE_ACCOUNTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInActiveAccount = (id) => dispatch => {\r\n    axios.delete(inactiveaccountsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_IN_ACTIVE_ACCOUNT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInActiveAccount = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/accounting/in-active-accounts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_IN_ACTIVE_ACCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getBills} from '..//../actions/bills';\r\n\r\nimport \"./form.css\";\r\n\r\n\r\nclass Bills extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            bills : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        bills : PropTypes.array.isRequired,\r\n        getBills: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getBills();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>MANAGE BILLS</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.bills}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Bills found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"vendor\"\r\n                        header=\"Vendor\"\r\n                        sortable filter filterPlaceholder=\"Search by Vendor\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference\"\r\n                        header=\"Reference\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"due\"\r\n                        header=\"Due\"\r\n                        sortable filter filterPlaceholder=\"Search by Due\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    bills: state.bills.bills\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBills} ) (Bills);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_ACTIVE_SUPPLIERS,\r\n        DELETE_ACTIVE_SUPPLIER,\r\n        GET_ACTIVE_SUPPLIER,\r\n        ADD_ACTIVE_SUPPLIER\r\n    } from '../types/activesupplierTypes';\r\nimport { activesuppliersURL } from '../constants';\r\n\r\n// Get\r\nexport const getActiveSuppliers = () => dispatch => {\r\n    axios.get(activesuppliersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACTIVE_SUPPLIERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addActiveSupplier = (activesupplier) => dispatch => {\r\n    axios.post(activesuppliersURL, activesupplier)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ACTIVE_SUPPLIER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteActiveSupplier = (id) => dispatch => {\r\n    axios.delete(activesuppliersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ACTIVE_SUPPLIER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getActiveSupplier = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/active-suppliers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACTIVE_SUPPLIER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import React, { Component } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getAccounts } from '..//../actions/accounts';\r\n\r\n\r\nclass BillLines extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         debit_account: null,\r\n\r\n    //     }\r\n                 \r\n    //     this.onAccount = this.onAccount.bind(this);\r\n\r\n    // }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.getAccounts();\r\n    }\r\n    \r\n    render(){\r\n        const { accounts } = this.props;\r\n\r\n        let debitAccounts = accounts.length > 0\r\n            && accounts.map((item, i) => {\r\n            return (\r\n              <option key={i} value={item.id}>{item.name}</option>\r\n            )\r\n          }, this);\r\n\r\n\r\n        return (\r\n           this.props.lines.map((val, idx) => {\r\n            let debit_account = `debit_account-${idx}`, amount = `amount-${idx}`\r\n            return (\r\n                <tr key={val.index}>\r\n                    <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"amount\"\r\n                          data-id={idx}\r\n                          id={amount}\r\n                          className=\"form-control\"\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <select\r\n                          name=\"debit_account\"\r\n                          id={debit_account}\r\n                          data-id={idx}\r\n                          className=\"form-control\"\r\n                        >\r\n                           {debitAccounts}\r\n                        </select>\r\n                    </td>    \r\n\r\n                    <td>\r\n                        {\r\n                        idx===0?<Button onClick={()=>this.props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n                        : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => this.props.delete(val))} />\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accounts.accounts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAccounts} ) (BillLines);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport { connect } from 'react-redux';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { getActiveSuppliers} from '..//../actions/activesuppliers';\r\nimport { addBill} from '..//../actions/bills';\r\nimport { getBillFrequencyChoices, getBillPaymentStatusChoices, getBillingChoices} from '..//../actions/choices';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport PropTypes from 'prop-types';\r\nimport BillLines from './BillLines';\r\n\r\n\r\n\r\nclass BillForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            vendor: null,\r\n            category: null,\r\n            bill_frequency_type: null,\r\n            payment_status: null,\r\n            date: '',\r\n            reference: '',\r\n            due: '',\r\n            memo: '',\r\n            formData: {},\r\n            lines: [{ index: Math.random(), debit_account: null, amount: '' }],\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.onVendor = this.onVendor.bind(this);\r\n        this.onBillingChoices = this.onBillingChoices.bind(this);\r\n        this.onBillPayment = this.onBillPayment.bind(this);\r\n        this.onBillingFrequency = this.onBillingFrequency.bind(this);\r\n    }\r\n\r\n    onVendor (e){\r\n        this.setState({vendor: e.value})\r\n    }\r\n\r\n    onBillingChoices (e){\r\n        this.setState({category: e.value})\r\n    }\r\n\r\n    onBillPayment (e){\r\n        this.setState({payment_status: e.value})\r\n    }\r\n\r\n    onBillingFrequency (e){\r\n        this.setState({bill_frequency_type: e.value})\r\n    }\r\n\r\n\r\n    onAccount (e){\r\n        this.setState({debit_account: e.value})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"debit_account\", \"amount\"].includes(e.target.name)) {\r\n            let lines = [...this.state.lines]\r\n            lines[e.target.dataset.id][e.target.name] = e.target.value;\r\n\r\n        } else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            lines: [...prevState.lines, { index: Math.random(), debit_account: \"\", amount: '' }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            lines: this.state.lines.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            lines: this.state.lines.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            vendor,\r\n            date,\r\n            reference,\r\n            due,\r\n            memo,\r\n            category,\r\n            bill_frequency_type,\r\n            payment_status,\r\n            lines\r\n\r\n        } = this.state;\r\n\r\n        const bill = {\r\n            vendor,\r\n            date,\r\n            reference,\r\n            due,\r\n            memo,\r\n            category,\r\n            bill_frequency_type,\r\n            payment_status,\r\n            lines,\r\n        };\r\n\r\n        this.props.addBill(bill);\r\n        console.log(bill)\r\n        this.setState({\r\n            lines: [],\r\n            vendor: '',\r\n            date: '',\r\n            reference: '',\r\n            due: '',\r\n            memo: '',\r\n            category: '',\r\n            bill_frequency_type: '',\r\n            payment_status: ''\r\n        });\r\n        this.props.history.push('/bills')\r\n    };\r\n\r\n    static propTypes = {\r\n        addBill: PropTypes.func.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getActiveSuppliers();\r\n        this.props.getBillingChoices();\r\n        this.props.getBillFrequencyChoices();\r\n        this.props.getBillPaymentStatusChoices();\r\n\r\n    }\r\n\r\n    render = () => {\r\n        const {\r\n            date,\r\n            vendor,\r\n            reference,\r\n            due,\r\n            memo,\r\n            category,\r\n            bill_frequency_type,\r\n            payment_status\r\n        } = this.state;\r\n\r\n        let { lines } = this.state\r\n\r\n        const { activesuppliers } = this.props;\r\n        const { billingchoices } = this.props;\r\n        const { billfrequencychoices } = this.props;\r\n        const { billpaymentstatuschoices } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body mt-4 mb-4\">\r\n        <h2>Manage Bill</h2>\r\n        <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n          <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                    <InputText\r\n                        name=\"reference\"\r\n                        onChange={this.onChange}\r\n                        value={reference}\r\n                    />\r\n                    <label htmlFor=\"inputtext\">Reference</label>\r\n                </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                <Calendar\r\n                    showIcon={true}\r\n                    className=\"form-control\"\r\n                    name=\"date\"\r\n                    onChange={this.onChange}\r\n                    value={date}\r\n                    dateFormat=\"yy-mm-dd\"\r\n                />\r\n                <label htmlFor=\"inputtext\">Date</label>\r\n                </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                <Calendar\r\n                    showIcon={true}\r\n                    className=\"form-control\"\r\n                    name=\"due\"\r\n                    onChange={this.onChange}\r\n                    value={due}\r\n                    dateFormat=\"yy-mm-dd\"\r\n                />\r\n                <label htmlFor=\"inputtext\">Due</label>\r\n                </span>\r\n            </div>\r\n             <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                <Dropdown\r\n                    value={category}\r\n                    onChange={this.onBillingChoices}\r\n                    options={billingchoices}\r\n                    filter={true}\r\n                    filterBy=\"key,value\"\r\n                    showClear={true}\r\n                    optionLabel=\"value\"\r\n                    optionValue=\"key\"\r\n                />\r\n\r\n                <label htmlFor=\"dropdown\">CATEGORY</label>\r\n                </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-12\">\r\n                <span className=\"p-float-label\">\r\n                    <InputTextarea\r\n                        name=\"memo\"\r\n                        onChange={this.onChange}\r\n                        value={memo}\r\n                    />\r\n                    <label htmlFor=\"inputtext\">Memo</label>\r\n              </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                <Dropdown\r\n                    value={vendor}\r\n                    onChange={this.onVendor}\r\n                    options={activesuppliers}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"id\"\r\n                />\r\n\r\n                <label htmlFor=\"dropdown\">SELECT VENDOR</label>\r\n                </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                <Dropdown\r\n                    value={payment_status}\r\n                    onChange={this.onBillPayment}\r\n                    options={billpaymentstatuschoices}\r\n                    filter={true}\r\n                    filterBy=\"key,value\"\r\n                    showClear={true}\r\n                    optionLabel=\"value\"\r\n                    optionValue=\"key\"\r\n                />\r\n\r\n                <label htmlFor=\"dropdown\">BILL PAYMENT STATUS</label>\r\n                </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <span className=\"p-float-label\">\r\n                <Dropdown\r\n                    value={bill_frequency_type}\r\n                    onChange={this.onBillingFrequency}\r\n                    options={billfrequencychoices}\r\n                    filter={true}\r\n                    filterBy=\"key,value\"\r\n                    showClear={true}\r\n                    optionLabel=\"value\"\r\n                    optionValue=\"key\"\r\n                />\r\n\r\n                <label htmlFor=\"dropdown\">BILL FREQUENCY TYPE</label>\r\n                </span>\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n                <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                  <tr>\r\n                    <th>AMOUNT</th>\r\n                    <th>DEBIT ACCOUNT</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <BillLines add={this.addNewRow} delete={this.clickOnDelete.bind(this)} lines={lines} />\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr><td colSpan=\"4\">\r\n                        <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                    </td></tr>\r\n                </tfoot>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    activesuppliers: state.activesuppliers.activesuppliers,\r\n    billingchoices: state.billingchoices.billingchoices,\r\n    billfrequencychoices: state.billfrequencychoices.billfrequencychoices,\r\n    billpaymentstatuschoices: state.billpaymentstatuschoices.billpaymentstatuschoices,\r\n})\r\n\r\nexport default connect(\r\n            mapStateToProps, \r\n            {getActiveSuppliers, addBill, getBillingChoices, getBillFrequencyChoices, getBillPaymentStatusChoices})\r\n            (BillForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getDeactivatedCustomers} from '..//../actions/deactivatedcustomers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass DeactivatedCustomers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            deactivatedcustomers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        deactivatedcustomers : PropTypes.array.isRequired,\r\n        getDeactivatedCustomers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getDeactivatedCustomers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Deactivated Customers</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.deactivatedcustomers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Deactivated Customers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer_number\"\r\n                        header=\"Customer Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"name\"\r\n                        header=\"Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    deactivatedcustomers: state.deactivatedcustomers.deactivatedcustomers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDeactivatedCustomers} ) (DeactivatedCustomers);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_DEACTIVATED_CUSTOMERS\r\n    } from '../types/deactivatedcustomerTypes';\r\nimport { deactivatedcustomersURL } from '../constants';\r\n\r\n// Get\r\nexport const getDeactivatedCustomers = () => dispatch => {\r\n    axios.get(deactivatedcustomersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DEACTIVATED_CUSTOMERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        GET_ACTIVE_CUSTOMERS,\r\n        ADD_ACTIVE_CUSTOMER,\r\n        DELETE_ACTIVE_CUSTOMER,\r\n        EDIT_ACTIVE_CUSTOMER,\r\n        GET_ACTIVE_CUSTOMER\r\n    } from '../types/activecustomerTypes';\r\nimport { activecustomersURL } from '../constants';\r\n\r\n// Get\r\nexport const getActiveCustomers = () => dispatch => {\r\n    axios.get(activecustomersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACTIVE_CUSTOMERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Delete\r\nexport const deleteActiveCustomer = (id) => dispatch => {\r\n    axios.delete(activecustomersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ACTIVE_CUSTOMER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addActiveCustomer = (activecustomer) => dispatch => {\r\n    axios.post(activecustomersURL, activecustomer)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ACTIVE_CUSTOMER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getActiveCustomer = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/customers/active-customers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ACTIVE_CUSTOMER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editActiveCustomer = (id, activecustomer) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/customers/active-customers/${id}/`, activecustomer)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_ACTIVE_CUSTOMER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCustomerAddresses, addCustomerAddress, editCustomerAddress, deleteCustomerAddress } from '..//../actions/customeraddresses';\r\nimport { getCustomerAddressTypeChoices } from '..//../actions/choices';\r\nimport { getActiveCustomers } from '..//../actions/activecustomers';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CustomerAddresses extends Component {\r\n\r\n    emptyCustomerAddress = {\r\n        owner: null,\r\n        type: null,\r\n        street_address: '',\r\n        floor_number: '',\r\n        city: '',\r\n        apartment_number: '',\r\n        postal_code: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customeraddresses: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedCustomerAddresses: null,\r\n            customeraddressDialog: false,\r\n            deleteCustomerAddressDialog: false,\r\n            deleteCustomerAddressesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tapartment_number: '',\r\n    \t\t\tpostal_code: ''\r\n            },\r\n            newData: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tapartment_number: '',\r\n    \t\t\tpostal_code: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveCustomerAddress = this.saveCustomerAddress.bind(this);\r\n        this.editCustomerAddress = this.editCustomerAddress.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteCustomerAddress = this.confirmDeleteCustomerAddress.bind(this);\r\n        this.deleteCustomerAddress = this.deleteCustomerAddress.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedCustomerAddresses = this.deleteSelectedCustomerAddresses.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteCustomerAddressDialog = this.hideDeleteCustomerAddressDialog.bind(this);\r\n        this.hideDeleteCustomerAddressesDialog = this.hideDeleteCustomerAddressesDialog.bind(this);\r\n        this.onOwner = this.onOwner.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n    }\r\n\r\n    onOwner (e){\r\n        this.setState({owner: e.value})\r\n    }\r\n\r\n    onType (e){\r\n        this.setState({type: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        customeraddresses: PropTypes.array.isRequired,\r\n        getCustomerAddresses: PropTypes.func.isRequired,\r\n        addCustomerAddress: PropTypes.func.isRequired,\r\n        editCustomerAddress: PropTypes.func.isRequired,\r\n        deleteCustomerAddress: PropTypes.func.isRequired,\r\n        getActiveCustomers: PropTypes.func.isRequired,\r\n        getCustomerAddressTypeChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCustomerAddresses()\r\n        this.props.getActiveCustomers()\r\n        this.props.getCustomerAddressTypeChoices()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tapartment_number: '',\r\n    \t\t\tpostal_code: ''\r\n            },\r\n            submitted: false,\r\n            customeraddressDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            customeraddressDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteCustomerAddressDialog() {\r\n        this.setState({ deleteCustomerAddressDialog: false });\r\n    }\r\n\r\n    hideDeleteCustomerAddressesDialog() {\r\n        this.setState({ deleteCustomerAddressesDialog: false });\r\n    }\r\n\r\n\r\n    saveCustomerAddress = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tapartment_number,\r\n\t\t\tpostal_code\r\n        } = this.state;\r\n        const customeraddress = {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tapartment_number,\r\n\t\t\tpostal_code\r\n        };\r\n        this.props.addCustomerAddress(customeraddress);\r\n        this.setState({\r\n            owner: null,\r\n\t\t\ttype: null,\r\n\t\t\tstreet_address: '',\r\n\t\t\tfloor_number: '',\r\n\t\t\tcity: '',\r\n\t\t\tapartment_number: '',\r\n\t\t\tpostal_code: '',\r\n            activecustomerDialog: false\r\n        });\r\n        this.props.history.push('/customeraddresses');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tapartment_number: '',\r\n    \t\t\tpostal_code: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editCustomerAddress(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tapartment_number,\r\n\t\t\tpostal_code\r\n\r\n        } = this.state.selectRow;\r\n        const customeraddress = {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tapartment_number,\r\n\t\t\tpostal_code\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editCustomerAddress(this.state.selectRow.id, customeraddress);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteCustomerAddress(customeraddress) {\r\n        this.setState({\r\n            customeraddress,\r\n            deleteCustomerAddressDialog: true\r\n        });\r\n    }\r\n\r\n    deleteCustomerAddress() {\r\n        this.props.deleteCustomerAddress();\r\n        this.setState({\r\n            deleteCustomerAddressDialog: false,\r\n            customeraddress: this.emptyCustomerAddress\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteCustomerAddressesDialog: true });\r\n    }\r\n\r\n    deleteSelectedCustomerAddresses() {\r\n        this.props.deleteCustomerAddress();\r\n        this.setState({\r\n            deleteCustomerAddressesDialog: false,\r\n            selectedCustomerAddresses: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Customer Address</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW CUSTOMER ADDRESS\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteCustomerAddress(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const customeraddressDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveCustomerAddress} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editCustomerAddress}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteCustomerAddressesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteCustomerAddressesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedCustomerAddresses} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tapartment_number,\r\n\t\t\tpostal_code\r\n        } = this.state;\r\n\r\n        const {activecustomers} = this.props;\r\n        const {customeraddresstypechoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.customeraddresses}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedCustomerAddresses} onSelectionChange={e => this.setState({selectedCustomerAddresses: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Customer Address found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"owner\"\r\n                            header=\"Owner\"\r\n                            sortable filter filterPlaceholder=\"Search by Owner\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"street_address\"\r\n                            header=\"Street Address\"\r\n                            sortable filter filterPlaceholder=\"Search by Street Address\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"floor_number\"\r\n                            header=\"Floor Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Floor Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"apartment_number\"\r\n                            header=\"Apartment Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Apartment Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"city\"\r\n                            header=\"City\"\r\n                            sortable filter filterPlaceholder=\"Search by City\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"postal_code\"\r\n                            header=\"Postal Code\"\r\n                            sortable filter filterPlaceholder=\"Search by Postal Code\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.customeraddressDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Customer Address Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={customeraddressDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"street_address\"\r\n                                    onChange={this.onChange}\r\n                                    value={street_address}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Street Address</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"floor_number\"\r\n                                    onChange={this.onChange}\r\n                                    value={floor_number}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Floor Number</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"city\"\r\n                                    onChange={this.onChange}\r\n                                    value={city}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">City</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"apartment_number\"\r\n                                    onChange={this.onChange}\r\n                                    value={apartment_number}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Apartment Number</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"postal_code\"\r\n                                    onChange={this.onChange}\r\n                                    value={postal_code}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Postal Code</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={type}\r\n                                onChange={this.onType}\r\n                                options={customeraddresstypechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT TYPE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={owner}\r\n                                onChange={this.onOwner}\r\n                                options={activecustomers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT OWNER</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE CUSTOMER ADDRESS\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                street_address: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inStreetAddress\"\r\n                                    value={this.state.selectRow.street_address}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                floor_number: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inFloorNumber\"\r\n                                    value={this.state.selectRow.floor_number}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                city: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inCity\"\r\n                                    value={this.state.selectRow.city}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                apartment_number: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inApartmentNumber\"\r\n                                    value={this.state.selectRow.apartment_number}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                postal_code: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inPostalCode\"\r\n                                    value={this.state.selectRow.postal_code}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                options={customeraddresstypechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        type: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inOwner\"\r\n                                value={this.state.selectRow.owner}\r\n                                options={activecustomers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        owner: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteCustomerAddressesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteCustomerAddressesDialogFooter} onHide={this.hideDeleteCustomerAddressesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.customeraddress && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    activecustomers: state.activecustomers.activecustomers,\r\n    customeraddresses: state.customeraddresses.customeraddresses,\r\n    customeraddresstypechoices: state.customeraddresstypechoices.customeraddresstypechoices,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getActiveCustomers,\r\n    getCustomerAddressTypeChoices,\r\n    getCustomerAddresses,\r\n    editCustomerAddress,\r\n    deleteCustomerAddress,\r\n    addCustomerAddress} ) (CustomerAddresses);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_CUSTOMER_ADDRESS,\r\n        GET_CUSTOMER_ADDRESSES,\r\n        DELETE_CUSTOMER_ADDRESS,\r\n        GET_CUSTOMER_ADDRESS,\r\n        EDIT_CUSTOMER_ADDRESS\r\n    } from '../types/customeraddressTypes';\r\nimport { customeraddressesURL } from '../constants';\r\n\r\n// Get\r\nexport const getCustomerAddresses = () => dispatch => {\r\n    axios.get(customeraddressesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CUSTOMER_ADDRESSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteCustomerAddress = (id) => dispatch => {\r\n    axios.delete(customeraddressesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_CUSTOMER_ADDRESS,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCustomerAddress = (customeraddress) => dispatch => {\r\n    axios.post(customeraddressesURL, customeraddress)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CUSTOMER_ADDRESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getCustomerAddress = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/customers/customer-addresses/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CUSTOMER_ADDRESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editCustomerAddress = (id, customeraddress) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/customers/customer-addresses/${id}/`, customeraddress)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_CUSTOMER_ADDRESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getActiveCustomers, getActiveCustomer, addActiveCustomer, editActiveCustomer, deleteActiveCustomer } from '..//../actions/activecustomers';\r\nimport { getCustomerStatusChoices } from '..//../actions/choices';\r\nimport { getAccounts } from '..//../actions/accounts';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\nclass ActiveCustomers extends Component {\r\n\r\n    emptyActiveCustomer = {\r\n        name: '',\r\n        is_organization: false,\r\n        is_individual: false,\r\n        banking_details: '',\r\n        website: '',\r\n        bp_number: '',\r\n        email: '',\r\n        phone: '',\r\n        status: null,\r\n        account: null,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activecustomers: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedActiveCustomers: null,\r\n            activecustomerDialog: false,\r\n            deleteActiveCustomerDialog: false,\r\n            deleteActiveCustomersDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n    \t\t\tis_organization: false,\r\n                is_individual: false,\r\n    \t\t\tbanking_details: '',\r\n    \t\t\twebsite: '',\r\n    \t\t\tbp_number: '',\r\n    \t\t\temail: '',\r\n    \t\t\tphone: '',\r\n                status: null,\r\n                account: null,\r\n            },\r\n            newData: {\r\n                name: '',\r\n    \t\t\tis_organization: false,\r\n                is_individual: false,\r\n    \t\t\tbanking_details: '',\r\n    \t\t\twebsite: '',\r\n    \t\t\tbp_number: '',\r\n    \t\t\temail: '',\r\n    \t\t\tphone: '',\r\n                status: null,\r\n                account: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveActiveCustomer = this.saveActiveCustomer.bind(this);\r\n        this.editActiveCustomer = this.editActiveCustomer.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteActiveCustomer = this.confirmDeleteActiveCustomer.bind(this);\r\n        this.deleteActiveCustomer = this.deleteActiveCustomer.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedActiveCustomers = this.deleteSelectedActiveCustomers.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteActiveCustomerDialog = this.hideDeleteActiveCustomerDialog.bind(this);\r\n        this.hideDeleteActiveCustomersDialog = this.hideDeleteActiveCustomersDialog.bind(this);\r\n        this.onStatus = this.onStatus.bind(this);\r\n        this.onAccount = this.onAccount.bind(this);\r\n        this.onIsOrganization = this.onIsOrganization.bind(this);\r\n        this.onIsIndividual = this.onIsIndividual.bind(this)\r\n    }\r\n\r\n    onIsOrganization() {\r\n        this.setState({\r\n            is_organization: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onIsIndividual() {\r\n        this.setState({\r\n            is_individual: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onStatus (e){\r\n        this.setState({status: e.value})\r\n    }\r\n\r\n    onAccount (e){\r\n        this.setState({account: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        activecustomers : PropTypes.array.isRequired,\r\n        getActiveCustomers: PropTypes.func.isRequired,\r\n        addActiveCustomer: PropTypes.func.isRequired,\r\n        editActiveCustomer: PropTypes.func.isRequired,\r\n        deleteActiveCustomer: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n        getActiveCustomer,\r\n        getCustomerStatusChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAccounts()\r\n        this.props.getActiveCustomers()\r\n        this.props.getCustomerStatusChoices()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n    \t\t\tis_organization: false,\r\n                is_individual: false,\r\n    \t\t\tbanking_details: '',\r\n    \t\t\twebsite: '',\r\n    \t\t\tbp_number: '',\r\n    \t\t\temail: '',\r\n    \t\t\tphone: '',\r\n                status: null,\r\n                account: null,\r\n            },\r\n            submitted: false,\r\n            activecustomerDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            activecustomerDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteActiveCustomerDialog() {\r\n        this.setState({ deleteActiveCustomerDialog: false });\r\n    }\r\n\r\n    hideDeleteActiveCustomersDialog() {\r\n        this.setState({ deleteActiveCustomersDialog: false });\r\n    }\r\n\r\n\r\n    saveActiveCustomer = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n\t\t\tis_organization,\r\n            is_individual,\r\n\t\t\tbanking_details,\r\n\t\t\twebsite,\r\n\t\t\tbp_number,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n            status,\r\n            account,\r\n        } = this.state;\r\n        const activecustomer = {\r\n            name,\r\n\t\t\tis_organization,\r\n            is_individual,\r\n\t\t\tbanking_details,\r\n\t\t\twebsite,\r\n\t\t\tbp_number,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n            status,\r\n            account,\r\n        };\r\n        this.props.addActiveCustomer(activecustomer);\r\n        this.setState({\r\n            name: '',\r\n\t\t\tis_organization: false,\r\n            is_individual: false,\r\n\t\t\tbanking_details: '',\r\n\t\t\twebsite: '',\r\n\t\t\tbp_number: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n            status: '',\r\n            account: '',\r\n            activecustomerDialog: false\r\n        });\r\n        this.props.history.push('/activecustomers');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n    \t\t\tis_organization: false,\r\n                is_individual: false,\r\n    \t\t\tbanking_details: '',\r\n    \t\t\twebsite: '',\r\n    \t\t\tbp_number: '',\r\n    \t\t\temail: '',\r\n    \t\t\tphone: '',\r\n                status: null,\r\n                account: null,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editActiveCustomer(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n\t\t\tis_organization,\r\n            is_individual,\r\n\t\t\tbanking_details,\r\n\t\t\twebsite,\r\n\t\t\tbp_number,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n            status,\r\n            account,\r\n\r\n        } = this.state.selectRow;\r\n        const activecustomer = {\r\n            name,\r\n\t\t\tis_organization,\r\n            is_individual,\r\n\t\t\tbanking_details,\r\n\t\t\twebsite,\r\n\t\t\tbp_number,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n            status,\r\n            account,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editActiveCustomer(this.state.selectRow.id, activecustomer);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteActiveCustomer(activecustomer) {\r\n        this.setState({\r\n            activecustomer,\r\n            deleteActiveCustomerDialog: true\r\n        });\r\n    }\r\n\r\n    deleteActiveCustomer() {\r\n        this.props.deleteActiveCustomer();\r\n        this.setState({\r\n            deleteActiveCustomerDialog: false,\r\n            activecustomer: this.emptyActiveCustomer\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteActiveCustomersDialog: true });\r\n    }\r\n\r\n    deleteSelectedActiveCustomers() {\r\n        this.props.deleteActiveCustomer();\r\n        this.setState({\r\n            deleteActiveCustomersDialog: false,\r\n            selectedActiveCustomers: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Active Customer</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW ACTIVE CUSTOMERS\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteActiveCustomer(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const activecustomerDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveActiveCustomer} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editActiveCustomer}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteActiveCustomersDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteActiveCustomersDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedActiveCustomers} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n\t\t\tbanking_details,\r\n\t\t\twebsite,\r\n\t\t\tbp_number,\r\n\t\t\temail,\r\n\t\t\tphone,\r\n            status,\r\n            account,\r\n        } = this.state;\r\n\r\n        const {accounts} = this.props;\r\n        const {customerstatuschoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.activecustomers}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedActiveCustomers} onSelectionChange={e => this.setState({selectedActiveCustomers: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Active Customers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"customer_number\"\r\n                            header=\"Customer Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Customer Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"phone\"\r\n                            header=\"Phone\"\r\n                            sortable filter filterPlaceholder=\"Search by Phone\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"email\"\r\n                            header=\"Email\"\r\n                            sortable filter filterPlaceholder=\"Search by Email\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.activecustomerDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Active Customer Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={activecustomerDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"website\"\r\n                                    onChange={this.onChange}\r\n                                    value={website}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Website</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"bp_number\"\r\n                                    onChange={this.onChange}\r\n                                    value={bp_number}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Bp Number</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"email\"\r\n                                    onChange={this.onChange}\r\n                                    value={email}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Email</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"phone\"\r\n                                    onChange={this.onChange}\r\n                                    value={phone}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Phone</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"banking_details\"\r\n                                    onChange={this.onChange}\r\n                                    value={banking_details}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Banking Details</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>IS ORGANIZATION :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onIsOrganization}\r\n                                checked={this.state.is_organization}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>IS INDIVIDUAL :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onIsIndividual}\r\n                                checked={this.state.is_individual}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={status}\r\n                                onChange={this.onStatus}\r\n                                options={customerstatuschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT STATUS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={account}\r\n                                onChange={this.onAccount}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE ACTIVE CUSTOMER\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                website: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inWebsite\"\r\n                                    value={this.state.selectRow.website}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                bp_number: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inBpNumber\"\r\n                                    value={this.state.selectRow.bp_number}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                email: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inEmail\"\r\n                                    value={this.state.selectRow.email}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                phone: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inPhone\"\r\n                                    value={this.state.selectRow.phone}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    id=\"inBankingDetails\"\r\n                                    value={this.state.selectRow.banking_details}\r\n                                    onChange={(e) =>\r\n                                    this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            banking_details: e.target.value\r\n                                        }\r\n                                    })\r\n                                }/>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>IS ORGANIZATION :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            is_organization: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.is_organization}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>IS INDIVIDUAL :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            is_individual: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.is_individual}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inStatus\"\r\n                                value={this.state.selectRow.status}\r\n                                options={customerstatuschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        status: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inAccount\"\r\n                                value={this.state.selectRow.account}\r\n                                options={accounts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        account: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteActiveCustomersDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteActiveCustomersDialogFooter} onHide={this.hideDeleteActiveCustomersDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.activecustomer && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    activecustomers: state.activecustomers.activecustomers,\r\n    accounts: state.accounts.accounts,\r\n    customerstatuschoices: state.customerstatuschoices.customerstatuschoices,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAccounts,\r\n    getCustomerStatusChoices,\r\n    getActiveCustomers,\r\n    editActiveCustomer,\r\n    deleteActiveCustomer,\r\n    addActiveCustomer} ) (ActiveCustomers);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAYROLL_SCHEDULE, EDIT_EMPLOYEE_PAYROLL_SCHEDULE, GET_EMPLOYEE_PAYROLL_SCHEDULES, GET_EMPLOYEE_PAYROLL_SCHEDULE, DELETE_EMPLOYEE_PAYROLL_SCHEDULE } from '../types/employeepayrollscheduleTypes';\r\nimport { employeepayrollschedulesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePayrollSchedules=  () => dispatch => {\r\n    axios.get(employeepayrollschedulesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAYROLL_SCHEDULES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePayrollSchedule = (id) => dispatch => {\r\n    axios.delete(employeepayrollschedulesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAYROLL_SCHEDULE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePayrollSchedule = employeepayrollschedule => dispatch => {\r\n    axios.post(employeepayrollschedulesURL, employeepayrollschedule)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAYROLL_SCHEDULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayrollSchedule = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-payroll-schedules/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYROLL_SCHEDULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeePayrollSchedule = (id, employeepayrollschedule) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-payroll-schedules/${id}/`, employeepayrollschedule)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_PAYROLL_SCHEDULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeePayrollSchedules, addEmployeePayrollSchedule, editEmployeePayrollSchedule, deleteEmployeePayrollSchedule } from '..//../actions/employeepayrollschedules';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\n\r\nclass EmployeePayrollSchedules extends Component {\r\n\r\n    emptyEmployeePayrollSchedule = {\r\n        name: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepayrollschedules: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePayrollSchedules: null,\r\n            employeepayrollscheduleDialog: false,\r\n            deleteEmployeePayrollScheduleDialog: false,\r\n            deleteEmployeePayrollSchedulesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: ''\r\n            },\r\n            newData: {\r\n                name: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeePayrollSchedule = this.saveEmployeePayrollSchedule.bind(this);\r\n        this.editEmployeePayrollSchedule = this.editEmployeePayrollSchedule.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeePayrollSchedule = this.confirmDeleteEmployeePayrollSchedule.bind(this);\r\n        this.deleteEmployeePayrollSchedule = this.deleteEmployeePayrollSchedule.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeePayrollSchedules = this.deleteSelectedEmployeePayrollSchedules.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeePayrollScheduleDialog = this.hideDeleteEmployeePayrollScheduleDialog.bind(this);\r\n        this.hideDeleteEmployeePayrollSchedulesDialog = this.hideDeleteEmployeePayrollSchedulesDialog.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepayrollschedules : PropTypes.array.isRequired,\r\n        getEmployeePayrollSchedules: PropTypes.func.isRequired,\r\n        addEmployeePayrollSchedule: PropTypes.func.isRequired,\r\n        editEmployeePayrollSchedule: PropTypes.func.isRequired,\r\n        deleteEmployeePayrollSchedule: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: ''\r\n            },\r\n            submitted: false,\r\n            employeepayrollscheduleDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeepayrollscheduleDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeePayrollScheduleDialog() {\r\n        this.setState({ deleteEmployeePayrollScheduleDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeePayrollSchedulesDialog() {\r\n        this.setState({ deleteEmployeePayrollSchedulesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePayrollSchedules();\r\n    }\r\n\r\n\r\n    saveEmployeePayrollSchedule = (e) => {\r\n        e.preventDefault();\r\n        const { name } = this.state;\r\n        const employeepayrollschedule = { name };\r\n        this.props.addEmployeePayrollSchedule(employeepayrollschedule);\r\n        this.setState({\r\n            name: '',\r\n            employeepayrollscheduleDialog: false\r\n        });\r\n        this.props.history.push('/employeepayrollschedules');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeePayrollSchedule(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name\r\n        } = this.state.selectRow;\r\n        const employeepayrollschedule = {\r\n            name\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeePayrollSchedule(this.state.selectRow.id, employeepayrollschedule);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeePayrollSchedule(employeepayrollschedule) {\r\n        this.setState({\r\n            employeepayrollschedule,\r\n            deleteEmployeePayrollScheduleDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeePayrollSchedule() {\r\n        this.props.deleteEmployeePayrollSchedule();\r\n        this.setState({\r\n            deleteEmployeePayrollScheduleDialog: false,\r\n            employeepayrollschedule: this.emptyEmployeePayrollSchedule\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeePayrollSchedulesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeePayrollSchedules() {\r\n        this.props.deleteEmployeePayrollSchedule();\r\n        this.setState({\r\n            deleteEmployeePayrollSchedulesDialog: false,\r\n            selectedEmployeePayrollSchedules: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Payroll Schedules</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE PAYROLL SCHEDULE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeePayrollSchedule(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeepayrollscheduleDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeePayrollSchedule} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeePayrollSchedule}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeePayrollSchedulesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeePayrollSchedulesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeePayrollSchedules} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeepayrollschedules}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeePayrollSchedules} onSelectionChange={e => this.setState({selectedEmployeePayrollSchedules: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Payroll Schedules found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeepayrollscheduleDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Payroll Schedules Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeepayrollscheduleDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Name</label>\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE EMPLOYEE PAYROLL SCHEDULE\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeePayrollSchedulesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeePayrollSchedulesDialogFooter} onHide={this.hideDeleteEmployeePayrollSchedulesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeepayrollschedule && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepayrollschedules: state.employeepayrollschedules.employeepayrollschedules\r\n})\r\n\r\nexport default connect(mapStateToProps, { getEmployeePayrollSchedules, addEmployeePayrollSchedule, editEmployeePayrollSchedule, deleteEmployeePayrollSchedule } ) (EmployeePayrollSchedules);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployees} from '..//../actions/employees';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Employees extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employees : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        employees : PropTypes.array.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployees();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employees</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.employees}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Employees found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEmployees} ) (Employees);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAYGRADE, EDIT_EMPLOYEE_PAYGRADE, GET_EMPLOYEE_PAYGRADES, GET_EMPLOYEE_PAYGRADE, DELETE_EMPLOYEE_PAYGRADE } from '../types/employeepaygradeTypes';\r\nimport { employeepaygradesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePaygrades=  () => dispatch => {\r\n    axios.get(employeepaygradesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAYGRADES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePaygrade = (id) => dispatch => {\r\n    axios.delete(employeepaygradesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAYGRADE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePaygrade = employeepaygrade => dispatch => {\r\n    axios.post(employeepaygradesURL, employeepaygrade)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAYGRADE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePaygrade = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-paygrades/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYGRADE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n\r\n//Edit\r\nexport const editEmployeePaygrade = (id, employeepaygrade) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-paygrades/${id}/`, employeepaygrade)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_PAYGRADE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addEmployee } from '..//../actions/employees';\r\nimport PropTypes from 'prop-types';\r\nimport { getEmployeePaygrades } from '..//../actions/employeepaygrades';\r\nimport { getEmployeesTypeChoices, getEmployeesGenderChoices } from '..//../actions/choices';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Calendar} from \"primereact/calendar\";\r\n\r\n\r\nclass EmployeeForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n\t\t\tcategory: null,\r\n\t\t\tphone: '',\r\n\t\t\tfirst_name: '',\r\n\t\t\tmiddle_name: '',\r\n\t\t\tlast_name: '',\r\n\t\t\taddress: '',\r\n\t\t\tdate_of_birth: '',\r\n\t\t\tid_number: '',\r\n\t\t\tgender: null,\r\n\t\t\tpay_grade: null,\r\n\t\t\tleave_days: '',\r\n\t\t\tlast_leave_day_increment: '',\r\n\t\t\tuses_timesheet: false,\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCategory = this.onCategory.bind(this);\r\n        this.onGender = this.onGender.bind(this);\r\n        this.onPayGrade = this.onPayGrade.bind(this);\r\n        this.onUsesTimesheet = this.onUsesTimesheet.bind(this)\r\n    }\r\n\r\n    onUsesTimesheet() {\r\n        this.setState({\r\n            uses_timesheet: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onCategory (e){\r\n        this.setState({category: e.value})\r\n    }\r\n\r\n    onGender (e){\r\n        this.setState({gender: e.value})\r\n    }\r\n\r\n    onPayGrade (e){\r\n        this.setState({pay_grade: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            email,\r\n\t\t\tcategory,\r\n\t\t\tphone,\r\n\t\t\tfirst_name,\r\n\t\t\tmiddle_name,\r\n\t\t\tlast_name,\r\n\t\t\taddress,\r\n\t\t\tdate_of_birth,\r\n\t\t\tid_number,\r\n\t\t\tgender,\r\n\t\t\tpay_grade,\r\n\t\t\tleave_days,\r\n\t\t\tlast_leave_day_increment,\r\n\t\t\tuses_timesheet,\r\n        } = this.state;\r\n        const employee = {\r\n            email,\r\n\t\t\tcategory,\r\n\t\t\tphone,\r\n\t\t\tfirst_name,\r\n\t\t\tmiddle_name,\r\n\t\t\tlast_name,\r\n\t\t\taddress,\r\n\t\t\tdate_of_birth,\r\n\t\t\tid_number,\r\n\t\t\tgender,\r\n\t\t\tpay_grade,\r\n\t\t\tleave_days,\r\n\t\t\tlast_leave_day_increment,\r\n\t\t\tuses_timesheet,\r\n        };\r\n        this.props.addEmployee(employee);\r\n        this.setState({\r\n            email: '',\r\n\t\t\tcategory: '',\r\n\t\t\tphone: '',\r\n\t\t\tfirst_name: '',\r\n\t\t\tmiddle_name: '',\r\n\t\t\tlast_name: '',\r\n\t\t\taddress: '',\r\n\t\t\tdate_of_birth: '',\r\n\t\t\tid_number: '',\r\n\t\t\tgender: '',\r\n\t\t\tpay_grade: '',\r\n\t\t\tleave_days: '',\r\n\t\t\tlast_leave_day_increment: '',\r\n\t\t\tuses_timesheet: true,\r\n        });\r\n        this.props.history.push('/employees');\r\n    };\r\n\r\n    static propTypes = {\r\n        addEmployee: PropTypes.func.isRequired,\r\n        getEmployeesTypeChoices: PropTypes.func.isRequired,\r\n        getEmployeesGenderChoices: PropTypes.func.isRequired,\r\n        getEmployeePaygrades: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeesTypeChoices()\r\n        this.props.getEmployeesGenderChoices()\r\n        this.props.getEmployeePaygrades()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n\t\t\tcategory,\r\n\t\t\tphone,\r\n\t\t\tfirst_name,\r\n\t\t\tmiddle_name,\r\n\t\t\tlast_name,\r\n\t\t\taddress,\r\n\t\t\tdate_of_birth,\r\n\t\t\tid_number,\r\n\t\t\tgender,\r\n\t\t\tpay_grade,\r\n\t\t\tleave_days,\r\n\t\t\tlast_leave_day_increment,\r\n        } = this.state;\r\n\r\n        const { employeestypechoices } = this.props;\r\n        const { employeesgenderchoices } = this.props;\r\n        const { employeepaygrades } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Employee</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"first_name\"\r\n                                onChange={this.onChange}\r\n                                value={first_name}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">First Name</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"middle_name\"\r\n                                onChange={this.onChange}\r\n                                value={middle_name}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Middle Name</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"last_name\"\r\n                                onChange={this.onChange}\r\n                                value={last_name}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Last Name</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"phone\"\r\n                                onChange={this.onChange}\r\n                                value={phone}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Phone</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={email}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Email</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"id_number\"\r\n                                onChange={this.onChange}\r\n                                value={id_number}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Id Number</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"leave_days\"\r\n                                onChange={this.onChange}\r\n                                value={leave_days}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Leave Days</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Calendar\r\n                            showIcon={true}\r\n                            className=\"form-control\"\r\n                            name=\"last_leave_day_increment\"\r\n                            onChange={this.onChange}\r\n                            value={last_leave_day_increment}\r\n                            dateFormat=\"yy-mm-dd\"\r\n                        />\r\n                        <label htmlFor=\"inputtext\">Last Leave Day Increment</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Calendar\r\n                            showIcon={true}\r\n                            className=\"form-control\"\r\n                            name=\"date_of_birth\"\r\n                            onChange={this.onChange}\r\n                            value={date_of_birth}\r\n                            dateFormat=\"yy-mm-dd\"\r\n                        />\r\n                        <label htmlFor=\"inputtext\">Date Of Birth</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-12\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputTextarea\r\n                                name=\"address\"\r\n                                onChange={this.onChange}\r\n                                value={address}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Address</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>USES TIMESHEET :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.onUsesTimesheet}\r\n                            checked={this.state.uses_timesheet}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={category}\r\n                            onChange={this.onCategory}\r\n                            options={employeestypechoices}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT CATEGORY</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={gender}\r\n                            onChange={this.onGender}\r\n                            options={employeesgenderchoices}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT GENDER</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={pay_grade}\r\n                            onChange={this.onPayGrade}\r\n                            options={employeepaygrades}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT PAY GRADE</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    employeestypechoices: state.employeestypechoices.employeestypechoices,\r\n    employeesgenderchoices: state.employeesgenderchoices.employeesgenderchoices,\r\n    employeepaygrades: state.employeepaygrades.employeepaygrades\r\n})\r\nexport default connect(mapStateToProps, {getEmployeesTypeChoices, getEmployeesGenderChoices, getEmployeePaygrades, addEmployee})(EmployeeForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyShareholders} from '..//../actions/companyshareholders';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyShareholders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companyshareholders : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companyshareholders : PropTypes.array.isRequired,\r\n        getCompanyShareholders: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyShareholders();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Shareholders</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companyshareholders}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Shareholders found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companyshareholders: state.companyshareholders.companyshareholders\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyShareholders} ) (CompanyShareholders);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_SHAREHOLDER,\r\n        GET_COMPANY_SHAREHOLDERS,\r\n        GET_COMPANY_SHAREHOLDER,\r\n        DELETE_COMPANY_SHAREHOLDER\r\n    } from '../types/companyshareholderTypes';\r\nimport { companyshareholdersURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyShareholders =  () => dispatch => {\r\n    axios.get(companyshareholdersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_SHAREHOLDERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyShareholder = (id) => dispatch => {\r\n    axios.delete(companyshareholdersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_SHAREHOLDER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyShareholder = companyshareholder => dispatch => {\r\n    axios.post(companyshareholdersURL, companyshareholder)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_SHAREHOLDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyShareholder = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-shareholders/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_SHAREHOLDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyManagers} from '..//../actions/companymanagers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyManagers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companymanagers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companymanagers : PropTypes.array.isRequired,\r\n        getCompanyManagers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyManagers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Managers</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companymanagers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Managers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companymanagers: state.companymanagers.companymanagers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyManagers} ) (CompanyManagers);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_MANAGER,\r\n        GET_COMPANY_MANAGERS,\r\n        GET_COMPANY_MANAGER,\r\n        DELETE_COMPANY_MANAGER\r\n    } from '../types/companymanagerTypes';\r\nimport { companymanagersURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyManagers =  () => dispatch => {\r\n    axios.get(companymanagersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_MANAGERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyManager = (id) => dispatch => {\r\n    axios.delete(companymanagersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_MANAGER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyManager = companymanager => dispatch => {\r\n    axios.post(companymanagersURL, companymanager)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_MANAGER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyManager = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-managers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_MANAGER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyBookkeepers} from '..//../actions/companybookkeepers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyBookkeepers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companybookkeepers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companybookkeepers : PropTypes.array.isRequired,\r\n        getCompanyBookkeepers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyBookkeepers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Bookkeepers</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companybookkeepers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Bookkeepers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companybookkeepers: state.companybookkeepers.companybookkeepers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyBookkeepers} ) (CompanyBookkeepers);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_BOOKKEEPER,\r\n        GET_COMPANY_BOOKKEEPERS,\r\n        GET_COMPANY_BOOKKEEPER,\r\n        DELETE_COMPANY_BOOKKEEPER\r\n    } from '../types/companybookkeeperTypes';\r\nimport { companybookkeepersURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyBookkeepers =  () => dispatch => {\r\n    axios.get(companybookkeepersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_BOOKKEEPERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyBookkeeper = (id) => dispatch => {\r\n    axios.delete(companybookkeepersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_BOOKKEEPER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyBookkeeper = companybookkeeper => dispatch => {\r\n    axios.post(companybookkeepersURL, companybookkeeper)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_BOOKKEEPER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyBookkeeper = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-bookkeepers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_BOOKKEEPER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyPayrollOfficers} from '..//../actions/companypayrollofficers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyPayrollOfficers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companypayrollofficers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companypayrollofficers : PropTypes.array.isRequired,\r\n        getCompanyPayrollOfficers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyPayrollOfficers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Payroll Officers</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companypayrollofficers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Payroll Officers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companypayrollofficers: state.companypayrollofficers.companypayrollofficers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyPayrollOfficers} ) (CompanyPayrollOfficers);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_PAYROLL_OFFICER,\r\n        GET_COMPANY_PAYROLL_OFFICERS,\r\n        GET_COMPANY_PAYROLL_OFFICER,\r\n        DELETE_COMPANY_PAYROLL_OFFICER\r\n    } from '../types/companypayrollofficerTypes';\r\nimport { companypayrollofficersURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyPayrollOfficers =  () => dispatch => {\r\n    axios.get(companypayrollofficersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_PAYROLL_OFFICERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyPayrollOfficer = (id) => dispatch => {\r\n    axios.delete(companypayrollofficersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_PAYROLL_OFFICER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyPayrollOfficer = companypayrollofficer => dispatch => {\r\n    axios.post(companypayrollofficersURL, companypayrollofficer)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_PAYROLL_OFFICER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyPayrollOfficer = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-payroll-officers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_PAYROLL_OFFICER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyDrivers} from '..//../actions/companydrivers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyDrivers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companydrivers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companydrivers : PropTypes.array.isRequired,\r\n        getCompanyDrivers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyDrivers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Drivers</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companydrivers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Drivers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companydrivers: state.companydrivers.companydrivers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyDrivers} ) (CompanyDrivers);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_DRIVER,\r\n        GET_COMPANY_DRIVERS,\r\n        GET_COMPANY_DRIVER,\r\n        DELETE_COMPANY_DRIVER\r\n    } from '../types/companydriverTypes';\r\nimport { companydriversURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyDrivers =  () => dispatch => {\r\n    axios.get(companydriversURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_DRIVERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyDriver = (id) => dispatch => {\r\n    axios.delete(companydriversURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_DRIVER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyDriver = companydriver => dispatch => {\r\n    axios.post(companydriversURL, companydriver)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_DRIVER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyDriver = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-drivers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_DRIVER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyManufacturingPersonells} from '..//../actions/companymanufacturingpersonells';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyManufacturingPersonells extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companymanufacturingpersonells : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companymanufacturingpersonells : PropTypes.array.isRequired,\r\n        getCompanyManufacturingPersonells: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyManufacturingPersonells();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Manufacturing Personells</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companymanufacturingpersonells}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Manufacturing Personells found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companymanufacturingpersonells: state.companymanufacturingpersonells.companymanufacturingpersonells\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyManufacturingPersonells} ) (CompanyManufacturingPersonells);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_MANUFACTURING_PERSONELL,\r\n        GET_COMPANY_MANUFACTURING_PERSONELLS,\r\n        GET_COMPANY_MANUFACTURING_PERSONELL,\r\n        DELETE_COMPANY_MANUFACTURING_PERSONELL\r\n    } from '../types/companymanufacturingpersonellTypes';\r\nimport { companymanufacturingpersonellsURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyManufacturingPersonells =  () => dispatch => {\r\n    axios.get(companymanufacturingpersonellsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_MANUFACTURING_PERSONELLS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyManufacturingPersonell = (id) => dispatch => {\r\n    axios.delete(companymanufacturingpersonellsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_MANUFACTURING_PERSONELL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyManufacturingPersonell = companymanufacturingpersonell => dispatch => {\r\n    axios.post(companymanufacturingpersonellsURL, companymanufacturingpersonell)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_MANUFACTURING_PERSONELL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyManufacturingPersonell = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-manufacturing-personells/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_MANUFACTURING_PERSONELL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanyInventoryControllers} from '..//../actions/companyinventorycontrollers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanyInventoryControllers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companyinventorycontrollers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companyinventorycontrollers : PropTypes.array.isRequired,\r\n        getCompanyInventoryControllers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanyInventoryControllers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Inventory Controllers</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companyinventorycontrollers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Inventory Controllers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companyinventorycontrollers: state.companyinventorycontrollers.companyinventorycontrollers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanyInventoryControllers} ) (CompanyInventoryControllers);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_INVENTORY_CONTROLLER,\r\n        GET_COMPANY_INVENTORY_CONTROLLERS,\r\n        GET_COMPANY_INVENTORY_CONTROLLER,\r\n        DELETE_COMPANY_INVENTORY_CONTROLLER\r\n    } from '../types/companyinventorycontrollerTypes';\r\nimport { companyinventorycontrollersURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanyInventoryControllers =  () => dispatch => {\r\n    axios.get(companyinventorycontrollersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_INVENTORY_CONTROLLERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanyInventoryController = (id) => dispatch => {\r\n    axios.delete(companyinventorycontrollersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_INVENTORY_CONTROLLER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanyInventoryController = companyinventorycontroller => dispatch => {\r\n    axios.post(companyinventorycontrollersURL, companyinventorycontroller)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_INVENTORY_CONTROLLER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanyInventoryController = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-inventory-controllers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_INVENTORY_CONTROLLER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompanySalesreps} from '..//../actions/companysalesreps';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CompanySalesreps extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companysalesreps : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        companysalesreps : PropTypes.array.isRequired,\r\n        getCompanySalesreps: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompanySalesreps();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Company Salesreps</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.companysalesreps}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Company Salesreps found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee_number\"\r\n                        header=\"Employee Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"first_name\"\r\n                        header=\"First Name\"\r\n                        sortable filter filterPlaceholder=\"Search by First Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"last_name\"\r\n                        header=\"Last Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Last Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    companysalesreps: state.companysalesreps.companysalesreps\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompanySalesreps} ) (CompanySalesreps);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPANY_SALESREP,\r\n        GET_COMPANY_SALESREPS,\r\n        GET_COMPANY_SALESREP,\r\n        DELETE_COMPANY_SALESREP\r\n    } from '../types/companysalesrepTypes';\r\nimport { companysalesrepsURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompanySalesreps =  () => dispatch => {\r\n    axios.get(companysalesrepsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_COMPANY_SALESREPS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCompanySalesrep = (id) => dispatch => {\r\n    axios.delete(companysalesrepsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPANY_SALESREP,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompanySalesrep = companysalesrep => dispatch => {\r\n    axios.post(companysalesrepsURL, companysalesrep)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPANY_SALESREP,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCompanySalesrep = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/company-salesreps/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPANY_SALESREP,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getPendingEmployeeLeaves} from '..//../actions/pendingemployeeleaves';\r\nimport \"./form.css\";\r\n\r\n\r\nclass PendingEmployeeLeaves extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pendingemployeeleaves : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        pendingemployeeleaves : PropTypes.array.isRequired,\r\n        getPendingEmployeeLeaves: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPendingEmployeeLeaves();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Pending Employee Leaves</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.pendingemployeeleaves}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Pending Employee Leaves found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee\"\r\n                        header=\"Employee\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"category\"\r\n                        header=\"Category\"\r\n                        sortable filter filterPlaceholder=\"Search by Category\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"status\"\r\n                        header=\"Status\"\r\n                        sortable filter filterPlaceholder=\"Search by Status\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"start_date\"\r\n                        header=\"Start Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Start Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    pendingemployeeleaves: state.pendingemployeeleaves.pendingemployeeleaves\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPendingEmployeeLeaves} ) (PendingEmployeeLeaves);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_PENDING_EMPLOYEE_LEAVE,\r\n        GET_PENDING_EMPLOYEE_LEAVES,\r\n        GET_PENDING_EMPLOYEE_LEAVE,\r\n        DELETE_PENDING_EMPLOYEE_LEAVE\r\n    } from '../types/pendingemployeeleaveTypes';\r\nimport { pendingemployeeleavesURL } from '../constants';\r\n\r\n// Get\r\nexport const getPendingEmployeeLeaves =  () => dispatch => {\r\n    axios.get(pendingemployeeleavesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_PENDING_EMPLOYEE_LEAVES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deletePendingEmployeeLeave = (id) => dispatch => {\r\n    axios.delete(pendingemployeeleavesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PENDING_EMPLOYEE_LEAVE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addPendingEmployeeLeave = pendingemployeeleave => dispatch => {\r\n    axios.post(pendingemployeeleavesURL, pendingemployeeleave)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PENDING_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getPendingEmployeeLeave = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/pending-employee-leaves/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PENDING_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getAuthorisedEmployeeLeaves} from '..//../actions/authorisedemployeeleaves';\r\nimport \"./form.css\";\r\n\r\n\r\nclass AuthorisedEmployeeLeaves extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            authorisedemployeeleaves : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        authorisedemployeeleaves : PropTypes.array.isRequired,\r\n        getAuthorisedEmployeeLeaves: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthorisedEmployeeLeaves();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Authorised Employee Leaves</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.authorisedemployeeleaves}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Authorised Employee Leaves found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee\"\r\n                        header=\"Employee\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"category\"\r\n                        header=\"Category\"\r\n                        sortable filter filterPlaceholder=\"Search by Category\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"status\"\r\n                        header=\"Status\"\r\n                        sortable filter filterPlaceholder=\"Search by Status\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"start_date\"\r\n                        header=\"Start Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Start Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    authorisedemployeeleaves: state.authorisedemployeeleaves.authorisedemployeeleaves\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthorisedEmployeeLeaves} ) (AuthorisedEmployeeLeaves);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_AUTHORISED_EMPLOYEE_LEAVE,\r\n        GET_AUTHORISED_EMPLOYEE_LEAVES,\r\n        GET_AUTHORISED_EMPLOYEE_LEAVE,\r\n        DELETE_AUTHORISED_EMPLOYEE_LEAVE\r\n    } from '../types/authorisedemployeeleaveTypes';\r\nimport { authorisedemployeeleavesURL } from '../constants';\r\n\r\n// Get\r\nexport const getAuthorisedEmployeeLeaves =  () => dispatch => {\r\n    axios.get(authorisedemployeeleavesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_AUTHORISED_EMPLOYEE_LEAVES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteAuthorisedEmployeeLeave = (id) => dispatch => {\r\n    axios.delete(authorisedemployeeleavesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_AUTHORISED_EMPLOYEE_LEAVE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addAuthorisedEmployeeLeave = authorisedemployeeleave => dispatch => {\r\n    axios.post(authorisedemployeeleavesURL, authorisedemployeeleave)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_AUTHORISED_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getAuthorisedEmployeeLeave = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/authorised-employee-leaves/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_AUTHORISED_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getDeclinedEmployeeLeaves} from '..//../actions/declinedemployeeleaves';\r\nimport \"./form.css\";\r\n\r\n\r\nclass DeclinedEmployeeLeaves extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            declinedemployeeleaves : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        declinedemployeeleaves : PropTypes.array.isRequired,\r\n        getDeclinedEmployeeLeaves: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getDeclinedEmployeeLeaves();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Declined Employee Leaves</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.declinedemployeeleaves}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Declined Employee Leaves found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee\"\r\n                        header=\"Employee\"\r\n                        sortable filter filterPlaceholder=\"Search by Employee\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"category\"\r\n                        header=\"Category\"\r\n                        sortable filter filterPlaceholder=\"Search by Category\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"status\"\r\n                        header=\"Status\"\r\n                        sortable filter filterPlaceholder=\"Search by Status\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"start_date\"\r\n                        header=\"Start Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Start Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    declinedemployeeleaves: state.declinedemployeeleaves.declinedemployeeleaves\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDeclinedEmployeeLeaves} ) (DeclinedEmployeeLeaves);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_DECLINED_EMPLOYEE_LEAVE,\r\n        GET_DECLINED_EMPLOYEE_LEAVES,\r\n        GET_DECLINED_EMPLOYEE_LEAVE,\r\n        DELETE_DECLINED_EMPLOYEE_LEAVE\r\n    } from '../types/declinedemployeeleaveTypes';\r\nimport { declinedemployeeleavesURL } from '../constants';\r\n\r\n// Get\r\nexport const getDeclinedEmployeeLeaves =  () => dispatch => {\r\n    axios.get(declinedemployeeleavesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_DECLINED_EMPLOYEE_LEAVES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteDeclinedEmployeeLeave = (id) => dispatch => {\r\n    axios.delete(declinedemployeeleavesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_DECLINED_EMPLOYEE_LEAVE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addDeclinedEmployeeLeave = declinedemployeeleave => dispatch => {\r\n    axios.post(declinedemployeeleavesURL, declinedemployeeleave)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_DECLINED_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getDeclinedEmployeeLeave = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/declined-employee-leaves/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DECLINED_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_CONTRACT, EDIT_EMPLOYEE_CONTRACT, GET_EMPLOYEE_CONTRACTS, GET_EMPLOYEE_CONTRACT, DELETE_EMPLOYEE_CONTRACT } from '../types/employeecontractTypes';\r\nimport { employeecontractsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeeContracts=  () => dispatch => {\r\n    axios.get(employeecontractsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_CONTRACTS ,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeeContract = (id) => dispatch => {\r\n    axios.delete(employeecontractsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_CONTRACT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeeContract = employeecontract => dispatch => {\r\n    axios.post(employeecontractsURL, employeecontract)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_CONTRACT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeContract = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-contracts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_CONTRACT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeeContract = (id, employeecontract) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-contracts/${id}/`, employeecontract)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_CONTRACT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_DEPARTMENT, EDIT_EMPLOYEE_DEPARTMENT, GET_EMPLOYEE_DEPARTMENTS, GET_EMPLOYEE_DEPARTMENT, DELETE_EMPLOYEE_DEPARTMENT } from '../types/employeedepartmentTypes';\r\nimport { employeedepartmentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeeDepartments=  () => dispatch => {\r\n    axios.get(employeedepartmentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_DEPARTMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeeDepartment = (id) => dispatch => {\r\n    axios.delete(employeedepartmentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_DEPARTMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addEmployeeDepartment = employeedepartment => dispatch => {\r\n    axios.post(employeedepartmentsURL, employeedepartment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_DEPARTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeDepartment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-departments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_DEPARTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeeDepartment = (id, employeedepartment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-departments/${id}/`, employeedepartment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_DEPARTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeeContracts, addEmployeeContract, editEmployeeContract, deleteEmployeeContract } from '..//../actions/employeecontracts';\r\nimport { getEmployeeDepartments } from '..//../actions/employeedepartments';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getEmployeeCategoryChoices, getNatureOfEmploymentChoices } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\nclass EmployeeContracts extends Component {\r\n\r\n    emptyEmployeeContract = {\r\n        start_date: '',\r\n        department: null,\r\n        employee: null,\r\n        job_position: '',\r\n        end_of_probation: '',\r\n        termination_date: '',\r\n        employee_category: null,\r\n        nature_of_employment: null,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeecontracts: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeeContracts: null,\r\n            employeecontractDialog: false,\r\n            deleteEmployeeContractDialog: false,\r\n            deleteEmployeeContractsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                start_date: '',\r\n                department: null,\r\n                employee: null,\r\n                job_position: '',\r\n                end_of_probation: '',\r\n                termination_date: '',\r\n                employee_category: null,\r\n                nature_of_employment: null,\r\n            },\r\n            newData: {\r\n                start_date: '',\r\n                department: null,\r\n                employee: null,\r\n                job_position: '',\r\n                end_of_probation: '',\r\n                termination_date: '',\r\n                employee_category: null,\r\n                nature_of_employment: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeeContract = this.saveEmployeeContract.bind(this);\r\n        this.editEmployeeContract = this.editEmployeeContract.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeeContract = this.confirmDeleteEmployeeContract.bind(this);\r\n        this.deleteEmployeeContract = this.deleteEmployeeContract.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeeContracts = this.deleteSelectedEmployeeContracts.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeeContractDialog = this.hideDeleteEmployeeContractDialog.bind(this);\r\n        this.hideDeleteEmployeeContractsDialog = this.hideDeleteEmployeeContractsDialog.bind(this);\r\n        this.onDepartment = this.onDepartment.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n        this.onEmployeeCategory = this.onEmployeeCategory.bind(this);\r\n        this.onNatureOfEmployment = this.onNatureOfEmployment.bind(this);\r\n    }\r\n\r\n    onDepartment (e){\r\n        this.setState({department: e.value})\r\n    }\r\n\r\n    onEmployee (e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    onEmployeeCategory (e){\r\n        this.setState({employee_category: e.value})\r\n    }\r\n\r\n    onNatureOfEmployment (e){\r\n        this.setState({nature_of_employment: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeecontracts: PropTypes.array.isRequired,\r\n        getEmployeeContracts: PropTypes.func.isRequired,\r\n        addEmployeeContract: PropTypes.func.isRequired,\r\n        editEmployeeContract: PropTypes.func.isRequired,\r\n        deleteEmployeeContract: PropTypes.func.isRequired,\r\n        getEmployeeDepartments: PropTypes.func.isRequired,\r\n        getNatureOfEmploymentChoices: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getEmployeeCategoryChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeContracts()\r\n        this.props.getEmployees()\r\n        this.props.getNatureOfEmploymentChoices()\r\n        this.props.getEmployeeCategoryChoices()\r\n        this.props.getEmployeeDepartments()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                start_date: '',\r\n                department: null,\r\n                employee: null,\r\n                job_position: '',\r\n                end_of_probation: '',\r\n                termination_date: '',\r\n                employee_category: null,\r\n                nature_of_employment: null,\r\n            },\r\n            submitted: false,\r\n            employeecontractDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeecontractDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeeContractDialog() {\r\n        this.setState({ deleteEmployeeContractDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeeContractsDialog() {\r\n        this.setState({ deleteEmployeeContractsDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeeContract = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            start_date,\r\n            department,\r\n            employee,\r\n            job_position,\r\n            end_of_probation,\r\n            termination_date,\r\n            employee_category,\r\n            nature_of_employment,\r\n        } = this.state;\r\n        const employeecontract = {\r\n            start_date,\r\n            department,\r\n            employee,\r\n            job_position,\r\n            end_of_probation,\r\n            termination_date,\r\n            employee_category,\r\n            nature_of_employment,\r\n        };\r\n        this.props.addEmployeeContract(employeecontract);\r\n        this.setState({\r\n            start_date: '',\r\n            department: null,\r\n            employee: null,\r\n            job_position: '',\r\n            end_of_probation: '',\r\n            termination_date: '',\r\n            employee_category: null,\r\n            nature_of_employment: null,\r\n            employeecontractDialog: false\r\n        });\r\n        this.props.history.push('/employeecontracts');\r\n    };\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                start_date: '',\r\n                department: null,\r\n                employee: null,\r\n                job_position: '',\r\n                end_of_probation: '',\r\n                termination_date: '',\r\n                employee_category: null,\r\n                nature_of_employment: null,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeeContract(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            start_date,\r\n            department,\r\n            employee,\r\n            job_position,\r\n            end_of_probation,\r\n            termination_date,\r\n            employee_category,\r\n            nature_of_employment,\r\n\r\n        } = this.state.selectRow;\r\n        const employeecontract = {\r\n            start_date,\r\n            department,\r\n            employee,\r\n            job_position,\r\n            end_of_probation,\r\n            termination_date,\r\n            employee_category,\r\n            nature_of_employment,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeeContract(this.state.selectRow.id, employeecontract);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeeContract(employeecontract) {\r\n        this.setState({\r\n            employeecontract,\r\n            deleteEmployeeContractDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeeContract() {\r\n        this.props.deleteEmployeeContract();\r\n        this.setState({\r\n            deleteEmployeeContractDialog: false,\r\n            employeecontract: this.emptyEmployeeContract\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeeContractsDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeeContracts() {\r\n        this.props.deleteEmployeeContract();\r\n        this.setState({\r\n            deleteEmployeeContractsDialog: false,\r\n            selectedEmployeeContracts: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Contract</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE CONTRACT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeeContract(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeecontractDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeeContract} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeeContract}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeeContractsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeeContractsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeeContracts} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          start_date,\r\n          department,\r\n          employee,\r\n          job_position,\r\n          end_of_probation,\r\n          termination_date,\r\n          employee_category,\r\n          nature_of_employment,\r\n           } = this.state;\r\n\r\n        const {employeedepartments} = this.props;\r\n        const {natureofemploymentchoices} = this.props;\r\n        const { employeecategorychoices } = this.props;\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeecontracts}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeeContracts} onSelectionChange={e => this.setState({selectedEmployeeContracts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Contracts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"employee\"\r\n                            header=\"Employee\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Employee\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"job_position\"\r\n                            header=\"Job Position\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Job Position\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"employee_category\"\r\n                            header=\"Employee Category\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Employee Category\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"start_date\"\r\n                            header=\"Start Date\"\r\n                            sortable filter filterPlaceholder=\"Search by Start Date\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeecontractDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Contract Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeecontractDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"job_position\"\r\n                                    onChange={this.onChange}\r\n                                    value={job_position}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Job Position</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    name=\"start_date\"\r\n                                    onChange={this.onChange}\r\n                                    value={start_date}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Start Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    name=\"end_of_probation\"\r\n                                    onChange={this.onChange}\r\n                                    value={end_of_probation}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">End Of Probation</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    name=\"termination_date\"\r\n                                    onChange={this.onChange}\r\n                                    value={termination_date}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Termination Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={employee}\r\n                                onChange={this.onEmployee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={department}\r\n                                onChange={this.onDepartment}\r\n                                options={employeedepartments}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEE DEPARTMENT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={employee_category}\r\n                                onChange={this.onEmployeeCategory}\r\n                                options={employeecategorychoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEE CATEGORY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={nature_of_employment}\r\n                                onChange={this.onNatureOfEmployment}\r\n                                options={natureofemploymentchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT NATURE OF EMPLOYEE</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE CONTRACT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                job_position: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inJobPosition\"\r\n                                    value={this.state.selectRow.job_position}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inStartDate\"\r\n                                value={this.state.selectRow.start_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        start_date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inputtext\">Start Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inEndOfProbation\"\r\n                                value={this.state.selectRow.end_of_probation}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        end_of_probation: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inputtext\">End Of Probation</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inTerminationDate\"\r\n                                value={this.state.selectRow.termination_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        termination_date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inputtext\">Termination Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEmployee\"\r\n                                value={this.state.selectRow.employee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        employee: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inDepartment\"\r\n                                value={this.state.selectRow.department}\r\n                                options={employeedepartments}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        department: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEmployeeCategory\"\r\n                                value={this.state.selectRow.employee_category}\r\n                                options={employeecategorychoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        employee_category: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inNatureOfEmployment\"\r\n                                value={this.state.selectRow.nature_of_employment}\r\n                                options={natureofemploymentchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        nature_of_employment: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteEmployeeContractsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeeContractsDialogFooter} onHide={this.hideDeleteEmployeeContractsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeecontract && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeecontracts: state.employeecontracts.employeecontracts,\r\n    employeedepartments: state.employeedepartments.employeedepartments,\r\n    natureofemploymentchoices: state.natureofemploymentchoices.natureofemploymentchoices,\r\n    employeecategorychoices: state.employeecategorychoices.employeecategorychoices,\r\n    employees: state.employees.employees})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeeDepartments,\r\n    getEmployeeCategoryChoices,\r\n    getEmployees,\r\n    getNatureOfEmploymentChoices,\r\n    getEmployeeContracts,\r\n    editEmployeeContract,\r\n    deleteEmployeeContract,\r\n    addEmployeeContract} ) (EmployeeContracts);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeeContractsTerminations, addEmployeeContractsTermination, editEmployeeContractsTermination, deleteEmployeeContractsTermination } from '..//../actions/employeecontractsterminations';\r\nimport { getEmploymentContractTerminationReasons } from '..//../actions/choices';\r\nimport { getEmployeeContracts } from '..//../actions/employeecontracts';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\nclass EmployeeContractsTerminations extends Component {\r\n\r\n    emptyEmployeeContractsTermination = {\r\n        date: '',\r\n        reason_for_termination: null,\r\n        contract: null,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeecontractsterminations: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeeContracts: null,\r\n            employeecontractsterminationDialog: false,\r\n            deleteEmployeeContractsTerminationDialog: false,\r\n            deleteEmployeeContractsTerminationsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                date: '',\r\n                reason_for_termination: null,\r\n                contract: null,\r\n            },\r\n            newData: {\r\n                date: '',\r\n                reason_for_termination: null,\r\n                contract: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeeContractsTermination = this.saveEmployeeContractsTermination.bind(this);\r\n        this.editEmployeeContractsTermination = this.editEmployeeContractsTermination.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeeContractsTermination = this.confirmDeleteEmployeeContractsTermination.bind(this);\r\n        this.deleteEmployeeContractsTermination = this.deleteEmployeeContractsTermination.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeeContractsTerminations = this.deleteSelectedEmployeeContractsTerminations.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeeContractsTerminationDialog = this.hideDeleteEmployeeContractsTerminationDialog.bind(this);\r\n        this.hideDeleteEmployeeContractsTerminationsDialog = this.hideDeleteEmployeeContractsTerminationsDialog.bind(this);\r\n        this.onReasonForTermination = this.onReasonForTermination.bind(this);\r\n        this.onContract = this.onContract.bind(this);\r\n    }\r\n\r\n    onReasonForTermination (e){\r\n        this.setState({reason_for_termination: e.value})\r\n    }\r\n\r\n    onContract (e){\r\n        this.setState({contract: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeecontractsterminations: PropTypes.array.isRequired,\r\n        getEmployeeContractsTerminations: PropTypes.func.isRequired,\r\n        addEmployeeContractsTermination: PropTypes.func.isRequired,\r\n        editEmployeeContractsTermination: PropTypes.func.isRequired,\r\n        deleteEmployeeContractsTermination: PropTypes.func.isRequired,\r\n        getEmployeeContracts: PropTypes.func.isRequired,\r\n        getEmploymentContractTerminationReasons: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeContractsTerminations()\r\n        this.props.getEmployeeContracts()\r\n        this.props.getEmploymentContractTerminationReasons()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                date: '',\r\n                reason_for_termination: null,\r\n                contract: null,\r\n            },\r\n            submitted: false,\r\n            employeecontractsterminationDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeecontractsterminationDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeeContractsTerminationDialog() {\r\n        this.setState({ deleteEmployeeContractsTerminationDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeeContractsTerminationsDialog() {\r\n        this.setState({ deleteEmployeeContractsTerminationsDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeeContractsTermination = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            date,\r\n            reason_for_termination,\r\n            contract,\r\n        } = this.state;\r\n        const employeecontractstermination = {\r\n            date,\r\n            reason_for_termination,\r\n            contract,\r\n        };\r\n        this.props.addEmployeeContractsTermination(employeecontractstermination);\r\n        this.setState({\r\n            date: '',\r\n            reason_for_termination: null,\r\n            contract: null,\r\n            employeecontractsterminationDialog: false\r\n        });\r\n        this.props.history.push('/employeecontractsterminations');\r\n    };\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                reason_for_termination: null,\r\n                contract: null,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeeContractsTermination(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            date,\r\n            reason_for_termination,\r\n            contract,\r\n        } = this.state.selectRow;\r\n        const employeecontractstermination = {\r\n            date,\r\n            reason_for_termination,\r\n            contract,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeeContractsTermination(this.state.selectRow.id, employeecontractstermination);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeeContractsTermination(employeecontractstermination) {\r\n        this.setState({\r\n            employeecontractstermination,\r\n            deleteEmployeeContractsTerminationDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeeContractsTermination() {\r\n        this.props.deleteEmployeeContractsTermination();\r\n        this.setState({\r\n            deleteEmployeeContractsTerminationDialog: false,\r\n            employeecontractstermination: this.emptyEmployeeContractsTermination\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeeContractsTerminationsDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeeContractsTerminations() {\r\n        this.props.deleteEmployeeContractsTermination();\r\n        this.setState({\r\n            deleteEmployeeContractsTerminationsDialog: false,\r\n            selectedEmployeeContracts: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Contracts Termination</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE CONTRACT TERMINATION\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeeContractsTermination(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeecontractsterminationDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeeContractsTermination} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeeContractsTermination}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeeContractsTerminationsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeeContractsTerminationsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeeContractsTerminations} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            date,\r\n            reason_for_termination,\r\n            contract,\r\n        } = this.state;\r\n\r\n        const {employeecontracts} = this.props;\r\n        const {employmentcontractterminationreasons} = this.props;\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeecontractsterminations}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeeContracts} onSelectionChange={e => this.setState({selectedEmployeeContracts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Contracts Terminations found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"contract\"\r\n                            header=\"Contract\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Contract\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"date\"\r\n                            header=\"Date\"\r\n                            sortable filter filterPlaceholder=\"Search by Date\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeecontractsterminationDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Contracts Termination Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeecontractsterminationDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    name=\"date\"\r\n                                    onChange={this.onChange}\r\n                                    value={date}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={contract}\r\n                                onChange={this.onContract}\r\n                                options={employeecontracts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CONTRACT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={reason_for_termination}\r\n                                onChange={this.onReasonForTermination}\r\n                                options={employmentcontractterminationreasons}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT REASONS FOR TERMINATION</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE CONTRACT TERMINATION\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inDate\"\r\n                                value={this.state.selectRow.date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inputtext\">Date</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inContract\"\r\n                                value={this.state.selectRow.contract}\r\n                                options={employeecontracts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        contract: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inReasonForTermination\"\r\n                                value={this.state.selectRow.reason_for_termination}\r\n                                options={employmentcontractterminationreasons}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        reason_for_termination: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteEmployeeContractsTerminationsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeeContractsTerminationsDialogFooter} onHide={this.hideDeleteEmployeeContractsTerminationsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeecontractstermination && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeecontractsterminations: state.employeecontractsterminations.employeecontractsterminations,\r\n    employeecontracts: state.employeecontracts.employeecontracts,\r\n    employmentcontractterminationreasons: state.employmentcontractterminationreasons.employmentcontractterminationreasons,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeeContracts,\r\n    getEmploymentContractTerminationReasons,\r\n    getEmployeeContractsTerminations,\r\n    editEmployeeContractsTermination,\r\n    deleteEmployeeContractsTermination,\r\n    addEmployeeContractsTermination} ) (EmployeeContractsTerminations);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_CONTRACTS_TERMINATION, EDIT_EMPLOYEE_CONTRACTS_TERMINATION, GET_EMPLOYEE_CONTRACTS_TERMINATIONS, GET_EMPLOYEE_CONTRACTS_TERMINATION, DELETE_EMPLOYEE_CONTRACTS_TERMINATION } from '../types/employeecontractsterminationTypes';\r\nimport { employeecontractsterminationsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeeContractsTerminations=  () => dispatch => {\r\n    axios.get(employeecontractsterminationsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_CONTRACTS_TERMINATIONS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeeContractsTermination = (id) => dispatch => {\r\n    axios.delete(employeecontractsterminationsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_CONTRACTS_TERMINATION,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeeContractsTermination = employeecontractstermination => dispatch => {\r\n    axios.post(employeecontractsterminationsURL, employeecontractstermination)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_CONTRACTS_TERMINATION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeContractsTermination = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-contracts-terminations/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_CONTRACTS_TERMINATION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeeContractsTermination = (id, employeecontractstermination) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-contracts-terminations/${id}/`, employeecontractstermination)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_CONTRACTS_TERMINATION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeeDepartments, addEmployeeDepartment, editEmployeeDepartment, deleteEmployeeDepartment } from '..//../actions/employeedepartments';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport \"./form.css\";\r\n\r\nclass EmployeeDepartments extends Component {\r\n\r\n    emptyEmployeeDepartment = {\r\n        name: '',\r\n        description: '',\r\n        manager: null,\r\n        employee: null,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeedepartments: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeeDepartments: null,\r\n            employeedepartmentDialog: false,\r\n            deleteEmployeeDepartmentDialog: false,\r\n            deleteEmployeeDepartmentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                employee: null,\r\n            },\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                employee: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeeDepartment = this.saveEmployeeDepartment.bind(this);\r\n        this.editEmployeeDepartment = this.editEmployeeDepartment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeeDepartment = this.confirmDeleteEmployeeDepartment.bind(this);\r\n        this.deleteEmployeeDepartment = this.deleteEmployeeDepartment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeeDepartments = this.deleteSelectedEmployeeDepartments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeeDepartmentDialog = this.hideDeleteEmployeeDepartmentDialog.bind(this);\r\n        this.hideDeleteEmployeeDepartmentsDialog = this.hideDeleteEmployeeDepartmentsDialog.bind(this);\r\n        this.onManager = this.onManager.bind(this);\r\n        this.onEmployees = this.onEmployees.bind(this);\r\n    }\r\n\r\n    onManager (e){\r\n        this.setState({manager: e.value})\r\n    }\r\n\r\n    onEmployees (e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeedepartments : PropTypes.array.isRequired,\r\n        getEmployeeDepartments: PropTypes.func.isRequired,\r\n        addEmployeeDepartment: PropTypes.func.isRequired,\r\n        editEmployeeDepartment: PropTypes.func.isRequired,\r\n        deleteEmployeeDepartment: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                employee: null,\r\n            },\r\n            submitted: false,\r\n            employeedepartmentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeedepartmentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeeDepartmentDialog() {\r\n        this.setState({ deleteEmployeeDepartmentDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeeDepartmentsDialog() {\r\n        this.setState({ deleteEmployeeDepartmentsDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeDepartments();\r\n        this.props.getEmployees()\r\n    }\r\n\r\n\r\n    saveEmployeeDepartment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            employee,\r\n        } = this.state;\r\n        const employeedepartment = {\r\n            name,\r\n            description,\r\n            manager,\r\n            employee,\r\n        };\r\n        this.props.addEmployeeDepartment(employeedepartment);\r\n        this.setState({\r\n            name: '',\r\n            description: '',\r\n            manager: '',\r\n            employee: '',\r\n            employeedepartmentDialog: false\r\n        });\r\n        this.props.history.push('/employeedepartments');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                manager: '',\r\n                employee: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeeDepartment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            employee,\r\n        } = this.state.selectRow;\r\n        const employeedepartment = {\r\n            name,\r\n            description,\r\n            manager,\r\n            employee,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeeDepartment(this.state.selectRow.id, employeedepartment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeeDepartment(employeedepartment) {\r\n        this.setState({\r\n            employeedepartment,\r\n            deleteEmployeeDepartmentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeeDepartment() {\r\n        this.props.deleteEmployeeDepartment();\r\n        this.setState({\r\n            deleteEmployeeDepartmentDialog: false,\r\n            employeedepartment: this.emptyEmployeeDepartment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeeDepartmentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeeDepartments() {\r\n        this.props.deleteEmployeeDepartment();\r\n        this.setState({\r\n            deleteEmployeeDepartmentsDialog: false,\r\n            selectedEmployeeDepartments: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Department</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE DEPARTMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeeDepartment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeedepartmentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeeDepartment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeeDepartment}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeeDepartmentsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeeDepartmentsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeeDepartments} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          name,\r\n          description,\r\n          manager,\r\n          employee,\r\n        } = this.state;\r\n\r\n        const {employees} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeedepartments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeeDepartments} onSelectionChange={e => this.setState({selectedEmployeeDepartments: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Departments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"manager\"\r\n                            header=\"Manager\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Manager\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeedepartmentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Department Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeedepartmentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={manager}\r\n                                        onChange={this.onManager}\r\n                                        options={employees}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT MANAGER</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={employee}\r\n                                        onChange={this.onEmployee}\r\n                                        options={employees}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT EMPLOYEE</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE EMPLOYEE DEPARTMENT\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"ui-float-label\">\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inManager\"\r\n                            value={this.state.selectRow.manager}\r\n                            options={employees}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    manager: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inEmployee\"\r\n                            value={this.state.selectRow.employee}\r\n                            options={employees}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    employee: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeeDepartmentsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeeDepartmentsDialogFooter} onHide={this.hideDeleteEmployeeDepartmentsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeedepartment && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeedepartments: state.employeedepartments.employeedepartments,\r\n    employees: state.employees.employees,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeeDepartments,\r\n    getEmployees,\r\n    addEmployeeDepartment,\r\n    editEmployeeDepartment,\r\n    deleteEmployeeDepartment }\r\n) (EmployeeDepartments);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeeLeaves, addEmployeeLeave, editEmployeeLeave, deleteEmployeeLeave } from '..//../actions/employeeleaves';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getEmployeeLeaveCategoryChoices, getEmployeeLeaveStatusChoices } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\nclass EmployeeLeaves extends Component {\r\n\r\n    emptyEmployeeLeave = {\r\n        start_date: '',\r\n        end_date: '',\r\n        employee: null,\r\n        category: null,\r\n        status: null,\r\n        authorized_by: null,\r\n        notes: '',\r\n        recorded: false,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeeleaves: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeeLeaves: null,\r\n            employeeleaveDialog: false,\r\n            deleteEmployeeLeaveDialog: false,\r\n            deleteEmployeeLeavesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                start_date: '',\r\n                end_date: '',\r\n                employee: null,\r\n                category: null,\r\n                status: null,\r\n                authorized_by: null,\r\n                notes: '',\r\n                recorded: false,\r\n            },\r\n            newData: {\r\n                start_date: '',\r\n                end_date: '',\r\n                employee: null,\r\n                category: null,\r\n                status: null,\r\n                authorized_by: null,\r\n                notes: '',\r\n                recorded: false,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeeLeave = this.saveEmployeeLeave.bind(this);\r\n        this.editEmployeeLeave = this.editEmployeeLeave.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeeLeave = this.confirmDeleteEmployeeLeave.bind(this);\r\n        this.deleteEmployeeLeave = this.deleteEmployeeLeave.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeeLeaves = this.deleteSelectedEmployeeLeaves.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeeLeaveDialog = this.hideDeleteEmployeeLeaveDialog.bind(this);\r\n        this.hideDeleteEmployeeLeavesDialog = this.hideDeleteEmployeeLeavesDialog.bind(this);\r\n        this.onCategory = this.onCategory.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n        this.onStatus = this.onStatus.bind(this);\r\n        this.onAuthorizedBy = this.onAuthorizedBy.bind(this);\r\n        this.onRecorded = this.onRecorded.bind(this);\r\n    }\r\n\r\n    onRecorded() {\r\n        this.setState({\r\n          recorded: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onCategory (e){\r\n        this.setState({category: e.value})\r\n    }\r\n\r\n    onEmployee (e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    onStatus (e){\r\n        this.setState({status: e.value})\r\n    }\r\n\r\n    onAuthorizedBy (e){\r\n        this.setState({authorized_by: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeeleaves : PropTypes.array.isRequired,\r\n        getEmployeeLeaves: PropTypes.func.isRequired,\r\n        addEmployeeLeave: PropTypes.func.isRequired,\r\n        editEmployeeLeave: PropTypes.func.isRequired,\r\n        deleteEmployeeLeave: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getEmployeeLeaveStatusChoices: PropTypes.func.isRequired,\r\n        getEmployeeLeaveCategoryChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                start_date: '',\r\n                end_date: '',\r\n                employee: null,\r\n                category: null,\r\n                status: null,\r\n                authorized_by: null,\r\n                notes: '',\r\n                recorded: false,\r\n            },\r\n            submitted: false,\r\n            employeeleaveDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeeleaveDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeeLeaveDialog() {\r\n        this.setState({ deleteEmployeeLeaveDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeeLeavesDialog() {\r\n        this.setState({ deleteEmployeeLeavesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeLeaves()\r\n        this.props.getEmployees()\r\n        this.props.getEmployeeLeaveCategoryChoices()\r\n        this.props.getEmployeeLeaveStatusChoices()\r\n    }\r\n\r\n\r\n    saveEmployeeLeave = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            start_date,\r\n            end_date,\r\n            employee,\r\n            category,\r\n            status,\r\n            authorized_by,\r\n            notes,\r\n            recorded,\r\n        } = this.state;\r\n        const employeeleave = {\r\n            start_date,\r\n            end_date,\r\n            employee,\r\n            category,\r\n            status,\r\n            authorized_by,\r\n            notes,\r\n            recorded,\r\n        };\r\n        this.props.addEmployeeLeave(employeeleave);\r\n        this.setState({\r\n            start_date: '',\r\n            end_date: '',\r\n            employee: '',\r\n            category: '',\r\n            status: '',\r\n            authorized_by: '',\r\n            notes: '',\r\n            recorded: true,\r\n            employeeleaveDialog: false\r\n        });\r\n        this.props.history.push('/employeeleaves');\r\n    };\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                start_date: '',\r\n                end_date: '',\r\n                employee: '',\r\n                category: '',\r\n                status: '',\r\n                authorized_by: '',\r\n                notes: '',\r\n                recorded: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeeLeave(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            start_date,\r\n            end_date,\r\n            employee,\r\n            category,\r\n            status,\r\n            authorized_by,\r\n            notes,\r\n            recorded,\r\n        } = this.state.selectRow;\r\n        const employeeleave = {\r\n            start_date,\r\n            end_date,\r\n            employee,\r\n            category,\r\n            status,\r\n            authorized_by,\r\n            notes,\r\n            recorded,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeeLeave(this.state.selectRow.id, employeeleave);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeeLeave(employeeleave) {\r\n        this.setState({\r\n            employeeleave,\r\n            deleteEmployeeLeaveDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeeLeave() {\r\n        this.props.deleteEmployeeLeave();\r\n        this.setState({\r\n            deleteEmployeeLeaveDialog: false,\r\n            employeeleave: this.emptyEmployeeLeave\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeeLeavesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeeLeaves() {\r\n        this.props.deleteEmployeeLeave();\r\n        this.setState({\r\n            deleteEmployeeLeavesDialog: false,\r\n            selectedEmployeeLeaves: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Leave</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE LEAVE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeeLeave(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeeleaveDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeeLeave} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeeLeave}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeeLeavesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeeLeavesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeeLeaves} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          start_date,\r\n          end_date,\r\n          employee,\r\n          category,\r\n          status,\r\n          authorized_by,\r\n          notes,\r\n        } = this.state;\r\n\r\n        const {employeeleavecategorychoices} = this.props;\r\n        const { employeeleavestatuschoices } = this.props;\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeeleaves}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeeLeaves} onSelectionChange={e => this.setState({selectedEmployeeLeaves: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Leaves found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"employee\"\r\n                            header=\"Employee\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Employee\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"category\"\r\n                            header=\"Category\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Category\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"status\"\r\n                            header=\"Status\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Status\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"start_date\"\r\n                            header=\"Start Date\"\r\n                            sortable filter filterPlaceholder=\"Search by Start Date\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeeleaveDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Leave Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeeleaveDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Calendar\r\n                                        showIcon={true}\r\n                                        name=\"start_date\"\r\n                                        onChange={this.onChange}\r\n                                        value={start_date}\r\n                                        dateFormat=\"yy-mm-dd\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Start Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Calendar\r\n                                        showIcon={true}\r\n                                        name=\"end_date\"\r\n                                        onChange={this.onChange}\r\n                                        value={end_date}\r\n                                        dateFormat=\"yy-mm-dd\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">End Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"notes\"\r\n                                        onChange={this.onChange}\r\n                                        value={notes}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Notes</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={employee}\r\n                                        onChange={this.onEmployee}\r\n                                        options={employees}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT EMPLOYEE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={authorized_by}\r\n                                        onChange={this.onAuthorizedBy}\r\n                                        options={employees}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT AUTHORIZED BY</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={category}\r\n                                        onChange={this.onCategory}\r\n                                        options={employeeleavecategorychoices}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"value\"\r\n                                        optionValue=\"key\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT CATEGORY</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={status}\r\n                                        onChange={this.onStatus}\r\n                                        options={employeeleavestatuschoices}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"value\"\r\n                                        optionValue=\"key\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT STATUS</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                                <label>RECORDED :</label>\r\n                                <Checkbox\r\n                                    inputId=\"working\"\r\n                                    onChange={this.onRecorded}\r\n                                    checked={this.state.recorded}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE EMPLOYEE LEAVE\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inStartDate\"\r\n                                value={this.state.selectRow.start_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        start_date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inEndDate\"\r\n                                value={this.state.selectRow.end_date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        end_date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <span className=\"ui-float-label\">\r\n                            <InputTextarea id=\"inNotes\" value={this.state.selectRow.notes}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        notes: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEmployee\"\r\n                                value={this.state.selectRow.employee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        employee: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inAuthorizedBy\"\r\n                                value={this.state.selectRow.authorized_by}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        authorized_by: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCategory\"\r\n                                value={this.state.selectRow.category}\r\n                                options={employeeleavecategorychoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        category: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCategory\"\r\n                                value={this.state.selectRow.status}\r\n                                options={employeeleavestatuschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        status: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>RECORDED :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            recorded: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.recorded}\r\n                            />\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeeLeavesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeeLeavesDialogFooter} onHide={this.hideDeleteEmployeeLeavesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeeleave && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeeleaves: state.employeeleaves.employeeleaves,\r\n    employeeleavestatuschoices: state.employeeleavestatuschoices.employeeleavestatuschoices,\r\n    employeeleavecategorychoices: state.employeeleavecategorychoices.employeeleavecategorychoices,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeeLeaves,\r\n    getEmployeeLeaveCategoryChoices,\r\n    getEmployees,\r\n    getEmployeeLeaveStatusChoices,\r\n    addEmployeeLeave,\r\n    editEmployeeLeave,\r\n    deleteEmployeeLeave }\r\n) (EmployeeLeaves);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_LEAVE, EDIT_EMPLOYEE_LEAVE, GET_EMPLOYEE_LEAVES, GET_EMPLOYEE_LEAVE, DELETE_EMPLOYEE_LEAVE } from '../types/employeeleaveTypes';\r\nimport { employeeleavesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeeLeaves=  () => dispatch => {\r\n    axios.get(employeeleavesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_LEAVES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeeLeave = (id) => dispatch => {\r\n    axios.delete(employeeleavesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_LEAVE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeeLeave = employeeleave => dispatch => {\r\n    axios.post(employeeleavesURL, employeeleave)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeLeave = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-leaves/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeeLeave = (id, employeeleave) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-leaves/${id}/`, employeeleave)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_LEAVE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAY_COMMISSION_RULE, EDIT_EMPLOYEE_PAY_COMMISSION_RULE, GET_EMPLOYEE_PAY_COMMISSION_RULES, GET_EMPLOYEE_PAY_COMMISSION_RULE, DELETE_EMPLOYEE_PAY_COMMISSION_RULE } from '../types/employeepaycommissionruleTypes';\r\nimport { employeepaycommissionrulesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePayCommissionRules=  () => dispatch => {\r\n    axios.get(employeepaycommissionrulesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAY_COMMISSION_RULES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePayCommissionRule = (id) => dispatch => {\r\n    axios.delete(employeepaycommissionrulesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAY_COMMISSION_RULE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePayCommissionRule = employeepaycommissionrule => dispatch => {\r\n    axios.post(employeepaycommissionrulesURL, employeepaycommissionrule)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAY_COMMISSION_RULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayCommissionRule = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-pay-commission-rules/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAY_COMMISSION_RULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeePayCommissionRule = (id, employeepaycommissionrule) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-pay-commission-rules/${id}/`, employeepaycommissionrule)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_PAY_COMMISSION_RULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_ALLOWANCE, EDIT_EMPLOYEE_ALLOWANCE, GET_EMPLOYEE_ALLOWANCES, GET_EMPLOYEE_ALLOWANCE, DELETE_EMPLOYEE_ALLOWANCE } from '../types/employeeallowanceTypes';\r\nimport { employeeallowancesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeeAllowances=  () => dispatch => {\r\n    axios.get(employeeallowancesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_ALLOWANCES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeeAllowance = (id) => dispatch => {\r\n    axios.delete(employeeallowancesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_ALLOWANCE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeeAllowance = employeeallowance => dispatch => {\r\n    axios.post(employeeallowancesURL, employeeallowance)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_ALLOWANCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Get\r\nexport const getEmployeeAllowance = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-allowances/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_ALLOWANCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeeAllowance = (id, employeeallowance) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-allowances/${id}/`, employeeallowance)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_ALLOWANCE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAY_DEDUCTION, EDIT_EMPLOYEE_PAY_DEDUCTION, GET_EMPLOYEE_PAY_DEDUCTIONS, GET_EMPLOYEE_PAY_DEDUCTION, DELETE_EMPLOYEE_PAY_DEDUCTION } from '../types/employeepaydeductionTypes';\r\nimport { employeepaydeductionsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePayDeductions=  () => dispatch => {\r\n    axios.get(employeepaydeductionsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAY_DEDUCTIONS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePayDeduction = (id) => dispatch => {\r\n    axios.delete(employeepaydeductionsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAY_DEDUCTION,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePayDeduction = employeepaydeduction => dispatch => {\r\n    axios.post(employeepaydeductionsURL, employeepaydeduction)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAY_DEDUCTION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayDeduction = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-pay-deductions/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAY_DEDUCTION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeePayDeduction = (id, employeepaydeduction) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-pay-deductions/${id}/`, employeepaydeduction)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_PAY_DEDUCTION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAYROLL_TAX, GET_EMPLOYEE_PAYROLL_TAXES, EDIT_EMPLOYEE_PAYROLL_TAX, GET_EMPLOYEE_PAYROLL_TAX, DELETE_EMPLOYEE_PAYROLL_TAX } from '../types/employeepayrolltaxeTypes';\r\nimport { employeepayrolltaxesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePayrollTaxes=  () => dispatch => {\r\n    axios.get(employeepayrolltaxesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAYROLL_TAXES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePayrollTax = (id) => dispatch => {\r\n    axios.delete(employeepayrolltaxesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAYROLL_TAX,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePayrollTax = employeepayrolltax => dispatch => {\r\n    axios.post(employeepayrolltaxesURL, employeepayrolltax)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAYROLL_TAX,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayrollTax = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-payroll-taxes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYROLL_TAX,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeePayrollTax = (id, employeepayrolltax) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-payroll-taxes/${id}/`, employeepayrolltax)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_PAYROLL_TAX,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeePaygrades, addEmployeePaygrade, editEmployeePaygrade, deleteEmployeePaygrade } from '..//../actions/employeepaygrades';\r\nimport { getEmployeePayCommissionRules } from '..//../actions/employeepaycommissionrules';\r\nimport { getEmployeeAllowances } from '..//../actions/employeeallowances';\r\nimport { getEmployeePayDeductions } from '..//../actions/employeepaydeductions';\r\nimport { getEmployeePayrollTaxes } from '..//../actions/employeepayrolltaxes';\r\nimport { getEmployeePayFrequencies, getEmployeeLunchChoices } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\nclass EmployeePaygrades extends Component {\r\n\r\n    emptyEmployeePaygrade = {\r\n        name: '',\r\n        salary: '',\r\n        pay_frequency: null,\r\n        monthly_leave_days: '',\r\n        hourly_rate: '',\r\n        overtime_rate: '',\r\n        overtime_two_rate: '',\r\n        commission: null,\r\n        allowances: null,\r\n        deductions: null,\r\n        payroll_taxes: null,\r\n        subtract_lunch_time_from_working_hours: false,\r\n        lunch_duration: null,\r\n        maximum_leave_days: '',\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepaygrades: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePaygrades: null,\r\n            employeepaygradeDialog: false,\r\n            deleteEmployeePaygradeDialog: false,\r\n            deleteEmployeePaygradesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                salary: '',\r\n                pay_frequency: null,\r\n                monthly_leave_days: '',\r\n                hourly_rate: '',\r\n                overtime_rate: '',\r\n                overtime_two_rate: '',\r\n                commission: null,\r\n                allowances: null,\r\n                deductions: null,\r\n                payroll_taxes: null,\r\n                subtract_lunch_time_from_working_hours: false,\r\n                lunch_duration: null,\r\n                maximum_leave_days: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                salary: '',\r\n                pay_frequency: null,\r\n                monthly_leave_days: '',\r\n                hourly_rate: '',\r\n                overtime_rate: '',\r\n                overtime_two_rate: '',\r\n                commission: null,\r\n                allowances: null,\r\n                deductions: null,\r\n                payroll_taxes: null,\r\n                subtract_lunch_time_from_working_hours: false,\r\n                lunch_duration: null,\r\n                maximum_leave_days: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeePaygrade = this.saveEmployeePaygrade.bind(this);\r\n        this.editEmployeePaygrade = this.editEmployeePaygrade.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeePaygrade = this.confirmDeleteEmployeePaygrade.bind(this);\r\n        this.deleteEmployeePaygrade = this.deleteEmployeePaygrade.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeePaygrades = this.deleteSelectedEmployeePaygrades.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeePaygradeDialog = this.hideDeleteEmployeePaygradeDialog.bind(this);\r\n        this.hideDeleteEmployeePaygradesDialog = this.hideDeleteEmployeePaygradesDialog.bind(this);\r\n        this.onPayFrequency = this.onPayFrequency.bind(this);\r\n        this.onCommission = this.onCommission.bind(this);\r\n        this.onAllowances = this.onAllowances.bind(this);\r\n        this.onDeductions = this.onDeductions.bind(this);\r\n        this.onPayrollTaxes = this.onPayrollTaxes.bind(this);\r\n        this.onLunchDuration = this.onLunchDuration.bind(this);\r\n        this.onCheck = this.onCheck.bind(this);\r\n    }\r\n\r\n    onCheck() {\r\n        this.setState({\r\n          subtract_lunch_time_from_working_hours: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onPayFrequency (e){\r\n        this.setState({pay_frequency: e.value})\r\n    }\r\n\r\n    onCommission (e){\r\n        this.setState({commission: e.value})\r\n    }\r\n\r\n    onAllowances (e){\r\n        this.setState({allowances: e.value})\r\n    }\r\n\r\n    onDeductions (e){\r\n        this.setState({deductions: e.value})\r\n    }\r\n\r\n    onPayrollTaxes (e){\r\n        this.setState({payroll_taxes: e.value})\r\n    }\r\n\r\n    onLunchDuration (e){\r\n        this.setState({lunch_duration: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepaygrades : PropTypes.array.isRequired,\r\n        getEmployeePaygrades: PropTypes.func.isRequired,\r\n        addEmployeePaygrade: PropTypes.func.isRequired,\r\n        editEmployeePaygrade: PropTypes.func.isRequired,\r\n        deleteEmployeePaygrade: PropTypes.func.isRequired,\r\n        getEmployeePayCommissionRules: PropTypes.func.isRequired,\r\n        getEmployeeAllowances: PropTypes.func.isRequired,\r\n        getEmployeePayDeductions: PropTypes.func.isRequired,\r\n        getEmployeePayrollTaxes: PropTypes.func.isRequired,\r\n        getEmployeePayFrequencies: PropTypes.func.isRequired,\r\n        getEmployeeLunchChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePaygrades()\r\n        this.props.getEmployeePayCommissionRules()\r\n        this.props.getEmployeeAllowances()\r\n        this.props.getEmployeePayDeductions()\r\n        this.props.getEmployeePayrollTaxes()\r\n        this.props.getEmployeePayFrequencies()\r\n        this.props.getEmployeeLunchChoices()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                salary: '',\r\n                pay_frequency: null,\r\n                monthly_leave_days: '',\r\n                hourly_rate: '',\r\n                overtime_rate: '',\r\n                overtime_two_rate: '',\r\n                commission: null,\r\n                allowances: null,\r\n                deductions: null,\r\n                payroll_taxes: null,\r\n                subtract_lunch_time_from_working_hours: false,\r\n                lunch_duration: null,\r\n                maximum_leave_days: '',\r\n            },\r\n            submitted: false,\r\n            employeepaygradeDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeepaygradeDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeePaygradeDialog() {\r\n        this.setState({ deleteEmployeePaygradeDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeePaygradesDialog() {\r\n        this.setState({ deleteEmployeePaygradesDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeePaygrade = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            salary,\r\n            pay_frequency,\r\n            monthly_leave_days,\r\n            hourly_rate,\r\n            overtime_rate,\r\n            overtime_two_rate,\r\n            commission,\r\n            allowances,\r\n            deductions,\r\n            payroll_taxes,\r\n            subtract_lunch_time_from_working_hours,\r\n            lunch_duration,\r\n            maximum_leave_days,\r\n        } = this.state;\r\n        const employeepaygrade = {\r\n            name,\r\n            salary,\r\n            pay_frequency,\r\n            monthly_leave_days,\r\n            hourly_rate,\r\n            overtime_rate,\r\n            overtime_two_rate,\r\n            commission,\r\n            allowances,\r\n            deductions,\r\n            payroll_taxes,\r\n            subtract_lunch_time_from_working_hours,\r\n            lunch_duration,\r\n            maximum_leave_days,\r\n        };\r\n        this.props.addEmployeePaygrade(employeepaygrade);\r\n        this.setState({\r\n            name: '',\r\n            salary: '',\r\n            pay_frequency: '',\r\n            monthly_leave_days: '',\r\n            hourly_rate: '',\r\n            overtime_rate: '',\r\n            overtime_two_rate: '',\r\n            commission: '',\r\n            allowances: '',\r\n            deductions: '',\r\n            payroll_taxes: '',\r\n            subtract_lunch_time_from_working_hours: true,\r\n            lunch_duration: '',\r\n            maximum_leave_days: '',\r\n            employeepaygradeDialog: false\r\n        });\r\n        this.props.history.push('/employeepaygrades');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                salary: '',\r\n                pay_frequency: null,\r\n                monthly_leave_days: '',\r\n                hourly_rate: '',\r\n                overtime_rate: '',\r\n                overtime_two_rate: '',\r\n                commission: null,\r\n                allowances: null,\r\n                deductions: null,\r\n                payroll_taxes: null,\r\n                subtract_lunch_time_from_working_hours: false,\r\n                lunch_duration: null,\r\n                maximum_leave_days: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeePaygrade(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            salary,\r\n            pay_frequency,\r\n            monthly_leave_days,\r\n            hourly_rate,\r\n            overtime_rate,\r\n            overtime_two_rate,\r\n            commission,\r\n            allowances,\r\n            deductions,\r\n            payroll_taxes,\r\n            subtract_lunch_time_from_working_hours,\r\n            lunch_duration,\r\n            maximum_leave_days,\r\n        } = this.state.selectRow;\r\n        const employeepaygrade = {\r\n            name,\r\n            salary,\r\n            pay_frequency,\r\n            monthly_leave_days,\r\n            hourly_rate,\r\n            overtime_rate,\r\n            overtime_two_rate,\r\n            commission,\r\n            allowances,\r\n            deductions,\r\n            payroll_taxes,\r\n            subtract_lunch_time_from_working_hours,\r\n            lunch_duration,\r\n            maximum_leave_days,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeePaygrade(this.state.selectRow.id, employeepaygrade);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeePaygrade(employeepaygrade) {\r\n        this.setState({\r\n            employeepaygrade,\r\n            deleteEmployeePaygradeDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeePaygrade() {\r\n        this.props.deleteEmployeePaygrade();\r\n        this.setState({\r\n            deleteEmployeePaygradeDialog: false,\r\n            employeepaygrade: this.emptyEmployeePaygrade\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeePaygradesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeePaygrades() {\r\n        this.props.deleteEmployeePaygrade();\r\n        this.setState({\r\n            deleteEmployeePaygradesDialog: false,\r\n            selectedEmployeePaygrades: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Paygrade</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE PAYGRADE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeePaygrade(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeepaygradeDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeePaygrade} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeePaygrade}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeePaygradesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeePaygradesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeePaygrades} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          name,\r\n          salary,\r\n          pay_frequency,\r\n          monthly_leave_days,\r\n          hourly_rate,\r\n          overtime_rate,\r\n          overtime_two_rate,\r\n          commission,\r\n          allowances,\r\n          deductions,\r\n          payroll_taxes,\r\n          lunch_duration,\r\n          maximum_leave_days,\r\n        } = this.state;\r\n\r\n        const {employeepaycommissionrules} = this.props;\r\n        const {employeeallowances} = this.props;\r\n        const {employeepaydeductions} = this.props;\r\n        const {employeepayrolltaxes} = this.props;\r\n        const {employeepayfrequencies} = this.props;\r\n        const {employeelunchchoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeepaygrades}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeePaygrades} onSelectionChange={e => this.setState({selectedEmployeePaygrades: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Paygrades found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"salary\"\r\n                            header=\"Salary\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Salary\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"pay_frequency\"\r\n                            header=\"Pay Frequency\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Pay Frequency\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"lunch_duration\"\r\n                            header=\"Lunch Duration\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Lunch Duration\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeepaygradeDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Paygrade Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeepaygradeDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Salary</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"salary\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={salary}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Monthly Leave Days</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"monthly_leave_days\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={monthly_leave_days}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Hourly Rate</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"hourly_rate\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={hourly_rate}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Overtime Rate</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"overtime_rate\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={overtime_rate}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Overtime Two Rate</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"overtime_two_rate\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={overtime_two_rate}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Maximum Leave Days</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"maximum_leave_days\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={maximum_leave_days}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={pay_frequency}\r\n                                    onChange={this.onPayFrequency}\r\n                                    options={employeepayfrequencies}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT PAY FREQUENCY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={commission}\r\n                                    onChange={this.onCommission}\r\n                                    options={employeepaycommissionrules}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT COMMISSION</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={allowances}\r\n                                    onChange={this.onAllowances}\r\n                                    options={employeeallowances}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT ALLOWANCES</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={deductions}\r\n                                    onChange={this.onDeductions}\r\n                                    options={employeepaydeductions}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT DEDUCTIONS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={payroll_taxes}\r\n                                    onChange={this.onPayrollTaxes}\r\n                                    options={employeepayrolltaxes}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT PAYROLL TAX</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={lunch_duration}\r\n                                    onChange={this.onLunchDuration}\r\n                                    options={employeelunchchoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT LUNCH DURATION</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>SUBSTRACT LUNCH TIME FROM WORKING HOURS :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onCheck}\r\n                                checked={this.state.subtract_lunch_time_from_working_hours}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE PAYGRADE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <label htmlFor=\"inSalary\">Salary</label>\r\n                        <InputNumber\r\n                            id=\"inRate\"\r\n                            value={this.state.selectRow.salary}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    salary: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inMonthlyLeaveDays\">Monthly Leave Days</label>\r\n                        <InputNumber\r\n                            id=\"inMonthlyLeaveDays\"\r\n                            value={this.state.selectRow.monthly_leave_days}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    monthly_leave_days: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inHourlyRate\">Hourly Rate</label>\r\n                        <InputNumber\r\n                            id=\"inHourlyRate\"\r\n                            value={this.state.selectRow.hourly_rate}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    hourly_rate: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inOvertimeRate\">Overtime Rate</label>\r\n                        <InputNumber\r\n                            id=\"inOvertimeRate\"\r\n                            value={this.state.selectRow.overtime_rate}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    overtime_rate: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inOvertimeTwoRate\">Overtime Two Rate</label>\r\n                        <InputNumber\r\n                            id=\"inOvertimeTwoRate\"\r\n                            value={this.state.selectRow.overtime_two_rate}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    overtime_two_rate: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inMaximumLeaveDays\">Maximum Leave Days</label>\r\n                        <InputNumber\r\n                            id=\"inMaximumLeaveDays\"\r\n                            value={this.state.selectRow.maximum_leave_days}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    maximum_leave_days: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inPayFrequency\"\r\n                            value={this.state.selectRow.pay_frequency}\r\n                            options={employeepayfrequencies}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    pay_frequency: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inAllowances\"\r\n                            value={this.state.selectRow.allowances}\r\n                            options={employeeallowances}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    allowances: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inCommission\"\r\n                            value={this.state.selectRow.commission}\r\n                            options={employeepaycommissionrules}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    commission: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inDeductions\"\r\n                            value={this.state.selectRow.deductions}\r\n                            options={employeepaydeductions}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    deductions: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inPayrollTaxes\"\r\n                            value={this.state.selectRow.payroll_taxes}\r\n                            options={employeepayrolltaxes}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    payroll_taxes: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inLunchDuration\"\r\n                            value={this.state.selectRow.lunch_duration}\r\n                            options={employeelunchchoices}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    lunch_duration: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>SUBSTRACT LUNCH TIME FROM WORKING HOURS :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            subtract_lunch_time_from_working_hours: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.subtract_lunch_time_from_working_hours}\r\n                            />\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeePaygradesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeePaygradesDialogFooter} onHide={this.hideDeleteEmployeePaygradesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeepaygrade && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepaygrades: state.employeepaygrades.employeepaygrades,\r\n    employeepaycommissionrules: state.employeepaycommissionrules.employeepaycommissionrules,\r\n    employeeallowances: state.employeeallowances.employeeallowances,\r\n    employeepaydeductions: state.employeepaydeductions.employeepaydeductions,\r\n    employeepayrolltaxes: state.employeepayrolltaxes.employeepayrolltaxes,\r\n    employeepayfrequencies: state.employeepayfrequencies.employeepayfrequencies,\r\n    employeelunchchoices: state.employeelunchchoices.employeelunchchoices,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeePaygrades,\r\n    getEmployeePayCommissionRules,\r\n    getEmployeeAllowances,\r\n    getEmployeePayDeductions,\r\n    getEmployeePayrollTaxes,\r\n    getEmployeePayFrequencies,\r\n    getEmployeeLunchChoices,\r\n    editEmployeePaygrade,\r\n    deleteEmployeePaygrade,\r\n    addEmployeePaygrade} ) (EmployeePaygrades);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeeAllowances, addEmployeeAllowance, editEmployeeAllowance, deleteEmployeeAllowance } from '..//../actions/employeeallowances';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\n\r\nclass EmployeeAllowances extends Component {\r\n\r\n    emptyTax = {\r\n        name: '',\r\n        amount: '',\r\n        taxable: false,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeeallowances: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeeAllowances: null,\r\n            employeeallowanceDialog: false,\r\n            deleteEmployeeAllowanceDialog: false,\r\n            deleteEmployeeAllowancesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                amount: '',\r\n                taxable: false,\r\n            },\r\n            newData: {\r\n                name: '',\r\n                amount: '',\r\n                taxable: false,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeeAllowance = this.saveEmployeeAllowance.bind(this);\r\n        this.editEmployeeAllowance = this.editEmployeeAllowance.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeeAllowance = this.confirmDeleteEmployeeAllowance.bind(this);\r\n        this.deleteEmployeeAllowance = this.deleteEmployeeAllowance.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeeAllowances = this.deleteSelectedEmployeeAllowances.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeeAllowanceDialog = this.hideDeleteEmployeeAllowanceDialog.bind(this);\r\n        this.hideDeleteEmployeeAllowancesDialog = this.hideDeleteEmployeeAllowancesDialog.bind(this);\r\n        this.onTaxable = this.onTaxable.bind(this);\r\n    }\r\n\r\n    onTaxable() {\r\n        this.setState({\r\n            taxable: !this.state.checked\r\n        });\r\n    }\r\n\r\n    static propTypes = {\r\n        employeeallowances : PropTypes.array.isRequired,\r\n        getEmployeeAllowances: PropTypes.func.isRequired,\r\n        addEmployeeAllowance: PropTypes.func.isRequired,\r\n        editEmployeeAllowance: PropTypes.func.isRequired,\r\n        deleteEmployeeAllowance: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                amount: '',\r\n                taxable: false,\r\n            },\r\n            submitted: false,\r\n            employeeallowanceDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeeallowanceDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeeAllowanceDialog() {\r\n        this.setState({ deleteEmployeeAllowanceDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeeAllowancesDialog() {\r\n        this.setState({ deleteEmployeeAllowancesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeAllowances();\r\n    }\r\n\r\n\r\n    saveEmployeeAllowance = (e) => {\r\n        e.preventDefault();\r\n        const { name, amount, taxable } = this.state;\r\n        const employeeallowance = { name, amount, taxable};\r\n        this.props.addEmployeeAllowance(employeeallowance);\r\n        this.setState({\r\n            name: '',\r\n            amount: '',\r\n            taxable: true,\r\n            employeeallowanceDialog: false\r\n        });\r\n        this.props.history.push('/employeeallowances');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                amount: '',\r\n                taxable: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeeAllowance(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            amount,\r\n            taxable\r\n\r\n        } = this.state.selectRow;\r\n        const employeeallowance = {\r\n            name,\r\n            amount,\r\n            taxable\r\n\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeeAllowance(this.state.selectRow.id, employeeallowance);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeeAllowance(employeeallowance) {\r\n        this.setState({\r\n            employeeallowance,\r\n            deleteEmployeeAllowanceDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeeAllowance() {\r\n        this.props.deleteEmployeeAllowance();\r\n        this.setState({\r\n            deleteEmployeeAllowanceDialog: false,\r\n            employeeallowance: this.emptyEmployeeAllowance\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeeAllowancesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeeAllowances() {\r\n        this.props.deleteEmployeeAllowance();\r\n        this.setState({\r\n            deleteEmployeeAllowancesDialog: false,\r\n            selectedEmployeeAllowances: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Allowance</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE ALLOWANCE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeeAllowance(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeeallowanceDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeeAllowance} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeeAllowance}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeeAllowancesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeeAllowancesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeeAllowances} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name, amount } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeeallowances}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedTaxes} onSelectionChange={e => this.setState({selectedTaxes: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Allowance found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"amount\" header=\"Amount\" sortable filter filterPlaceholder=\"Search by Amount\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.employeeallowanceDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Allowance Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeeallowanceDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Name</label>\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Amount</label>\r\n                                 <InputNumber\r\n                                    name=\"amount\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={amount}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                                <label>TAXABLE :</label>\r\n                                <Checkbox\r\n                                    inputId=\"working\"\r\n                                    onChange={this.onTaxable}\r\n                                    checked={this.state.taxable}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE ALLOWANCE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <label htmlFor=\"inAmount\">Amount </label>\r\n                            <InputNumber\r\n                                id=\"inAmount\"\r\n                                value={this.state.selectRow.amount}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        amount: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                                <label>TAXABLE :</label>\r\n                                <Checkbox\r\n                                    inputId=\"working\"\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                taxable: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    checked={this.state.selectRow.taxable}\r\n                                />\r\n                            </div>\r\n                        </span>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteEmployeeAllowancesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeeAllowancesDialogFooter} onHide={this.hideDeleteEmployeeAllowancesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeeallowance && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeeallowances: state.employeeallowances.employeeallowances\r\n})\r\n\r\nexport default connect(mapStateToProps, { getEmployeeAllowances, addEmployeeAllowance, editEmployeeAllowance, deleteEmployeeAllowance } ) (EmployeeAllowances);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeePayDeductions, addEmployeePayDeduction, editEmployeePayDeduction, deleteEmployeePayDeduction } from '..//../actions/employeepaydeductions';\r\nimport { getEmployeeAllowances } from '..//../actions/employeeallowances';\r\nimport { getEmployeePayCommissionRules } from '..//../actions/employeepaycommissionrules';\r\nimport { getEmployeePayrollTaxes } from '..//../actions/employeepayrolltaxes';\r\nimport { getAccounts } from '..//../actions/accounts';\r\nimport { getEmployeeDeductionMethods } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\nclass EmployeePayDeductions extends Component {\r\n\r\n    emptyEmployeePayDeduction = {\r\n        deduction_method: null,\r\n        name: '',\r\n        tax_deductable: false,\r\n        basic_income: false,\r\n        hourly_income: false,\r\n        overtime_income: false,\r\n        benefits: null,\r\n        commission: null,\r\n        payroll_taxes: null,\r\n        rate: '',\r\n        fixed_amount: '',\r\n        employer_contribution: '',\r\n        liability_account: null,\r\n        account_paid_into: null,\r\n        archived: false\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepaydeductions: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePayDeductions: null,\r\n            employeepaydeductionDialog: false,\r\n            deleteEmployeePayDeductionDialog: false,\r\n            deleteEmployeePayDeductionsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                deduction_method: null,\r\n                name: '',\r\n                tax_deductable: false,\r\n                basic_income: false,\r\n                hourly_income: false,\r\n                overtime_income: false,\r\n                benefits: null,\r\n                commission: null,\r\n                payroll_taxes: null,\r\n                rate: '',\r\n                fixed_amount: '',\r\n                employer_contribution: '',\r\n                liability_account: null,\r\n                account_paid_into: null,\r\n                archived: false\r\n            },\r\n            newData: {\r\n                deduction_method: null,\r\n                name: '',\r\n                tax_deductable: false,\r\n                basic_income: false,\r\n                hourly_income: false,\r\n                overtime_income: false,\r\n                benefits: null,\r\n                commission: null,\r\n                payroll_taxes: null,\r\n                rate: '',\r\n                fixed_amount: '',\r\n                employer_contribution: '',\r\n                liability_account: null,\r\n                account_paid_into: null,\r\n                archived: false\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeePayDeduction = this.saveEmployeePayDeduction.bind(this);\r\n        this.editEmployeePayDeduction = this.editEmployeePayDeduction.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeePayDeduction = this.confirmDeleteEmployeePayDeduction.bind(this);\r\n        this.deleteEmployeePayDeduction = this.deleteEmployeePayDeduction.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeePayDeductions = this.deleteSelectedEmployeePayDeductions.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeePayDeductionDialog = this.hideDeleteEmployeePayDeductionDialog.bind(this);\r\n        this.hideDeleteEmployeePayDeductionsDialog = this.hideDeleteEmployeePayDeductionsDialog.bind(this);\r\n        this.onDeductionMethods = this.onDeductionMethods.bind(this);\r\n        this.onBenefits = this.onBenefits.bind(this);\r\n        this.onCommission = this.onCommission.bind(this);\r\n        this.onPayrollTaxes = this.onPayrollTaxes.bind(this);\r\n        this.onLiabilityAccount = this.onLiabilityAccount.bind(this);\r\n        this.onAccountPaidInto = this.onAccountPaidInto.bind(this);\r\n        this.onTaxDeductable = this.onTaxDeductable.bind(this);\r\n        this.onBasicIncome = this.onBasicIncome.bind(this);\r\n        this.onHourlyIncome = this.onHourlyIncome.bind(this);\r\n        this.onOvertimeIncome = this.onOvertimeIncome.bind(this);\r\n        this.onArchived = this.onArchived.bind(this);\r\n    }\r\n\r\n    onTaxDeductable() {\r\n        this.setState({\r\n          tax_deductable: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onBasicIncome() {\r\n        this.setState({\r\n          basic_income: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onHourlyIncome() {\r\n        this.setState({\r\n          hourly_income: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onOvertimeIncome() {\r\n        this.setState({\r\n          overtime_income: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onArchived() {\r\n        this.setState({\r\n          archived: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onDeductionMethods (e){\r\n        this.setState({deduction_method: e.value})\r\n    }\r\n\r\n    onBenefits (e){\r\n        this.setState({benefits: e.value})\r\n    }\r\n\r\n    onCommission (e){\r\n        this.setState({commission: e.value})\r\n    }\r\n\r\n    onPayrollTaxes (e){\r\n        this.setState({payroll_taxes: e.value})\r\n    }\r\n\r\n    onLiabilityAccount (e){\r\n        this.setState({liability_account: e.value})\r\n    }\r\n\r\n    onAccountPaidInto (e){\r\n        this.setState({account_paid_into: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepaydeductions : PropTypes.array.isRequired,\r\n        getEmployeePayDeductions: PropTypes.func.isRequired,\r\n        addEmployeePayDeduction: PropTypes.func.isRequired,\r\n        editEmployeePayDeduction: PropTypes.func.isRequired,\r\n        deleteEmployeePayDeduction: PropTypes.func.isRequired,\r\n        getEmployeeAllowances: PropTypes.func.isRequired,\r\n        getEmployeePayCommissionRules: PropTypes.func.isRequired,\r\n        getEmployeePayrollTaxes: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n        getEmployeeDeductionMethods: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePayDeductions()\r\n        this.props.getEmployeeAllowances()\r\n        this.props.getEmployeePayCommissionRules()\r\n        this.props.getEmployeePayrollTaxes()\r\n        this.props.getAccounts()\r\n        this.props.getEmployeeDeductionMethods()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                deduction_method: null,\r\n                name: '',\r\n                tax_deductable: false,\r\n                basic_income: false,\r\n                hourly_income: false,\r\n                overtime_income: false,\r\n                benefits: null,\r\n                commission: null,\r\n                payroll_taxes: null,\r\n                rate: '',\r\n                fixed_amount: '',\r\n                employer_contribution: '',\r\n                liability_account: null,\r\n                account_paid_into: null,\r\n                archived: false\r\n            },\r\n            submitted: false,\r\n            employeepaydeductionDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeepaydeductionDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeePayDeductionDialog() {\r\n        this.setState({ deleteEmployeePayDeductionDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeePayDeductionsDialog() {\r\n        this.setState({ deleteEmployeePayDeductionsDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeePayDeduction = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            deduction_method,\r\n            name,\r\n            tax_deductable,\r\n            basic_income,\r\n            hourly_income,\r\n            overtime_income,\r\n            benefits,\r\n            commission,\r\n            payroll_taxes,\r\n            rate,\r\n            fixed_amount,\r\n            employer_contribution,\r\n            liability_account,\r\n            account_paid_into,\r\n            archived\r\n        } = this.state;\r\n        const employeepaydeduction = {\r\n            deduction_method,\r\n            name,\r\n            tax_deductable,\r\n            basic_income,\r\n            hourly_income,\r\n            overtime_income,\r\n            benefits,\r\n            commission,\r\n            payroll_taxes,\r\n            rate,\r\n            fixed_amount,\r\n            employer_contribution,\r\n            liability_account,\r\n            account_paid_into,\r\n            archived\r\n        };\r\n        this.props.addEmployeePayDeduction(employeepaydeduction);\r\n        this.setState({\r\n            deduction_method: '',\r\n            name: '',\r\n            tax_deductable: true,\r\n            basic_income: true,\r\n            hourly_income: true,\r\n            overtime_income: true,\r\n            benefits: '',\r\n            commission: '',\r\n            payroll_taxes: '',\r\n            rate: '',\r\n            fixed_amount: '',\r\n            employer_contribution: '',\r\n            liability_account: '',\r\n            account_paid_into: '',\r\n            archived: true,\r\n            employeepaydeductionDialog: false\r\n        });\r\n        this.props.history.push('/employeepaydeductions');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                deduction_method: null,\r\n                name: '',\r\n                tax_deductable: false,\r\n                basic_income: false,\r\n                hourly_income: false,\r\n                overtime_income: false,\r\n                benefits: null,\r\n                commission: null,\r\n                payroll_taxes: null,\r\n                rate: '',\r\n                fixed_amount: '',\r\n                employer_contribution: '',\r\n                liability_account: null,\r\n                account_paid_into: null,\r\n                archived: false\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeePayDeduction(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            deduction_method,\r\n            name,\r\n            tax_deductable,\r\n            basic_income,\r\n            hourly_income,\r\n            overtime_income,\r\n            benefits,\r\n            commission,\r\n            payroll_taxes,\r\n            rate,\r\n            fixed_amount,\r\n            employer_contribution,\r\n            liability_account,\r\n            account_paid_into,\r\n            archived\r\n        } = this.state.selectRow;\r\n        const employeepaydeduction = {\r\n            deduction_method,\r\n            name,\r\n            tax_deductable,\r\n            basic_income,\r\n            hourly_income,\r\n            overtime_income,\r\n            benefits,\r\n            commission,\r\n            payroll_taxes,\r\n            rate,\r\n            fixed_amount,\r\n            employer_contribution,\r\n            liability_account,\r\n            account_paid_into,\r\n            archived\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeePayDeduction(this.state.selectRow.id, employeepaydeduction);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeePayDeduction(employeepaydeduction) {\r\n        this.setState({\r\n            employeepaydeduction,\r\n            deleteEmployeePayDeductionDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeePayDeduction() {\r\n        this.props.deleteEmployeePayDeduction();\r\n        this.setState({\r\n            deleteEmployeePayDeductionDialog: false,\r\n            employeepaydeduction: this.emptyEmployeePayDeduction\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeePayDeductionsDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeePayDeductions() {\r\n        this.props.deleteEmployeePayDeduction();\r\n        this.setState({\r\n            deleteEmployeePayDeductionsDialog: false,\r\n            selectedEmployeePayDeductions: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Pay Deduction</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE PAY DEDUCTION\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeePayDeduction(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeepaydeductionDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeePayDeduction} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeePayDeduction}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeePayDeductionsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeePayDeductionsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeePayDeductions} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          deduction_method,\r\n          name,\r\n          benefits,\r\n          commission,\r\n          payroll_taxes,\r\n          rate,\r\n          fixed_amount,\r\n          employer_contribution,\r\n          liability_account,\r\n          account_paid_into,\r\n        } = this.state;\r\n\r\n        const {employeeallowances} = this.props;\r\n        const {employeepaycommissionrules} = this.props;\r\n        const {employeepayrolltaxes} = this.props;\r\n        const {employeedeductionmethods} = this.props;\r\n        const {accounts} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeepaydeductions}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeePayDeductions} onSelectionChange={e => this.setState({selectedEmployeePayDeductions: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Pay Deductions found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"deduction_method\"\r\n                            header=\"Deduction Method\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Deduction Method\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"rate\"\r\n                            header=\"Rate\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Rate\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"fixed_amount\"\r\n                            header=\"Fixed Amount\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Fixed Amount\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeepaydeductionDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Pay Deduction Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeepaydeductionDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Rate</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"rate\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={rate}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Fixed Amount</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"fixed_amount\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={fixed_amount}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Employer Contribution</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"employer_contribution\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={employer_contribution}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={deduction_method}\r\n                                    onChange={this.onDeductionMethods}\r\n                                    options={employeedeductionmethods}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT DEDUCTION METHOD</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={benefits}\r\n                                    onChange={this.onBenefits}\r\n                                    options={employeeallowances}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT BENEFITS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={commission}\r\n                                    onChange={this.onCommission}\r\n                                    options={employeepaycommissionrules}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT COMMISSION</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={payroll_taxes}\r\n                                    onChange={this.onPayrollTaxes}\r\n                                    options={employeepayrolltaxes}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT PAYROLL TAXES</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={liability_account}\r\n                                    onChange={this.onLiabilityAccount}\r\n                                    options={accounts}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT LIABILITY ACCOUNT</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={account_paid_into}\r\n                                    onChange={this.onAccountPaidInto}\r\n                                    options={accounts}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">SELECT ACCOUNT PAID INTO</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>TAX DEDUCTABLE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onTaxDeductable}\r\n                                checked={this.state.tax_deductable}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>BASIC INCOME :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onBasicIncome}\r\n                                checked={this.state.basic_income}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>HOURLY INCOME :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onHourlyIncome}\r\n                                checked={this.state.hourly_income}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>OVERTIME INCOME :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onOvertimeIncome}\r\n                                checked={this.state.overtime_income}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>ARCHIVED :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onArchived}\r\n                                checked={this.state.archived}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE PAY DEDUCTION\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <label htmlFor=\"inRate\">Rate</label>\r\n                        <InputNumber\r\n                            id=\"inRate\"\r\n                            value={this.state.selectRow.rate}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    rate: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inFixedAmount\">Fixed Amount</label>\r\n                        <InputNumber\r\n                            id=\"inFixedAmount\"\r\n                            value={this.state.selectRow.fixed_amount}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    fixed_amount: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inEmployerContribution\">Employer Contribution</label>\r\n                        <InputNumber\r\n                            id=\"inEmployerContribution\"\r\n                            value={this.state.selectRow.employer_contribution}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    employer_contribution: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inDeductionMethod\"\r\n                            value={this.state.selectRow.deduction_method}\r\n                            options={employeedeductionmethods}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    deduction_method: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inBenefits\"\r\n                            value={this.state.selectRow.benefits}\r\n                            options={employeeallowances}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    benefits: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inCommission\"\r\n                            value={this.state.selectRow.commission}\r\n                            options={employeepaycommissionrules}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    commission: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inPayrollTaxes\"\r\n                            value={this.state.selectRow.payroll_taxes}\r\n                            options={employeepayrolltaxes}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    payroll_taxes: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inLiabilityAccount\"\r\n                            value={this.state.selectRow.liability_account}\r\n                            options={accounts}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    liability_account: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inAccountPaidInto\"\r\n                            value={this.state.selectRow.account_paid_into}\r\n                            options={accounts}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    account_paid_into: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>TAX DEDUCTABLE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            tax_deductable: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.tax_deductable}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>BASIC INCOME :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            basic_income: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.basic_income}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>HOURLY INCOME :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            hourly_income: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.hourly_income}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>OVERTIME INCOME :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            overtime_income: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.overtime_income}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>ARCHIVED :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            archived: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.archived}\r\n                            />\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeePayDeductionsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeePayDeductionsDialogFooter} onHide={this.hideDeleteEmployeePayDeductionsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeepaydeduction && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepaydeductions: state.employeepaydeductions.employeepaydeductions,\r\n    employeeallowances: state.employeeallowances.employeeallowances,\r\n    employeepaycommissionrules: state.employeepaycommissionrules.employeepaycommissionrules,\r\n    employeepayrolltaxes: state.employeepayrolltaxes.employeepayrolltaxes,\r\n    employeedeductionmethods: state.employeedeductionmethods.employeedeductionmethods,\r\n    accounts: state.accounts.accounts,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeePayDeductions,\r\n    getEmployeeAllowances,\r\n    getEmployeePayCommissionRules,\r\n    getEmployeePayrollTaxes,\r\n    getAccounts,\r\n    getEmployeeDeductionMethods,\r\n    editEmployeePayDeduction,\r\n    deleteEmployeePayDeduction,\r\n    addEmployeePayDeduction} ) (EmployeePayDeductions);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeePayCommissionRules, addEmployeePayCommissionRule, editEmployeePayCommissionRule, deleteEmployeePayCommissionRule } from '..//../actions/employeepaycommissionrules';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\nclass EmployeePayCommissionRules extends Component {\r\n\r\n    emptyEmployeePayCommissionRule = {\r\n        name: '',\r\n        min_sales: '',\r\n        rate: '',\r\n        archived: false,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepaycommissionrules: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePayCommissionRules: null,\r\n            employeepaycommissionruleDialog: false,\r\n            deleteEmployeePayCommissionRuleDialog: false,\r\n            deleteEmployeePayCommissionRulesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                min_sales: '',\r\n                rate: '',\r\n                archived: false,\r\n            },\r\n            newData: {\r\n                name: '',\r\n                min_sales: '',\r\n                rate: '',\r\n                archived: false,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeePayCommissionRule = this.saveEmployeePayCommissionRule.bind(this);\r\n        this.editEmployeePayCommissionRule = this.editEmployeePayCommissionRule.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeePayCommissionRule = this.confirmDeleteEmployeePayCommissionRule.bind(this);\r\n        this.deleteEmployeePayCommissionRule = this.deleteEmployeePayCommissionRule.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeePayCommissionRules = this.deleteSelectedEmployeePayCommissionRules.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeePayCommissionRuleDialog = this.hideDeleteEmployeePayCommissionRuleDialog.bind(this);\r\n        this.hideDeleteEmployeePayCommissionRulesDialog = this.hideDeleteEmployeePayCommissionRulesDialog.bind(this);\r\n        this.onArchived = this.onArchived.bind(this);\r\n    }\r\n\r\n    onArchived() {\r\n        this.setState({\r\n          archived: !this.state.checked\r\n        });\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepaycommissionrules : PropTypes.array.isRequired,\r\n        getEmployeePayCommissionRules: PropTypes.func.isRequired,\r\n        addEmployeePayCommissionRule: PropTypes.func.isRequired,\r\n        editEmployeePayCommissionRule: PropTypes.func.isRequired,\r\n        deleteEmployeePayCommissionRule: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePayCommissionRules()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                min_sales: '',\r\n                rate: '',\r\n                archived: false,\r\n            },\r\n            submitted: false,\r\n            employeepaycommissionruleDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeepaycommissionruleDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeePayCommissionRuleDialog() {\r\n        this.setState({ deleteEmployeePayCommissionRuleDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeePayCommissionRulesDialog() {\r\n        this.setState({ deleteEmployeePayCommissionRulesDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeePayCommissionRule = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            min_sales,\r\n            rate,\r\n            archived\r\n        } = this.state;\r\n        const employeepaycommissionrule = {\r\n            name,\r\n            min_sales,\r\n            rate,\r\n            archived\r\n        };\r\n        this.props.addEmployeePayCommissionRule(employeepaycommissionrule);\r\n        this.setState({\r\n            name: '',\r\n            min_sales: '',\r\n            rate: '',\r\n            archived: true,\r\n            employeepaycommissionruleDialog: false\r\n        });\r\n        this.props.history.push('/employeepaycommissionrules');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                min_sales: '',\r\n                rate: '',\r\n                archived: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeePayCommissionRule(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            min_sales,\r\n            rate,\r\n            archived\r\n        } = this.state.selectRow;\r\n        const employeepaycommissionrule = {\r\n            name,\r\n            min_sales,\r\n            rate,\r\n            archived\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeePayCommissionRule(this.state.selectRow.id, employeepaycommissionrule);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeePayCommissionRule(employeepaycommissionrule) {\r\n        this.setState({\r\n            employeepaycommissionrule,\r\n            deleteEmployeePayCommissionRuleDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeePayCommissionRule() {\r\n        this.props.deleteEmployeePayCommissionRule();\r\n        this.setState({\r\n            deleteEmployeePayCommissionRuleDialog: false,\r\n            employeepaycommissionrule: this.emptyEmployeePayCommissionRule\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeePayCommissionRulesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeePayCommissionRules() {\r\n        this.props.deleteEmployeePayCommissionRule();\r\n        this.setState({\r\n            deleteEmployeePayCommissionRulesDialog: false,\r\n            selectedEmployeePayCommissionRules: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Pay Commission Rule</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE PAY COMMISSION RULE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeePayCommissionRule(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeepaycommissionruleDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeePayCommissionRule} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeePayCommissionRule}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeePayCommissionRulesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeePayCommissionRulesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeePayCommissionRules} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name, min_sales, rate } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeepaycommissionrules}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeePayCommissionRules} onSelectionChange={e => this.setState({selectedEmployeePayCommissionRules: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Pay Commission Rules found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"min_sales\"\r\n                            header=\"Min Sales\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Min Sales\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"rate\"\r\n                            header=\"Rate\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Rate\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.employeepaycommissionruleDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Pay Commission Rule Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeepaycommissionruleDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    onChange={this.onChange}\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Min Sales</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"min_sales\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={min_sales}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Min Sales</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inputtext\">Rate</label>\r\n                            <span className=\"p-float-label\">\r\n                                <InputNumber\r\n                                    name=\"rate\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={rate}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>ARCHIVED :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onArchived}\r\n                                checked={this.state.archived}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE PAY COMMISSION RULE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <label htmlFor=\"inAmount\">Min Sales</label>\r\n                        <InputNumber\r\n                            id=\"inMinSales\"\r\n                            value={this.state.selectRow.min_sales}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    min_sales: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <label htmlFor=\"inAmount\">Rate</label>\r\n                        <InputNumber\r\n                            id=\"inRate\"\r\n                            value={this.state.selectRow.rate}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    rate: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>ARCHIVED :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            archived: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.archived}\r\n                            />\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeePayCommissionRulesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeePayCommissionRulesDialogFooter} onHide={this.hideDeleteEmployeePayCommissionRulesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeepaycommissionrule && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepaycommissionrules: state.employeepaycommissionrules.employeepaycommissionrules,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployeePayCommissionRules,\r\n    editEmployeePayCommissionRule,\r\n    deleteEmployeePayCommissionRule,\r\n    addEmployeePayCommissionRule} ) (EmployeePayCommissionRules);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeePayrollTaxes, addEmployeePayrollTax, editEmployeePayrollTax, deleteEmployeePayrollTax } from '..//../actions/employeepayrolltaxes';\r\nimport {getEmployeePayrollTaxChoices} from \"..//../actions/choices\";\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\nclass EmployeePayrollTaxes extends Component {\r\n\r\n    emptyEmployeePayrollTax = {\r\n        name: '',\r\n        paid_by: null\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepayrolltaxes: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePayrollTaxes: null,\r\n            employeepayrolltaxDialog: false,\r\n            deleteEmployeePayrollTaxDialog: false,\r\n            deleteEmployeePayrollTaxesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                name: '',\r\n                paid_by: null\r\n            },\r\n            newData: {\r\n                name: '',\r\n                paid_by: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeePayrollTax = this.saveEmployeePayrollTax.bind(this);\r\n        this.editEmployeePayrollTax = this.editEmployeePayrollTax.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeePayrollTax = this.confirmDeleteEmployeePayrollTax.bind(this);\r\n        this.deleteEmployeePayrollTax = this.deleteEmployeePayrollTax.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeePayrollTaxes = this.deleteSelectedEmployeePayrollTaxes.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeePayrollTaxDialog = this.hideDeleteEmployeePayrollTaxDialog.bind(this);\r\n        this.hideDeleteEmployeePayrollTaxesDialog = this.hideDeleteEmployeePayrollTaxesDialog.bind(this);\r\n        this.onPaidBy = this.onPaidBy.bind(this);\r\n    }\r\n\r\n    onPaidBy(e){\r\n        this.setState({paid_by: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepayrolltaxes : PropTypes.array.isRequired,\r\n        getEmployeePayrollTaxes: PropTypes.func.isRequired,\r\n        addEmployeePayrollTax: PropTypes.func.isRequired,\r\n        editEmployeePayrollTax: PropTypes.func.isRequired,\r\n        deleteEmployeePayrollTax: PropTypes.func.isRequired,\r\n        getEmployeePayrollTaxChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                paid_by: null\r\n            },\r\n            submitted: false,\r\n            employeepayrolltaxDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeepayrolltaxDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeePayrollTaxDialog() {\r\n        this.setState({ deleteEmployeePayrollTaxDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeePayrollTaxesDialog() {\r\n        this.setState({ deleteEmployeePayrollTaxesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePayrollTaxes();\r\n        this.props.getEmployeePayrollTaxChoices()\r\n    }\r\n\r\n\r\n    saveEmployeePayrollTax = (e) => {\r\n        e.preventDefault();\r\n        const { name, paid_by } = this.state;\r\n        const employeepayrolltax = { name, paid_by };\r\n        this.props.addEmployeePayrollTax(employeepayrolltax);\r\n        this.setState({\r\n            name: '',\r\n            paid_by: '',\r\n            employeepayrolltaxDialog: false\r\n        });\r\n        this.props.history.push('/employeepayrolltaxes');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                paid_by: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeePayrollTax(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            paid_by\r\n        } = this.state.selectRow;\r\n        const employeepayrolltax = {\r\n            name,\r\n            paid_by\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeePayrollTax(this.state.selectRow.id, employeepayrolltax);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeePayrollTax(employeepayrolltax) {\r\n        this.setState({\r\n            employeepayrolltax,\r\n            deleteEmployeePayrollTaxDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeePayrollTax() {\r\n        this.props.deleteEmployeePayrollTax();\r\n        this.setState({\r\n            deleteEmployeePayrollTaxDialog: false,\r\n            employeepayrolltax: this.emptyEmployeePayrollTax\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeePayrollTaxesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeePayrollTaxes() {\r\n        this.props.deleteEmployeePayrollTax();\r\n        this.setState({\r\n            deleteEmployeePayrollTaxesDialog: false,\r\n            selectedEmployeePayrollTaxes: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Payroll Taxes</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE PAYROLL TAX\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeePayrollTax(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeepayrolltaxDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeePayrollTax} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeePayrollTax}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeePayrollTaxesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeePayrollTaxesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeePayrollTaxes} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { name, paid_by } = this.state;\r\n        const { employeepayrolltaxchoices } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeepayrolltaxes}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeePayrollTaxes} onSelectionChange={e => this.setState({selectedEmployeePayrollTaxes: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Payroll Taxes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"paid_by\" header=\"Paid By\" sortable filter filterPlaceholder=\"Search by Paid By\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeepayrolltaxDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Payroll Tax Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeepayrolltaxDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                      name=\"name\"\r\n                                      onChange={this.onChange}\r\n                                      value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={paid_by}\r\n                                        onChange={this.onPaidBy}\r\n                                        options={employeepayrolltaxchoices}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"value\"\r\n                                        optionValue=\"key\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT PAID BY</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE EMPLOYEE PAYROLL TAX\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inPaidBy\"\r\n                            value={this.state.selectRow.paid_by}\r\n                            options={employeepayrolltaxchoices}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    paid_by: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeePayrollTaxesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeePayrollTaxesDialogFooter} onHide={this.hideDeleteEmployeePayrollTaxesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeepayrolltax && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepayrolltaxes: state.employeepayrolltaxes.employeepayrolltaxes,\r\n    employeepayrolltaxchoices: state.employeepayrolltaxchoices.employeepayrolltaxchoices\r\n})\r\n\r\nexport default connect(mapStateToProps, { getEmployeePayrollTaxes, getEmployeePayrollTaxChoices, addEmployeePayrollTax, editEmployeePayrollTax, deleteEmployeePayrollTax } ) (EmployeePayrollTaxes);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeePayrollDates, addEmployeePayrollDate, deleteEmployeePayrollDate, editEmployeePayrollDate } from '..//../actions/employeepayrolldates';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getEmployeeDepartments } from '..//../actions/employeedepartments';\r\nimport { getEmployeePaygrades } from '..//../actions/employeepaygrades';\r\nimport { getEmployeePayrollSchedules } from '..//../actions/employeepayrollschedules';\r\nimport { getEmployeePayrollDateChoices } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport \"./form.css\";\r\n\r\nclass EmployeePayrollDates extends Component {\r\n\r\n    emptyEmployeePayrollDate = {\r\n        date: null,\r\n        employee: null,\r\n        departments: null,\r\n        pay_grades: null,\r\n        schedule: null\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepayrolldates: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePayrollDates: null,\r\n            employeepayrolldateDialog: false,\r\n            deleteEmployeePayrollDateDialog: false,\r\n            deleteEmployeePayrollDatesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                date: null,\r\n                employee: null,\r\n                departments: null,\r\n                pay_grades: null,\r\n                schedule: null\r\n            },\r\n            newData: {\r\n                date: null,\r\n                employee: null,\r\n                departments: null,\r\n                pay_grades: null,\r\n                schedule: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeePayrollDate = this.saveEmployeePayrollDate.bind(this);\r\n        this.editEmployeePayrollDate = this.editEmployeePayrollDate.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeePayrollDate = this.confirmDeleteEmployeePayrollDate.bind(this);\r\n        this.deleteEmployeePayrollDate = this.deleteEmployeePayrollDate.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeePayrollDates = this.deleteSelectedEmployeePayrollDates.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeePayrollDateDialog = this.hideDeleteEmployeePayrollDateDialog.bind(this);\r\n        this.hideDeleteEmployeePayrollDatesDialog = this.hideDeleteEmployeePayrollDatesDialog.bind(this);\r\n        this.onDate = this.onDate.bind(this);\r\n        this.onDepartments = this.onDepartments.bind(this);\r\n        this.onPayGrades = this.onPayGrades.bind(this);\r\n        this.onSchedule = this.onSchedule.bind(this);\r\n    }\r\n\r\n    onDate (e){\r\n        this.setState({date: e.value})\r\n    }\r\n\r\n    onDepartments (e){\r\n        this.setState({departments: e.value})\r\n    }\r\n\r\n    onPayGrades (e){\r\n        this.setState({pay_grades: e.value})\r\n    }\r\n\r\n    onSchedule (e){\r\n        this.setState({schedule: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepayrolldates : PropTypes.array.isRequired,\r\n        getEmployeePayrollDates: PropTypes.func.isRequired,\r\n        addEmployeePayrollDate: PropTypes.func.isRequired,\r\n        editEmployeePayrollDate: PropTypes.func.isRequired,\r\n        deleteEmployeePayrollDate: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getEmployeeDepartments: PropTypes.func.isRequired,\r\n        getEmployeePaygrades: PropTypes.func.isRequired,\r\n        getEmployeePayrollSchedules: PropTypes.func.isRequired,\r\n        getEmployeePayrollDateChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePayrollDates()\r\n        this.props.getEmployees()\r\n        this.props.getEmployeeDepartments()\r\n        this.props.getEmployeePaygrades()\r\n        this.props.getEmployeePayrollSchedules()\r\n        this.props.getEmployeePayrollDateChoices()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                date: null,\r\n                employee: null,\r\n                departments: null,\r\n                pay_grades: null,\r\n                schedule: null\r\n            },\r\n            submitted: false,\r\n            employeepayrolldateDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeepayrolldateDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeePayrollDateDialog() {\r\n        this.setState({ deleteEmployeePayrollDateDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeePayrollDatesDialog() {\r\n        this.setState({ deleteEmployeePayrollDatesDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeePayrollDate = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            date,\r\n            employee,\r\n            departments,\r\n            pay_grades,\r\n            schedule\r\n        } = this.state;\r\n        const employeepayrolldate = {\r\n            date,\r\n            employee,\r\n            departments,\r\n            pay_grades,\r\n            schedule\r\n        };\r\n        this.props.addEmployeePayrollDate(employeepayrolldate);\r\n        this.setState({\r\n            date: '',\r\n            employee: '',\r\n            departments: '',\r\n            pay_grades: '',\r\n            schedule: '',\r\n            employeepayrolldateDialog: false\r\n        });\r\n        this.props.history.push('/employeepayrolldates');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                employee: '',\r\n                departments: '',\r\n                pay_grades: '',\r\n                schedule: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeePayrollDate(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            date,\r\n            employee,\r\n            departments,\r\n            pay_grades,\r\n            schedule\r\n\r\n        } = this.state.selectRow;\r\n        const employeepayrolldate = {\r\n            date,\r\n            employee,\r\n            departments,\r\n            pay_grades,\r\n            schedule\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeePayrollDate(this.state.selectRow.id, employeepayrolldate);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeePayrollDate(employeepayrolldate) {\r\n        this.setState({\r\n            employeepayrolldate,\r\n            deleteEmployeePayrollDateDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeePayrollDate() {\r\n        this.props.deleteEmployeePayrollDate();\r\n        this.setState({\r\n            deleteEmployeePayrollDateDialog: false,\r\n            employeepayrolldate: this.emptyEmployeePayrollDate\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeePayrollDatesDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeePayrollDates() {\r\n        this.props.deleteEmployeePayrollDate();\r\n        this.setState({\r\n            deleteEmployeePayrollDatesDialog: false,\r\n            selectedEmployeePayrollDates: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Payroll Date</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE PAYROLL DATE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeePayrollDate(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeepayrolldateDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeePayrollDate} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeePayrollDate}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeePayrollDatesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeePayrollDatesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeePayrollDates} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { date, employee, departments, pay_grades, schedule } = this.state;\r\n        const { employees } = this.props;\r\n        const { employeedepartments } = this.props;\r\n        const { employeepaygrades } = this.props;\r\n        const { employeepayrollschedules } = this.props;\r\n        const { employeepayrolldatechoices } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeepayrolldates}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeePayrollDates} onSelectionChange={e => this.setState({selectedEmployeePayrollDates: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Payroll Dates found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"schedule\"\r\n                            header=\"Schedule\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Schedule\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"number_of_employees\"\r\n                            header=\"Number Of Employees\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Number Of Employees\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"date\"\r\n                            header=\"Date\"\r\n                            sortable filter filterPlaceholder=\"Search by Date\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.employeepayrolldateDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Payroll Date Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeepayrolldateDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={employee}\r\n                                onChange={this.onEmployees}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={date}\r\n                                onChange={this.onDate}\r\n                                options={employeepayrolldatechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT DATE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={departments}\r\n                                onChange={this.onDepartments}\r\n                                options={employeedepartments}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT DEPARTMENTS</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                            value={pay_grades}\r\n                            onChange={this.onPayGrades}\r\n                            options={employeepaygrades}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT PAYGRADES</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={schedule}\r\n                                onChange={this.onSchedule}\r\n                                options={employeepayrollschedules}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT PAYROLL SCHEDULE</label>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE PAYROLL DATE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEmployee\"\r\n                                value={this.state.selectRow.employee}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            employee: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inDate\"\r\n                                value={this.state.selectRow.date}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            date: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employeepayrolldatechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inDepartments\"\r\n                                value={this.state.selectRow.departments}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            departments: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employeedepartments}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inPayGrades\"\r\n                                value={this.state.selectRow.pay_grades}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            pay_grades: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employeepaygrades}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inSchedule\"\r\n                                value={this.state.selectRow.schedule}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            schedule: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employeepayrollschedules}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteEmployeePayrollDatesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeePayrollDatesDialogFooter} onHide={this.hideDeleteEmployeePayrollDatesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeepayrolldate && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepayrolldates: state.employeepayrolldates.employeepayrolldates,\r\n    employees: state.employees.employees,\r\n    employeedepartments: state.employeedepartments.employeedepartments,\r\n    employeepaygrades: state.employeepaygrades.employeepaygrades,\r\n    employeepayrollschedules: state.employeepayrollschedules.employeepayrollschedules,\r\n    employeepayrolldatechoices: state.employeepayrolldatechoices.employeepayrolldatechoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployees,\r\n    getEmployeeDepartments,\r\n    getEmployeePaygrades,\r\n    getEmployeePayrollSchedules,\r\n    getEmployeePayrollDateChoices,\r\n    getEmployeePayrollDates,\r\n    deleteEmployeePayrollDate,\r\n    editEmployeePayrollDate,\r\n    addEmployeePayrollDate } ) (EmployeePayrollDates);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAYROLL_DATE, EDIT_EMPLOYEE_PAYROLL_DATE, GET_EMPLOYEE_PAYROLL_DATES, GET_EMPLOYEE_PAYROLL_DATE, DELETE_EMPLOYEE_PAYROLL_DATE } from '../types/employeepayrolldateTypes';\r\nimport { employeepayrolldatesURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePayrollDates=  () => dispatch => {\r\n    axios.get(employeepayrolldatesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAYROLL_DATES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePayrollDate = (id) => dispatch => {\r\n    axios.delete(employeepayrolldatesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAYROLL_DATE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePayrollDate = employeepayrolldate => dispatch => {\r\n    axios.post(employeepayrolldatesURL, employeepayrolldate)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAYROLL_DATE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayrollDate = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-payroll-dates/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYROLL_DATE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeePayrollDate = (id, employeepayrolldate) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-payroll-dates/${id}/`, employeepayrolldate)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_PAYROLL_DATE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { getEmployeePayslips} from '..//../actions/employeepayslips';\r\nimport \"./form.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass EmployeePayslips extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeepayslips: null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeePayslips: null,\r\n\r\n        };\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        employeepayslips : PropTypes.array.isRequired,\r\n        getEmployeePayslips: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeePayslips();\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Payslips</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.employeepayslips}\r\n                    style={{background: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedEmployeePayslips} onSelectionChange={e => this.setState({selectedEmployeePayslips: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No EmployeePayslips found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"employee\"\r\n                        header=\"Employee\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Employee\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"payslip_number\"\r\n                        header=\"Payslip Number\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Payslip Number\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"status\"\r\n                        header=\"Status\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Status\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"start_period\"\r\n                        header=\"Start Period\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Start Period\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeepayslips: state.employeepayslips.employeepayslips\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEmployeePayslips} ) (EmployeePayslips);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_PAYSLIP, GET_EMPLOYEE_PAYSLIPS, GET_EMPLOYEE_PAYSLIP, DELETE_EMPLOYEE_PAYSLIP } from '../types/employeepayslipTypes';\r\nimport { employeepayslipsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeePayslips=  () => dispatch => {\r\n    axios.get(employeepayslipsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_PAYSLIPS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeePayslip = (id) => dispatch => {\r\n    axios.delete(employeepayslipsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_PAYSLIP,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeePayslip = employeepayslip => dispatch => {\r\n    axios.post(employeepayslipsURL, employeepayslip)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_PAYSLIP,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeePayslip = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-payslips/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_PAYSLIP,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addEmployeeConfig } from '..//../actions/employeeconfigs';\r\nimport PropTypes from 'prop-types';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getAccounts } from '..//../actions/accounts';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {InputNumber} from 'primereact/inputnumber';\r\n\r\n\r\nclass EmployeeConfigForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            last_payroll_date: '',\r\n            require_verification_before_posting_payslips: false,\r\n            salary_follows_profits: false,\r\n            payroll_officer: null,\r\n            payroll_account: null,\r\n            payroll_counter: '',\r\n            business_social_security_number: '',\r\n            is_configured: false\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPayrollOfficer = this.onPayrollOfficer.bind(this);\r\n        this.onPayrollAccount = this.onPayrollAccount.bind(this);\r\n        this.onUsesTimesheet = this.onUsesTimesheet.bind(this)\r\n        this.onSalaryFollowsProfits = this.onSalaryFollowsProfits.bind(this)\r\n        this.onIsConfigured = this.onIsConfigured.bind(this)\r\n    }\r\n\r\n    onUsesTimesheet() {\r\n        this.setState({\r\n            require_verification_before_posting_payslips: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onSalaryFollowsProfits() {\r\n        this.setState({\r\n            salary_follows_profits: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onIsConfigured() {\r\n        this.setState({\r\n            is_configured: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onPayrollOfficer (e){\r\n        this.setState({payroll_officer: e.value})\r\n    }\r\n\r\n    onPayrollAccount (e){\r\n        this.setState({payroll_account: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            last_payroll_date,\r\n            require_verification_before_posting_payslips,\r\n            salary_follows_profits,\r\n            payroll_officer,\r\n            payroll_account,\r\n            payroll_counter,\r\n            business_social_security_number,\r\n            is_configured\r\n        } = this.state;\r\n        const employeeconfig = {\r\n            last_payroll_date,\r\n            require_verification_before_posting_payslips,\r\n            salary_follows_profits,\r\n            payroll_officer,\r\n            payroll_account,\r\n            payroll_counter,\r\n            business_social_security_number,\r\n            is_configured\r\n        };\r\n        this.props.addEmployeeConfig(employeeconfig);\r\n        this.setState({\r\n            last_payroll_date: '',\r\n            require_verification_before_posting_payslips: true,\r\n            salary_follows_profits: true,\r\n            payroll_officer: '',\r\n            payroll_account: '',\r\n            payroll_counter: '',\r\n            business_social_security_number: '',\r\n            is_configured: true\r\n        });\r\n    };\r\n\r\n    static propTypes = {\r\n        addEmployeeConfig: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployees()\r\n        this.props.getAccounts()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            last_payroll_date,\r\n            payroll_officer,\r\n            payroll_account,\r\n            payroll_counter,\r\n            business_social_security_number,\r\n        } = this.state;\r\n\r\n        const { employees } = this.props;\r\n        const { accounts } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Employee Config</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"business_social_security_number\"\r\n                                onChange={this.onChange}\r\n                                value={business_social_security_number}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Business Social Security Number</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <label>Payroll Counter</label>\r\n                        <InputNumber\r\n                            name=\"payroll_counter\"\r\n                            mode=\"decimal\"\r\n                            onChange={this.onChange}\r\n                            value={payroll_counter}\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Calendar\r\n                            showIcon={true}\r\n                            className=\"form-control\"\r\n                            name=\"last_payroll_date\"\r\n                            onChange={this.onChange}\r\n                            value={last_payroll_date}\r\n                            dateFormat=\"yy-mm-dd\"\r\n                        />\r\n                        <label htmlFor=\"inputtext\">Last Payroll Date</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>REQUIRE VERIFICATION :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.onUsesTimesheet}\r\n                            checked={this.state.require_verification_before_posting_payslips}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>SALARY FOLLOWS PROFITS :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.onSalaryFollowsProfits}\r\n                            checked={this.state.salary_follows_profits}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>IS CONFIGURED :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.onIsConfigured}\r\n                            checked={this.state.is_configured}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={payroll_officer}\r\n                            onChange={this.onPayrollOfficer}\r\n                            options={employees}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"id_number\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT PAYROLL OFFICER</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={payroll_account}\r\n                            onChange={this.onPayrollAccount}\r\n                            options={accounts}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"keDidy\"\r\n                        />\r\n                        <label htmlFor=\"dropdown\">SELECT PAYROLL ACCOUNT</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees,\r\n    accounts: state.accounts.accounts,\r\n})\r\nexport default connect(mapStateToProps, {getEmployees, getAccounts, addEmployeeConfig})(EmployeeConfigForm);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_CONFIG } from '../types/employeeconfigTypes';\r\nimport { employeeconfigURL } from '../constants';\r\n\r\n// Add\r\nexport const addEmployeeConfig = employeeconfig => dispatch => {\r\n    axios.post(employeeconfigURL, employeeconfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_CONFIG,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getEmployeeAttendanceTimesheets, addEmployeeAttendanceTimesheet, editEmployeeAttendanceTimesheet, deleteEmployeeAttendanceTimesheet } from '..//../actions/employeeattendancetimesheets';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getEmployeeTimesheetMonthChoices, getEmployeeYearChoices } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\n\r\nclass EmployeeAttendanceTimesheets extends Component {\r\n\r\n    emptyEmployeeAttendanceTimesheet = {\r\n        employee: null,\r\n        month: null,\r\n        year: null,\r\n        recorded_by: null,\r\n        complete: false,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employeeattendancetimesheets: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEmployeeAttendanceTimesheets: null,\r\n            employeeattendancetimesheetDialog: false,\r\n            deleteEmployeeAttendanceTimesheetDialog: false,\r\n            deleteEmployeeAttendanceTimesheetsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                employee: null,\r\n                month: null,\r\n                year: null,\r\n                recorded_by: null,\r\n                complete: false,\r\n            },\r\n            newData: {\r\n                employee: null,\r\n                month: null,\r\n                year: null,\r\n                recorded_by: null,\r\n                complete: false,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEmployeeAttendanceTimesheet = this.saveEmployeeAttendanceTimesheet.bind(this);\r\n        this.editEmployeeAttendanceTimesheet = this.editEmployeeAttendanceTimesheet.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEmployeeAttendanceTimesheet = this.confirmDeleteEmployeeAttendanceTimesheet.bind(this);\r\n        this.deleteEmployeeAttendanceTimesheet = this.deleteEmployeeAttendanceTimesheet.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEmployeeAttendanceTimesheets = this.deleteSelectedEmployeeAttendanceTimesheets.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEmployeeAttendanceTimesheetDialog = this.hideDeleteEmployeeAttendanceTimesheetDialog.bind(this);\r\n        this.hideDeleteEmployeeAttendanceTimesheetsDialog = this.hideDeleteEmployeeAttendanceTimesheetsDialog.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n        this.onMonth = this.onMonth.bind(this);\r\n        this.onYear = this.onYear.bind(this);\r\n        this.onRecordedBy = this.onRecordedBy.bind(this);\r\n        this.onComplete = this.onComplete.bind(this);\r\n    }\r\n\r\n    onEmployee (e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    onMonth (e){\r\n        this.setState({month: e.value})\r\n    }\r\n\r\n    onYear (e){\r\n        this.setState({year: e.value})\r\n    }\r\n\r\n    onRecordedBy (e){\r\n        this.setState({recorded_by: e.value})\r\n    }\r\n\r\n    onComplete() {\r\n        this.setState({\r\n            complete: !this.state.checked\r\n        });\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        employeeattendancetimesheets : PropTypes.array.isRequired,\r\n        getEmployeeAttendanceTimesheets: PropTypes.func.isRequired,\r\n        addEmployeeAttendanceTimesheet: PropTypes.func.isRequired,\r\n        editEmployeeAttendanceTimesheet: PropTypes.func.isRequired,\r\n        deleteEmployeeAttendanceTimesheet: PropTypes.func.isRequired,\r\n        getAccounts: PropTypes.func.isRequired,\r\n        getCustomerStatusChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployeeAttendanceTimesheets()\r\n        this.props.getEmployees()\r\n        this.props.getEmployeeTimesheetMonthChoices()\r\n        this.props.getEmployeeYearChoices()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                employee: null,\r\n                month: null,\r\n                year: null,\r\n                recorded_by: null,\r\n                complete: false,\r\n            },\r\n            submitted: false,\r\n            employeeattendancetimesheetDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            employeeattendancetimesheetDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEmployeeAttendanceTimesheetDialog() {\r\n        this.setState({ deleteEmployeeAttendanceTimesheetDialog: false });\r\n    }\r\n\r\n    hideDeleteEmployeeAttendanceTimesheetsDialog() {\r\n        this.setState({ deleteEmployeeAttendanceTimesheetsDialog: false });\r\n    }\r\n\r\n\r\n    saveEmployeeAttendanceTimesheet = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            employee,\r\n            month,\r\n            year,\r\n            recorded_by,\r\n            complete,\r\n        } = this.state;\r\n        const employeeattendancetimesheet = {\r\n            employee,\r\n            month,\r\n            year,\r\n            recorded_by,\r\n            complete,\r\n        };\r\n        this.props.addEmployeeAttendanceTimesheet(employeeattendancetimesheet);\r\n        this.setState({\r\n            employee: null,\r\n            month: null,\r\n            year: null,\r\n            recorded_by: null,\r\n            complete: true,\r\n            employeeattendancetimesheetDialog: false\r\n        });\r\n        this.props.history.push('/employeeattendancetimesheets');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                employee: null,\r\n                month: null,\r\n                year: null,\r\n                recorded_by: null,\r\n                complete: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editEmployeeAttendanceTimesheet(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            employee,\r\n            month,\r\n            year,\r\n            recorded_by,\r\n            complete,\r\n\r\n        } = this.state.selectRow;\r\n        const employeeattendancetimesheet = {\r\n            employee,\r\n            month,\r\n            year,\r\n            recorded_by,\r\n            complete,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEmployeeAttendanceTimesheet(this.state.selectRow.id, employeeattendancetimesheet);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteEmployeeAttendanceTimesheet(employeeattendancetimesheet) {\r\n        this.setState({\r\n            employeeattendancetimesheet,\r\n            deleteEmployeeAttendanceTimesheetDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEmployeeAttendanceTimesheet() {\r\n        this.props.deleteEmployeeAttendanceTimesheet();\r\n        this.setState({\r\n            deleteEmployeeAttendanceTimesheetDialog: false,\r\n            employeeattendancetimesheet: this.emptyActiveCustomer\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEmployeeAttendanceTimesheetsDialog: true });\r\n    }\r\n\r\n    deleteSelectedEmployeeAttendanceTimesheets() {\r\n        this.props.deleteEmployeeAttendanceTimesheet();\r\n        this.setState({\r\n            deleteEmployeeAttendanceTimesheetsDialog: false,\r\n            selectedEmployeeAttendanceTimesheets: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Employee Attendance Timesheet</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EMPLOYEE ATTENDANCE TIMESHEET\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEmployeeAttendanceTimesheet(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const employeeattendancetimesheetDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEmployeeAttendanceTimesheet} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEmployeeAttendanceTimesheet}/>\r\n            </div>\r\n        );\r\n\r\n\r\n        const deleteEmployeeAttendanceTimesheetsDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteEmployeeAttendanceTimesheetsDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedEmployeeAttendanceTimesheets} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          employee,\r\n          month,\r\n          year,\r\n          recorded_by,\r\n        } = this.state;\r\n\r\n        const {employeetimesheetmonthchoices} = this.props;\r\n        const {employeeyearchoices} = this.props;\r\n        const {employees} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.employeeattendancetimesheets}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEmployeeAttendanceTimesheets} onSelectionChange={e => this.setState({selectedEmployeeAttendanceTimesheets: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Employee Attendance Timesheets found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"employee\"\r\n                            header=\"Employee\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Employee\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"month\"\r\n                            header=\"Month\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Month\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"year\"\r\n                            header=\"Year\"\r\n                            sortable filter\r\n                            filterPlaceholder=\"Search by Year\"\r\n                            style={{width:'3em'}}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.employeeattendancetimesheetDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Employee Attendance Timesheet Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={employeeattendancetimesheetDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={employee}\r\n                                onChange={this.onEmployee}\r\n                                options={employee}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT EMPLOYEE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={recorded_by}\r\n                                onChange={this.onRecordedBy}\r\n                                options={employee}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT RECORDED BY</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={month}\r\n                                onChange={this.onMonth}\r\n                                options={employeetimesheetmonthchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT MONTH</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={year}\r\n                                onChange={this.onYear}\r\n                                options={employeeyearchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT YEAR</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>COMPLETE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.onComplete}\r\n                                checked={this.state.complete}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EMPLOYEE ATTANDANCE TIMESHEET\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inMonth\"\r\n                                value={this.state.selectRow.month}\r\n                                options={employeetimesheetmonthchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        month: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inYear\"\r\n                                value={this.state.selectRow.year}\r\n                                options={employeeyearchoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        year: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEmployee\"\r\n                                value={this.state.selectRow.employee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        employee: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inRecordedBy\"\r\n                                value={this.state.selectRow.recorded_by}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        recorded_by: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>COMPLETE :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            complete: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.complete}\r\n                            />\r\n                        </div>\r\n                    </Dialog>\r\n\r\n                    <Dialog visible={this.state.deleteEmployeeAttendanceTimesheetsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteEmployeeAttendanceTimesheetsDialogFooter} onHide={this.hideDeleteEmployeeAttendanceTimesheetsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.employeeattendancetimesheet && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employeeattendancetimesheets: state.employeeattendancetimesheets.employeeattendancetimesheets,\r\n    employeetimesheetmonthchoices: state.employeetimesheetmonthchoices.employeetimesheetmonthchoices,\r\n    employeeyearchoices: state.employeeyearchoices.employeeyearchoices,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployees,\r\n    getEmployeeYearChoices,\r\n    getEmployeeTimesheetMonthChoices,\r\n    getEmployeeAttendanceTimesheets,\r\n    editEmployeeAttendanceTimesheet,\r\n    deleteEmployeeAttendanceTimesheet,\r\n    addEmployeeAttendanceTimesheet} ) (EmployeeAttendanceTimesheets);\r\n","import axios from 'axios';\r\nimport { ADD_EMPLOYEE_ATTENDANCE_TIMESHEET, EDIT_EMPLOYEE_ATTENDANCE_TIMESHEET, GET_EMPLOYEE_ATTENDANCE_TIMESHEETS, GET_EMPLOYEE_ATTENDANCE_TIMESHEET, DELETE_EMPLOYEE_ATTENDANCE_TIMESHEET } from '../types/employeeattendancetimesheetTypes';\r\nimport { employeeattendancetimesheetsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEmployeeAttendanceTimesheets=  () => dispatch => {\r\n    axios.get(employeeattendancetimesheetsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_EMPLOYEE_ATTENDANCE_TIMESHEETS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteEmployeeAttendanceTimesheet = (id) => dispatch => {\r\n    axios.delete(employeeattendancetimesheetsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EMPLOYEE_ATTENDANCE_TIMESHEET,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEmployeeAttendanceTimesheet = employeeattendancetimesheet => dispatch => {\r\n    axios.post(employeeattendancetimesheetsURL, employeeattendancetimesheet)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EMPLOYEE_ATTENDANCE_TIMESHEET,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getEmployeeAttendanceTimesheet = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/employees/employee-attendance-timesheets/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EMPLOYEE_ATTENDANCE_TIMESHEET,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEmployeeAttendanceTimesheet = (id, employeeattendancetimesheet) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/employees/employee-attendance-timesheets/${id}/`, employeeattendancetimesheet)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EMPLOYEE_ATTENDANCE_TIMESHEET,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addEventConfig } from '..//../actions/eventconfig';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\n\r\n\r\n\r\nclass EventConfigForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            number_of_agenda_items: '',\r\n            autogenerate_events_from_models: false,\r\n      }\r\n\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onCompleted = this.onCompleted.bind(this);\r\n    }\r\n\r\n    onCompleted() {\r\n      this.setState({\r\n        autogenerate_events_from_models: !this.state.checked\r\n      });\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        number_of_agenda_items,\r\n        autogenerate_events_from_models,\r\n      } = this.state;\r\n\r\n      const eventconfig = {\r\n        number_of_agenda_items,\r\n        autogenerate_events_from_models,\r\n      };\r\n\r\n      this.props.addEventConfig(eventconfig);\r\n      this.setState({\r\n          number_of_agenda_items: '',\r\n          autogenerate_events_from_models:'',\r\n\r\n        });\r\n    };\r\n\r\n    static propTypes = {\r\n        addEventConfig: PropTypes.func.isRequired,\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n          number_of_agenda_items,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Add Event Config</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                  <label>Number Of Agenda Items</label>\r\n                  <InputNumber\r\n                    className=\"form-control\"\r\n                    name=\"number_of_agenda_items\"\r\n                    onChange={this.onChange}\r\n                    value={number_of_agenda_items}\r\n                    showButtons\r\n                    buttonLayout=\"horizontal\"\r\n                    decrementButtonClassName=\"p-button-danger\"\r\n                    incrementButtonClassName=\"p-button-success\"\r\n                    incrementButtonIcon=\"pi pi-plus\"\r\n                    decrementButtonIcon=\"pi pi-minus\"\r\n                    step={1}\r\n                  />\r\n                </div>\r\n                  <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                    <label>AUTOGENERATED EVENTS FROM MODELS :</label>\r\n                    <Checkbox\r\n                      inputId=\"working\"\r\n                      onChange={this.onCompleted}\r\n                      checked={this.state.autogenerate_events_from_models}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                  </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, { addEventConfig })(EventConfigForm);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_EVENT_CONFIG,\r\n    } from '../types/eventconfigTypes';\r\nimport { eventconfigURL } from '../constants';\r\n\r\n// Add\r\nexport const addEventConfig = (eventconfig) => dispatch => {\r\n    axios.post(eventconfigURL, eventconfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EVENT_CONFIG,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getUpcomingEvents} from '..//../actions/upcomingevents';\r\nimport \"./form.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass UpcomingEvents extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            upcomingevents: null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEvents: null,\r\n\r\n        };\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        upcomingevents : PropTypes.array.isRequired,\r\n        getUpcomingEvents: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUpcomingEvents();\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Upcoming Events</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.upcomingevents}\r\n                    style={{background: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedEvents} onSelectionChange={e => this.setState({selectedEvents: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Upcoming Events found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"owner\"\r\n                        header=\"Owner\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Owner\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"start_time\"\r\n                        header=\"Start Time\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Start Time\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"end_time\"\r\n                        header=\"End Time\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by End Time\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n\r\n                    />\r\n\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    upcomingevents: state.upcomingevents.upcomingevents\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUpcomingEvents} ) (UpcomingEvents);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_UPCOMING_EVENT,\r\n        GET_UPCOMING_EVENTS,\r\n        DELETE_UPCOMING_EVENT,\r\n        GET_UPCOMING_EVENT\r\n    } from '../types/upcomingeventTypes';\r\nimport { upcomingeventsURL } from '../constants';\r\n\r\n// Get\r\nexport const getUpcomingEvents = () => dispatch => {\r\n    axios.get(upcomingeventsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UPCOMING_EVENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteUpcomingEvent = (id) => dispatch => {\r\n    axios.delete(upcomingeventsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_UPCOMING_EVENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addUpcomingEvent = (upcomingevent) => dispatch => {\r\n    axios.post(upcomingeventsURL, upcomingevent)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_UPCOMING_EVENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getUpcomingEvent = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/events/upcoming-events/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UPCOMING_EVENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCompletedEvents} from '..//../actions/completedevents';\r\nimport \"./form.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass CompletedEvents extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            completedevents: null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEvents: null,\r\n\r\n        };\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        completedevents : PropTypes.array.isRequired,\r\n        getCompletedEvents: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCompletedEvents();\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n            <h1>Manage Completed Events</h1>\r\n            <div className=\"datatable-fancy-icons\">\r\n                <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.completedevents}\r\n                    style={{background: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedEvents} onSelectionChange={e => this.setState({selectedEvents: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Completed Events found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"owner\"\r\n                        header=\"Owner\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Owner\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"start_time\"\r\n                        header=\"Start Time\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by Start Time\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"end_time\"\r\n                        header=\"End Time\"\r\n                        sortable filter\r\n                        filterPlaceholder=\"Search by End Time\"\r\n                        style={{width:'3em'}}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', backgroundColor: '#4EB0A5', textAlign: 'center'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n\r\n                    />\r\n\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    completedevents: state.completedevents.completedevents\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCompletedEvents} ) (CompletedEvents);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_COMPLETED_EVENT,\r\n        GET_COMPLETED_EVENTS,\r\n        DELETE_COMPLETED_EVENT,\r\n        GET_COMPLETED_EVENT\r\n    } from '../types/completedeventTypes';\r\nimport { completedeventsURL } from '../constants';\r\n\r\n// Get\r\nexport const getCompletedEvents = () => dispatch => {\r\n    axios.get(completedeventsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPLETED_EVENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteCompletedEvent = (id) => dispatch => {\r\n    axios.delete(completedeventsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_COMPLETED_EVENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCompletedEvent = (completedevent) => dispatch => {\r\n    axios.post(completedeventsURL, completedevent)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_COMPLETED_EVENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getCompletedEvent = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/events/completed-events/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_COMPLETED_EVENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INVENTORY_CATEGORY,\r\n        GET_INVENTORY_CATEGORIES,\r\n        DELETE_INVENTORY_CATEGORY,\r\n        GET_INVENTORY_CATEGORY,\r\n        EDIT_INVENTORY_CATEGORY\r\n    } from '../types/inventorycategoryTypes';\r\nimport { inventorycategoriesURL } from '../constants';\r\n\r\n// Get\r\nexport const getInventoryCategories = () => dispatch => {\r\n    axios.get(inventorycategoriesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_CATEGORIES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInventoryCategory = (id) => dispatch => {\r\n    axios.delete(inventorycategoriesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INVENTORY_CATEGORY,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInventoryCategory = (inventorycategory) => dispatch => {\r\n    axios.post(inventorycategoriesURL, inventorycategory)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVENTORY_CATEGORY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInventoryCategory = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/inventory-categories/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_CATEGORY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editInventoryCategory = (id, inventorycategory) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/inventory-categories/${id}/`, inventorycategory)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_INVENTORY_CATEGORY,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getInventoryCategories, addInventoryCategory, editInventoryCategory, deleteInventoryCategory } from '..//../actions/inventorycategories';\r\nimport \"./form.css\";\r\n\r\nclass InventoryCategories extends Component {\r\n\r\n    emptyInventoryCategory = {\r\n        name: '',\r\n        parent: null,\r\n        description: ''\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inventorycategories : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedInventoryCategories: null,\r\n            inventorycategoryDialog: false,\r\n            deleteInventoryCategoryDialog: false,\r\n            deleteInventoryCategoriesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                parent: null,\r\n                description: ''\r\n            },\r\n            newData: {\r\n                name: '',\r\n                parent: null,\r\n                description: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveInventoryCategory = this.saveInventoryCategory.bind(this);\r\n        this.editInventoryCategory = this.editInventoryCategory.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteInventoryCategory = this.confirmDeleteInventoryCategory.bind(this);\r\n        this.deleteInventoryCategory = this.deleteInventoryCategory.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedInventoryCategories = this.deleteSelectedInventoryCategories.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteInventoryCategoryDialog = this.hideDeleteInventoryCategoryDialog.bind(this);\r\n        this.hideDeleteInventoryCategoriesDialog = this.hideDeleteInventoryCategoriesDialog.bind(this);\r\n        this.onParent = this.onParent.bind(this);\r\n    }\r\n\r\n    onParent (e){\r\n        this.setState({parent: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        inventorycategories : PropTypes.array.isRequired,\r\n        getInventoryCategories: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInventoryCategories();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                parent: null,\r\n                description: ''\r\n            },\r\n            submitted: false,\r\n            inventorycategoryDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            inventorycategoryDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteInventoryCategoryDialog() {\r\n        this.setState({ deleteInventoryCategoryDialog: false });\r\n    }\r\n\r\n    hideDeleteInventoryCategoriesDialog() {\r\n        this.setState({ deleteInventoryCategoriesDialog: false });\r\n    }\r\n\r\n    saveInventoryCategory = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            parent,\r\n            description\r\n        } = this.state;\r\n        const inventorycategory = {\r\n            name,\r\n            parent,\r\n            description\r\n        };\r\n        this.props.addInventoryCategory(inventorycategory);\r\n        this.setState({\r\n            name: '',\r\n            parent: null,\r\n            description: '',\r\n            inventorycategoryDialog: false\r\n        });\r\n        this.props.history.push('/inventorycategories');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                parent: null,\r\n                description: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editInventoryCategory(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            parent,\r\n            description\r\n        } = this.state.selectRow;\r\n        const inventorycategory = {\r\n            name,\r\n            parent,\r\n            description\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editInventoryCategory(this.state.selectRow.id, inventorycategory);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteInventoryCategory(inventorycategory) {\r\n        this.setState({\r\n            inventorycategory,\r\n            deleteInventoryCategoryDialog: true\r\n        });\r\n    }\r\n\r\n    deleteInventoryCategory() {\r\n        this.props.deleteInventoryCategory();\r\n        this.setState({\r\n            deleteInventoryCategoryDialog: false,\r\n            inventorycategory: this.emptyInventoryCategory\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteInventoryCategoriesDialog: true });\r\n    }\r\n\r\n    deleteSelectedInventoryCategories() {\r\n        this.props.deleteInventoryCategory();\r\n        this.setState({\r\n            deleteInventoryCategoriesDialog: false,\r\n            selectedInventoryCategories: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Inventory Category</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW INVENTORY CATEGORY\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteInventoryCategory(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const inventorycategoryDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveInventoryCategory} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editInventoryCategory}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            parent,\r\n            description\r\n        } = this.state;\r\n\r\n        const {inventorycategories} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.inventorycategories}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedInventoryCategories} onSelectionChange={e => this.setState({selectedInventoryCategories: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Inventory\r\n                        Categories found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header= \"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.inventorycategoryDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Inventory Category\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={inventorycategoryDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={parent}\r\n                                    onChange={this.onParent}\r\n                                    options={inventorycategories}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT PARENT</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE INVENTORY CATEGORY\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inName\"\r\n                                    value={this.state.selectRow.name}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                description: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inDescription\"\r\n                                    value={this.state.selectRow.description}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inParent\"\r\n                                value={this.state.selectRow.parent}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            parent: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorycategories}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventorycategories: state.inventorycategories.inventorycategories,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getInventoryCategories,\r\n        addInventoryCategory,\r\n        deleteInventoryCategory,\r\n        editInventoryCategory,\r\n    }) (InventoryCategories);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getDebitNotes} from '..//../actions/debitnotes';\r\nimport \"./form.css\";\r\n\r\n\r\nclass DebitNotes extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            debitnotes : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        debitnotes : PropTypes.array.isRequired,\r\n        getDebitNotes: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getDebitNotes();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Debit Notes</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.debitnotes}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Debit Notes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"order\"\r\n                        header=\"Order\"\r\n                        sortable filter filterPlaceholder=\"Search by Order\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    debitnotes: state.debitnotes.debitnotes\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDebitNotes} ) (DebitNotes);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_DEBIT_NOTE,\r\n        GET_DEBIT_NOTES,\r\n        DELETE_DEBIT_NOTE,\r\n        GET_DEBIT_NOTE\r\n    } from '../types/debitnoteTypes';\r\nimport { debitnotesURL } from '../constants';\r\n\r\n// Get\r\nexport const getDebitNotes = () => dispatch => {\r\n    axios.get(debitnotesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DEBIT_NOTES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteDebitNote = (id) => dispatch => {\r\n    axios.delete(debitnotesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_DEBIT_NOTE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addDebitNote = (debitnote) => dispatch => {\r\n    axios.post(debitnotesURL, debitnote)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_DEBIT_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getDebitNote = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/debit-notes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DEBIT_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INVENTORY_ORDER,\r\n        GET_INVENTORY_ORDERS,\r\n        DELETE_INVENTORY_ORDER,\r\n        GET_INVENTORY_ORDER\r\n    } from '../types/inventoryorderTypes';\r\nimport { GET_ERRORS  } from './types';\r\nimport { inventoryordersURL } from '../constants';\r\n\r\n// Get\r\nexport const getInventoryOrders = () => dispatch => {\r\n    axios.get(inventoryordersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ORDERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInventoryOrder = (id) => dispatch => {\r\n    axios.delete(inventoryordersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INVENTORY_ORDER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInventoryOrder= inventoryorder => dispatch => {\r\n    axios.post(inventoryordersURL, inventoryorder)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVENTORY_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err =>{\r\n            const errors = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n\r\n        }\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: errors\r\n        });\r\n    });\r\n}\r\n\r\n\r\n//get\r\nexport const getInventoryOrder = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/inventory-orders/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getOrderItems} from '..//../actions/orderitems';\r\n\r\n\r\nconst DebitNoteLines = (props) => {\r\n  useEffect(() => {\r\n        if(!props.fetched) {\r\n            props.getOrderItems();\r\n        }\r\n        console.log('mount it!');\r\n    }, [props]);\r\n\r\n  const { orderitems } = props;\r\n\r\n  console.log(orderitems)\r\n\r\n\r\n  let orderItems = orderitems.length > 0\r\n    && orderitems.map((item, i) => {\r\n    return (\r\n      <option key={i} value={item.id}>{item.item}</option>\r\n    )\r\n  }, this);\r\n\r\n  return (\r\n    props.lines.map((val, idx) => {\r\n      let item = `item-${idx}`, quantity = `quantity-${idx}`\r\n      return (\r\n        <tr key={val.index}>\r\n          <td>\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              data-id={idx}\r\n              id={quantity}\r\n              className=\"form-control\"\r\n            />\r\n          </td>\r\n          <td>\r\n            <select\r\n              name=\"item\"\r\n              id={item}\r\n              data-id={idx}\r\n              className=\"form-control\"\r\n            >\r\n               {orderItems}\r\n            </select>\r\n          </td>\r\n\r\n          <td>\r\n            {\r\n            idx===0?<Button onClick={()=>props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n            : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => props.delete(val))} />\r\n            }\r\n          </td>\r\n        </tr >\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    orderitems: state.orderitems.orderitems\r\n})\r\n\r\nexport default connect(mapStateToProps, {getOrderItems} ) (DebitNoteLines);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_ORDER_ITEM,\r\n        GET_ORDER_ITEMS,\r\n        DELETE_ORDER_ITEM,\r\n        GET_ORDER_ITEM,\r\n        EDIT_ORDER_ITEM\r\n    } from '../types/orderitemTypes';\r\nimport { orderitemsURL } from '../constants';\r\n\r\n// Get\r\nexport const getOrderItems = () => dispatch => {\r\n    axios.get(orderitemsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ORDER_ITEMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteOrderItem = (id) => dispatch => {\r\n    axios.delete(orderitemsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_ORDER_ITEM,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addOrderItem = (orderitem) => dispatch => {\r\n    axios.post(orderitemsURL, orderitem)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_ORDER_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getOrderItem = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/orderitems/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_ORDER_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editOrderItem = (id, orderitem) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/orderitems/${id}/`, orderitem)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_ORDER_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import React, { Component } from 'react'\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport { connect } from 'react-redux';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { getInventoryOrders } from '..//../actions/inventoryorders';\r\nimport { addDebitNote } from '..//../actions/debitnotes';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport PropTypes from 'prop-types';\r\nimport DebitNoteLines from './DebitNoteLines';\r\n\r\nclass DebitNoteForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            date: '',\r\n            comments: '',\r\n            order: null,\r\n            lines: [{ index: Math.random(), item: \"\", quantity: '' }],\r\n\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({order: e.value})\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"item\", \"quantity\"].includes(e.target.name)) {\r\n            let lines = [...this.state.lines]\r\n            lines[e.target.dataset.id][e.target.name] = e.target.value;\r\n        } else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            lines: [...prevState.lines, { index: Math.random(), item: \"\", quantity: '' }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            lines: this.state.lines.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            lines: this.state.lines.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            date,\r\n            comments,\r\n            order,\r\n            lines\r\n        } = this.state;\r\n\r\n        const note = {\r\n            date,\r\n            comments,\r\n            order,\r\n            lines,\r\n        };\r\n\r\n        this.props.addDebitNote(note);\r\n        this.setState({\r\n            lines: [],\r\n            order: '',\r\n            date: '',\r\n            comments: '',\r\n        });\r\n    };\r\n\r\n\r\n    static propTypes = {\r\n        addDebitNote: PropTypes.func.isRequired,\r\n        getInventoryOrders: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getInventoryOrders();\r\n    }\r\n\r\n    render = () => {\r\n        const {\r\n            date,\r\n            order,\r\n            comments,\r\n        } = this.state;\r\n\r\n        let { lines } = this.state\r\n\r\n        const { inventoryorders } = this.props;\r\n\r\n\r\n        return (\r\n          <div className=\"card card-body mt-4 mb-4\">\r\n            <h2>Manage Debit Note</h2>\r\n            <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n              <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                    <span className=\"p-float-label\">\r\n                        <InputTextarea\r\n                            name=\"comments\"\r\n                            onChange={this.onChange}\r\n                            value={comments}\r\n                        />\r\n                        <label htmlFor=\"inputtext\">COMMENTS</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                    <span className=\"p-float-label\">\r\n                        <Calendar\r\n                            showIcon={true}\r\n                            className=\"form-control\"\r\n                            name=\"date\"\r\n                            onChange={this.onChange}\r\n                            value={date}\r\n                            dateFormat=\"yy-mm-dd\"\r\n                        />\r\n                        <label htmlFor=\"inputtext\">Date</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            value={order}\r\n                            onChange={this.onTypeChange}\r\n                            options={inventoryorders}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"tracking_number\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                        <label htmlFor=\"inputtext\">SELECT ACCOUNT TYPE</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                </div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>QUANTITY</th>\r\n                            <th>ORDER ITEMS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <DebitNoteLines add={this.addNewRow} delete={this.clickOnDelete.bind(this)} lines={lines} />\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr><td colSpan=\"4\">\r\n                            <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                        </td></tr>\r\n                    </tfoot>\r\n                </table>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventoryorders: state.inventoryorders.inventoryorders\r\n})\r\n\r\nexport default connect(mapStateToProps, {getInventoryOrders, addDebitNote})(DebitNoteForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getInventoryOrders} from '..//../actions/inventoryorders';\r\nimport \"./form.css\";\r\n\r\n\r\nclass InventoryOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inventoryorders : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        inventoryorders : PropTypes.array.isRequired,\r\n        getInventoryOrders: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInventoryOrders();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Inventory Orders</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.inventoryorders}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Inventory Orders found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"order\"\r\n                        header=\"Order\"\r\n                        sortable filter filterPlaceholder=\"Search by Order\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"item\"\r\n                        header=\"Item\"\r\n                        sortable filter filterPlaceholder=\"Search by Item\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"quantity\"\r\n                        header=\"quantity\"\r\n                        sortable filter filterPlaceholder=\"Search by quantity\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"unit\"\r\n                        header=\"Unit\"\r\n                        sortable filter filterPlaceholder=\"Search by Unit\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"order_price\"\r\n                        header=\"Order Price\"\r\n                        sortable filter filterPlaceholder=\"Search by Order Price\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"received\"\r\n                        header=\"Received\"\r\n                        sortable filter filterPlaceholder=\"Search by Received\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"fully_received\"\r\n                        header=\"Fully Received\"\r\n                        sortable filter filterPlaceholder=\"Search by Fully Received\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"received_total\"\r\n                        header=\"Received Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Received Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventoryorders: state.inventoryorders.inventoryorders\r\n})\r\n\r\nexport default connect(mapStateToProps, {getInventoryOrders} ) (InventoryOrders);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_WAREHOUSE,\r\n        GET_WAREHOUSES,\r\n        DELETE_WAREHOUSE,\r\n        GET_WAREHOUSE,\r\n        EDIT_WAREHOUSE\r\n    } from '../types/warehouseTypes';\r\nimport { warehousesURL } from '../constants';\r\n\r\n// Get\r\nexport const getWarehouses = () => dispatch => {\r\n    axios.get(warehousesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_WAREHOUSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteWarehouse = (id) => dispatch => {\r\n    axios.delete(warehousesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_WAREHOUSE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addWarehouse = (warehouse) => dispatch => {\r\n    axios.post(warehousesURL, warehouse)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_WAREHOUSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getWarehouse = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/warehouses/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_WAREHOUSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editWarehouse = (id, warehouse) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/warehouses/${id}/`, warehouse)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_WAREHOUSE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { GET_INVENTORY_ITEMS } from './types';\r\nimport { inventoryitemsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getInventoryItems = () => dispatch => {\r\n    axios.get(inventoryitemsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ITEMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}","import React, { Component } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport {  getInventoryItems } from '..//../actions/inventoryitems';\r\n\r\n\r\nclass OrderItems extends Component{\r\n\r\n\r\n  componentDidMount(){\r\n    this.props.getUnitOfMeasureChoices();\r\n    this.props.getInventoryItems();\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    const { unitofmeasurechoices } = this.props;\r\n    const { inventoryitems } = this.props;\r\n\r\n\r\n    let unitOfMeasures = unitofmeasurechoices.length > 0\r\n      && unitofmeasurechoices.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.key}>{item.value}</option>\r\n      )\r\n    }, this);\r\n\r\n\r\n   let inventoryItems = inventoryitems.length > 0\r\n    && inventoryitems.map((item, i) => {\r\n    return (\r\n      <option key={i} value={item.id}>{item.name}</option>\r\n    )\r\n  }, this);\r\n\r\n    \r\n\r\n    return (\r\n      this.props.items.map((val, idx) => {\r\n        let item = `item-${idx}`, quantity = `quantity-${idx}`, unit = `unit-${idx}`, order_price = `order_price-${idx}`\r\n        return (\r\n          <tr key={val.index}>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"quantity\"\r\n                data-id={idx}\r\n                id={quantity}\r\n                className=\"form-control \"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                name=\"order_price\"\r\n                data-id={idx}\r\n                id={order_price}\r\n                className=\"form-control \"\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                name=\"item\"\r\n                id={item}\r\n                data-id={idx}\r\n                className=\"form-control\"\r\n              >\r\n                 {inventoryItems}\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select\r\n                name=\"unit\"\r\n                id={unit}\r\n                data-id={idx}\r\n                className=\"form-control\"\r\n              >\r\n                 {unitOfMeasures}\r\n              </select>\r\n            </td>\r\n\r\n            <td>\r\n              {\r\n              idx===0?<Button onClick={()=>this.props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n              : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => this.props.delete(val))} />\r\n              }\r\n            </td>\r\n          </tr >\r\n        )\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    inventoryitems: state.inventoryitems.inventoryitems,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getInventoryItems,  getUnitOfMeasureChoices } ) (OrderItems);\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport { connect } from 'react-redux';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getActiveSuppliers } from '..//../actions/activesuppliers';\r\nimport { getWarehouses } from '..//../actions/warehouses';\r\nimport { getInventoryOrderStatusChoices } from '..//../actions/choices';\r\nimport { addInventoryOrder } from '..//../actions/inventoryorders';\r\nimport { getTaxes} from '..//../actions/taxes';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport PropTypes from 'prop-types';\r\nimport OrderItems from './OrderItems';\r\n\r\n\r\n\r\n\r\nclass InventoryOrderForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      validated_by: null,\r\n      expected_receipt_date: '',\r\n      date: '',\r\n      due: '',\r\n      supplier: null,\r\n      ship_to: null,\r\n      notes: '',\r\n      status: null,\r\n      tax: null,\r\n      issuing_inventory_controller: null,\r\n      items:[{ndex: Math.random(), item: \"\", quantity: '', unit: '', order_price: '',}],\r\n\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.addNewRow = this.addNewRow.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    this.onValidatedBy = this.onValidatedBy.bind(this);\r\n    this.onSupplier = this.onSupplier.bind(this);\r\n    this.onShipTo = this.onShipTo.bind(this);\r\n    this.onStatus = this.onStatus.bind(this);\r\n    this.onTax = this.onTax.bind(this);\r\n    this.onIssuingInventoryController = this.onIssuingInventoryController.bind(this);\r\n  }\r\n\r\n  onValidatedBy (e){\r\n      this.setState({validated_by: e.value})\r\n    }\r\n\r\n  onSupplier (e){\r\n      this.setState({supplier: e.value})\r\n    }\r\n\r\n  onShipTo (e){\r\n      this.setState({ship_to: e.value})\r\n    }\r\n\r\n  onStatus (e){\r\n      this.setState({status: e.value})\r\n    }\r\n\r\n  onTax (e){\r\n      this.setState({tax: e.value})\r\n    }\r\n\r\n  onIssuingInventoryController (e){\r\n      this.setState({issuing_inventory_controller: e.value})\r\n    }\r\n\r\n  handleChange = (e) => {\r\n    if ([\"item\", \"quantity\", 'unit', 'order_price'].includes(e.target.name)) {\r\n        let items = [...this.state.items]\r\n        items[e.target.dataset.id][e.target.name] = e.target.value;\r\n    } else {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n  }\r\n\r\n  addNewRow = (e) => {\r\n      this.setState((prevState) => ({\r\n          items: [...prevState.items, { index: Math.random(), item: \"\", quantity: '',  unit: '', order_price: '' }],\r\n      }));\r\n  }\r\n\r\n  deleteRow = (index) => {\r\n      this.setState({\r\n          items: this.state.items.filter((s, sindex) => index !== sindex),\r\n      });\r\n      // const taskList1 = [...this.state.taskList];\r\n      // taskList1.splice(index, 1);\r\n      // this.setState({ taskList: taskList1 });\r\n  }\r\n\r\n  clickOnDelete(record) {\r\n        this.setState({\r\n            items: this.state.items.filter(r => r !== record)\r\n        });\r\n  }\r\n\r\n\r\n\r\n  onChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n\r\n\r\n\r\n  onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        validated_by,\r\n        expected_receipt_date,\r\n        date,\r\n        due,\r\n        supplier,\r\n        ship_to,\r\n        notes,\r\n        status,\r\n        issuing_inventory_controller,\r\n        tax,\r\n        items\r\n\r\n      } = this.state;\r\n\r\n      const inventoryorder = {\r\n        validated_by,\r\n        expected_receipt_date,\r\n        date,\r\n        due,\r\n        supplier,\r\n        ship_to,\r\n        notes,\r\n        status,\r\n        issuing_inventory_controller,\r\n        tax,\r\n        items\r\n\r\n      };\r\n\r\n      this.props.addInventoryOrder(inventoryorder);\r\n      console.log(inventoryorder)\r\n      this.setState({\r\n          items: [],\r\n          validated_by: '',\r\n          expected_receipt_date: '',\r\n          date: '',\r\n          due: '',\r\n          supplier: '',\r\n          supplier_invoice_number: '',\r\n          ship_to: '',\r\n          notes: '',\r\n          status: '',\r\n          issuing_inventory_controller: '',\r\n          tax: '',\r\n\r\n        });\r\n      // this.props.history.push('/inventoryorders');\r\n    };\r\n\r\n    static propTypes = {\r\n        addInventoryOrder: PropTypes.func.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getInventoryOrderStatusChoices: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getTaxes: PropTypes.func.isRequired,\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.props.getEmployees();\r\n    this.props.getWarehouses();\r\n    this.props.getActiveSuppliers();\r\n    this.props.getInventoryOrderStatusChoices();\r\n    this.props.getTaxes();\r\n    // this.props.getJournalEntries();\r\n\r\n\r\n  }\r\n\r\n  render = () => {\r\n    const {\r\n        validated_by,\r\n        expected_receipt_date,\r\n        date,\r\n        due,\r\n        supplier,\r\n        // entries,\r\n        // shipping_cost_entries,\r\n        ship_to,\r\n        notes,\r\n        status,\r\n        issuing_inventory_controller,\r\n        tax,\r\n        items,\r\n\r\n    } = this.state;\r\n\r\n\r\n    const { activesuppliers } = this.props;\r\n    const { warehouses } = this.props;\r\n    const { employees } = this.props;\r\n    const { inventoryorderstatuschoices } = this.props;\r\n    const { taxes } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body mt-4 mb-4\">\r\n        <h2>Manage Inventory Order</h2>\r\n        <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n          <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <label>Expected Date</label>\r\n              <Calendar\r\n                showIcon={true}\r\n                className=\"form-control\"\r\n                name=\"expected_receipt_date\"\r\n                onChange={this.onChange}\r\n                value={expected_receipt_date}\r\n                dateFormat=\"yy-mm-dd\"\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <label>Date</label>\r\n              <Calendar\r\n                showIcon={true}\r\n                className=\"form-control\"\r\n                name=\"date\"\r\n                onChange={this.onChange}\r\n                value={date}\r\n                dateFormat=\"yy-mm-dd\"\r\n              />\r\n            </div>\r\n             <div className=\"p-field p-col-12 p-md-6\">\r\n              <label>Due</label>\r\n              <Calendar\r\n                showIcon={true}\r\n                className=\"form-control\"\r\n                name=\"due\"\r\n                onChange={this.onChange}\r\n                value={due}\r\n                dateFormat=\"yy-mm-dd\"\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-12\">\r\n              <label>NOTES</label>\r\n              <InputTextarea\r\n                rows=\"3\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"notes\"\r\n                onChange={this.onChange}\r\n                value={notes}\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <Dropdown\r\n                placeholder =\"SELECT STATUS\"\r\n                value={status}\r\n                onChange={this.onStatus}\r\n                options={inventoryorderstatuschoices}\r\n                filter={true}\r\n                filterBy=\"id,name\"\r\n                showClear={true}\r\n                optionLabel=\"value\"\r\n                optionValue=\"key\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <Dropdown\r\n                placeholder =\"SELECT VALIDATED BY\"\r\n                value={validated_by}\r\n                onChange={this.onValidatedBy}\r\n                options={employees}\r\n                filter={true}\r\n                filterBy=\"id,name\"\r\n                showClear={true}\r\n                optionLabel=\"email\"\r\n                optionValue=\"id\"\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <Dropdown\r\n                placeholder =\"SELECT ISSUER\"\r\n                value={issuing_inventory_controller}\r\n                onChange={this.onIssuingInventoryController}\r\n                options={employees}\r\n                filter={true}\r\n                filterBy=\"id,name\"\r\n                showClear={true}\r\n                optionLabel=\"email\"\r\n                optionValue=\"id\"\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <Dropdown\r\n                placeholder =\"SELECT SHIP TO\"\r\n                value={ship_to}\r\n                onChange={this.onShipTo}\r\n                options={warehouses}\r\n                filter={true}\r\n                filterBy=\"id,name\"\r\n                showClear={true}\r\n                optionLabel=\"name\"\r\n                optionValue=\"id\"\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <Dropdown\r\n                placeholder =\"SELECT SUPPLIER\"\r\n                value={supplier}\r\n                onChange={this.onSupplier}\r\n                options={activesuppliers}\r\n                filter={true}\r\n                filterBy=\"id,name\"\r\n                showClear={true}\r\n                optionLabel=\"name\"\r\n                optionValue=\"id\"\r\n              />\r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\">\r\n              <Dropdown\r\n                placeholder =\"SELECT TAX\"\r\n                value={tax}\r\n                onChange={this.onTax}\r\n                options={taxes}\r\n                filter={true}\r\n                filterBy=\"id,name\"\r\n                showClear={true}\r\n                optionLabel=\"name\"\r\n                optionValue=\"id\"\r\n              />\r\n            </div>\r\n            \r\n\r\n            <div className=\"p-field p-col-12 p-md-12\">\r\n              <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n            </div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                  <tr>\r\n                    <th>QUANTITY</th>\r\n                    <th>Order Price</th>\r\n                    <th>Item</th>\r\n                    <th>Unit Of Measure</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <OrderItems add={this.addNewRow} delete={this.clickOnDelete.bind(this)} items={items} />\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr><td colSpan=\"4\">\r\n                      <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                  </td></tr>\r\n                </tfoot>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees,\r\n    activesuppliers: state.activesuppliers.activesuppliers,\r\n    warehouses: state.warehouses.warehouses,\r\n    taxes: state.taxes.taxes,\r\n    inventoryorderstatuschoices: state.inventoryorderstatuschoices.inventoryorderstatuschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n      mapStateToProps,\r\n      {getActiveSuppliers, getWarehouses, getTaxes, getInventoryOrderStatusChoices, getEmployees, addInventoryOrder})\r\n      (InventoryOrderForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport { getInventoryOrders } from '..//../actions/inventoryorders';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getInventoryOrderpayments, addInventoryOrderpayment, editInventoryOrderpayment, deleteInventoryOrderpayment } from '..//../actions/inventoryorderpayments';\r\nimport \"./form.css\";\r\n\r\nclass InventoryOrderpayments extends Component {\r\n\r\n    emptyInventoryOrderpayment = {\r\n        date: '',\r\n        amount: '',\r\n        comments: '',\r\n        order: null,\r\n        paid_by: null\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inventoryorderpayments : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedInventoryOrderpayments: null,\r\n            inventoryorderpaymentDialog: false,\r\n            deleteInventoryOrderpaymentDialog: false,\r\n            deleteInventoryOrderpaymentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                amount: '',\r\n                comments: '',\r\n                order: null,\r\n                paid_by: null\r\n            },\r\n            newData: {\r\n                date: '',\r\n                amount: '',\r\n                comments: '',\r\n                order: null,\r\n                paid_by: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveInventoryOrderpayment = this.saveInventoryOrderpayment.bind(this);\r\n        this.editInventoryOrderpayment = this.editInventoryOrderpayment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteInventoryOrderpayment = this.confirmDeleteInventoryOrderpayment.bind(this);\r\n        this.deleteInventoryOrderpayment = this.deleteInventoryOrderpayment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedInventoryOrderpayments = this.deleteSelectedInventoryOrderpayments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteInventoryOrderpaymentDialog = this.hideDeleteInventoryOrderpaymentDialog.bind(this);\r\n        this.hideDeleteInventoryOrderpaymentsDialog = this.hideDeleteInventoryOrderpaymentsDialog.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onPaidBy = this.onPaidBy.bind(this);\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({order: e.value})\r\n    }\r\n\r\n    onPaidBy (e){\r\n        this.setState({paid_by: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        inventoryorderpayments : PropTypes.array.isRequired,\r\n        getInventoryOrderpayments: PropTypes.func.isRequired,\r\n        getInventoryOrders: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInventoryOrderpayments();\r\n        this.props.getInventoryOrders()\r\n        this.props.getEmployees()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                date: '',\r\n                amount: '',\r\n                comments: '',\r\n                order: null,\r\n                paid_by: null\r\n            },\r\n            submitted: false,\r\n            inventoryorderpaymentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            inventoryorderpaymentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteInventoryOrderpaymentDialog() {\r\n        this.setState({ deleteInventoryOrderpaymentDialog: false });\r\n    }\r\n\r\n    hideDeleteInventoryOrderpaymentsDialog() {\r\n        this.setState({ deleteInventoryOrderpaymentsDialog: false });\r\n    }\r\n\r\n    saveInventoryOrderpayment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            date,\r\n            amount,\r\n            comments,\r\n            order,\r\n            paid_by\r\n        } = this.state;\r\n        const inventoryorderpayment = {\r\n            date,\r\n            amount,\r\n            comments,\r\n            order,\r\n            paid_by\r\n        };\r\n        this.props.addInventoryOrderpayment(inventoryorderpayment);\r\n        this.setState({\r\n            date: '',\r\n            amount: '',\r\n            comments: '',\r\n            order: null,\r\n            paid_by: null,\r\n            inventoryorderpaymentDialog: false\r\n        });\r\n        this.props.history.push('/inventoryorderpayments');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                amount: '',\r\n                comments: '',\r\n                order: null,\r\n                paid_by: null\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editInventoryOrderpayment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            date,\r\n            amount,\r\n            comments,\r\n            order,\r\n            paid_by\r\n        } = this.state.selectRow;\r\n        const inventoryorderpayment = {\r\n            date,\r\n            amount,\r\n            comments,\r\n            order,\r\n            paid_by\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editInventoryOrderpayment(this.state.selectRow.id, inventoryorderpayment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteInventoryOrderpayment(inventoryorderpayment) {\r\n        this.setState({\r\n            inventoryorderpayment,\r\n            deleteInventoryOrderpaymentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteInventoryOrderpayment() {\r\n        this.props.deleteInventoryOrderpayment();\r\n        this.setState({\r\n            deleteInventoryOrderpaymentDialog: false,\r\n            inventoryorderpayment: this.emptyInventoryOrderpayment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteInventoryOrderpaymentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedInventoryOrderpayments() {\r\n        this.props.deleteInventoryOrderpayment();\r\n        this.setState({\r\n            deleteInventoryOrderpaymentsDialog: false,\r\n            selectedInventoryOrderpayments: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Inventory Orderpayment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW INVENTORY ORDERPAYMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteInventoryOrderpayment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const inventoryorderpaymentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveInventoryOrderpayment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editInventoryOrderpayment}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            date,\r\n            amount,\r\n            comments,\r\n            order,\r\n            paid_by\r\n        } = this.state;\r\n\r\n        const { inventoryorders } = this.props;\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.inventoryorderpayments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedInventoryOrderpayments} onSelectionChange={e => this.setState({selectedInventoryOrderpayments: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Inventory Orderpayments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"paid_by\"\r\n                            header=\"Paid By\"\r\n                            sortable filter filterPlaceholder=\"Search by Paid By\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"entry\"\r\n                            header=\"Entry\"\r\n                            sortable filter filterPlaceholder=\"Search by Entry\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"order\"\r\n                            header=\"Order\"\r\n                            sortable filter filterPlaceholder=\"Search by Order\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"amount\"\r\n                            header=\"Amount\"\r\n                            sortable filter filterPlaceholder=\"Search by Amount\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"date\"\r\n                            header=\"Date\"\r\n                            sortable filter filterPlaceholder=\"Search by Date\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.inventoryorderpaymentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Inventory Orderpayment\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={inventoryorderpaymentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    className=\"form-control\"\r\n                                    name=\"date\"\r\n                                    onChange={this.onChange}\r\n                                    value={date}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Date</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>AMOUNT</label>\r\n                                <InputNumber\r\n                                    name=\"amount\"\r\n                                    onChange={this.onChange}\r\n                                    value={amount}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"comments\"\r\n                                        onChange={this.onChange}\r\n                                        value={comments}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Comments</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={order}\r\n                                    onChange={this.onTypeChange}\r\n                                    options={inventoryorders}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"tracking_number\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT ORDER</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={paid_by}\r\n                                    onChange={this.onPaidBy}\r\n                                    options={employees}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"employee_number\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT PAID BY</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE INVENTORY ORDERPAYMENT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inDate\"\r\n                                value={this.state.selectRow.date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                           <InputNumber\r\n                                id=\"inAmount\"\r\n                                value={this.state.selectRow.amount}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            amount: e.target.value\r\n                                        }\r\n                                    })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                comments: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inComments\"\r\n                                    value={this.state.selectRow.comments}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inOrder\"\r\n                                value={this.state.selectRow.order}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            order: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventoryorders}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"tracking_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inPaidBy\"\r\n                                value={this.state.selectRow.paid_by}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            paid_by: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventoryorderpayments: state.inventoryorderpayments.inventoryorderpayments,\r\n    inventoryorders: state.inventoryorders.inventoryorders,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getInventoryOrderpayments,\r\n        getInventoryOrders,\r\n        getEmployees,\r\n        addInventoryOrderpayment,\r\n        deleteInventoryOrderpayment,\r\n        editInventoryOrderpayment,\r\n    }) (InventoryOrderpayments);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INVENTORY_ORDERPAYMENT,\r\n        GET_INVENTORY_ORDERPAYMENTS,\r\n        DELETE_INVENTORY_ORDERPAYMENT,\r\n        GET_INVENTORY_ORDERPAYMENT,\r\n        EDIT_INVENTORY_ORDERPAYMENT\r\n    } from '../types/inventoryorderpaymentTypes';\r\nimport { inventoryorderpaymentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getInventoryOrderpayments = () => dispatch => {\r\n    axios.get(inventoryorderpaymentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ORDERPAYMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInventoryOrderpayment = (id) => dispatch => {\r\n    axios.delete(inventoryorderpaymentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INVENTORY_ORDERPAYMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInventoryOrderpayment = (inventoryorderpayment) => dispatch => {\r\n    axios.post(inventoryorderpaymentsURL, inventoryorderpayment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVENTORY_ORDERPAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInventoryOrderpayment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/inventory-orderpayments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_ORDERPAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editInventoryOrderpayment = (id, inventoryorderpayment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/inventory-orderpayments/${id}/`, inventoryorderpayment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_INVENTORY_ORDERPAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getWarehouses, addWarehouse, editWarehouse, deleteWarehouse } from '..//../actions/warehouses';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport \"./form.css\";\r\n\r\nclass Warehouses extends Component {\r\n\r\n    emptyWarehouse = {\r\n        name: '',\r\n        address: '',\r\n        description: '',\r\n        inventory_controller: null,\r\n        length: '',\r\n        width: '',\r\n        height: '',\r\n        last_inventory_check_date: '',\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            warehouses : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedWarehouses: null,\r\n            warehouseDialog: false,\r\n            deleteWarehouseDialog: false,\r\n            deleteWarehousesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                address: '',\r\n                description: '',\r\n                inventory_controller: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                last_inventory_check_date: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                address: '',\r\n                description: '',\r\n                inventory_controller: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                last_inventory_check_date: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveWarehouse = this.saveWarehouse.bind(this);\r\n        this.editWarehouse = this.editWarehouse.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteWarehouse = this.confirmDeleteWarehouse.bind(this);\r\n        this.deleteWarehouse = this.deleteWarehouse.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedWarehouses = this.deleteSelectedWarehouses.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteWarehouseDialog = this.hideDeleteWarehouseDialog.bind(this);\r\n        this.hideDeleteWarehousesDialog = this.hideDeleteWarehousesDialog.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({inventory_controller: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        warehouses : PropTypes.array.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployees();\r\n        this.props.getWarehouses()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                address: '',\r\n                description: '',\r\n                inventory_controller: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                last_inventory_check_date: '',\r\n            },\r\n            submitted: false,\r\n            warehouseDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            warehouseDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteWarehouseDialog() {\r\n        this.setState({ deleteWarehouseDialog: false });\r\n    }\r\n\r\n    hideDeleteWarehousesDialog() {\r\n        this.setState({ deleteWarehousesDialog: false });\r\n    }\r\n\r\n    saveWarehouse = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            address,\r\n            description,\r\n            inventory_controller,\r\n            length,\r\n            width,\r\n            height,\r\n            last_inventory_check_date,\r\n        } = this.state;\r\n        const warehouse = {\r\n            name,\r\n            address,\r\n            description,\r\n            inventory_controller,\r\n            length,\r\n            width,\r\n            height,\r\n            last_inventory_check_date,\r\n        };\r\n        this.props.addWarehouse(warehouse);\r\n        this.setState({\r\n            name: '',\r\n            address: '',\r\n            description: '',\r\n            inventory_controller: null,\r\n            length: '',\r\n            width: '',\r\n            height: '',\r\n            last_inventory_check_date: '',\r\n            warehouseDialog: false\r\n        });\r\n        this.props.history.push('/warehouses');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                address: '',\r\n                description: '',\r\n                inventory_controller: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                last_inventory_check_date: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editWarehouse(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            address,\r\n            description,\r\n            inventory_controller,\r\n            length,\r\n            width,\r\n            height,\r\n            last_inventory_check_date,\r\n        } = this.state.selectRow;\r\n        const warehouse = {\r\n            name,\r\n            address,\r\n            description,\r\n            inventory_controller,\r\n            length,\r\n            width,\r\n            height,\r\n            last_inventory_check_date,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editWarehouse(this.state.selectRow.id, warehouse);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteWarehouse(warehouse) {\r\n        this.setState({\r\n            warehouse,\r\n            deleteWarehouseDialog: true\r\n        });\r\n    }\r\n\r\n    deleteWarehouse() {\r\n        this.props.deleteWarehouse();\r\n        this.setState({\r\n            deleteWarehouseDialog: false,\r\n            warehouse: this.emptyWarehouse\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteWarehousesDialog: true });\r\n    }\r\n\r\n    deleteSelectedWarehouses() {\r\n        this.props.deleteWarehouse();\r\n        this.setState({\r\n            deleteWarehousesDialog: false,\r\n            selectedWarehouses: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Warehouse</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW WAREHOUSE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteWarehouse(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const storagemediaDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveWarehouse} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editWarehouse}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            address,\r\n            description,\r\n            inventory_controller,\r\n            length,\r\n            width,\r\n            height,\r\n            last_inventory_check_date,\r\n        } = this.state;\r\n\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.warehouses}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedWarehouses} onSelectionChange={e => this.setState({selectedWarehouses: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Warehouses found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"inventory_controller\"\r\n                            header=\"Inventory Controller\"\r\n                            sortable filter filterPlaceholder=\"Search by Inventory Controller\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.warehouseDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Storagemedia\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={storagemediaDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>LENGTH</label>\r\n                                <InputNumber\r\n                                    name=\"length\"\r\n                                    onChange={this.onChange}\r\n                                    value={length}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"address\"\r\n                                        onChange={this.onChange}\r\n                                        value={address}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">ADDRESS</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>WIDTH</label>\r\n                                <InputNumber\r\n                                    name=\"width\"\r\n                                    onChange={this.onChange}\r\n                                    value={width}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>HEIGHT</label>\r\n                                <InputNumber\r\n                                    name=\"height\"\r\n                                    onChange={this.onChange}\r\n                                    value={height}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    className=\"form-control\"\r\n                                    name=\"last_inventory_check_date\"\r\n                                    onChange={this.onChange}\r\n                                    value={last_inventory_check_date}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">LAST INVENTORY CHECK DATE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={inventory_controller}\r\n                                    onChange={this.onTypeChange}\r\n                                    options={employees}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"employee_number\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT INVENTORY CONTROLLER</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE WAREHOUSE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inInventoryController\"\r\n                                value={this.state.selectRow.inventory_controller}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            inventory_controller: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees,\r\n    warehouses: state.warehouses.warehouses,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getEmployees,\r\n        addWarehouse,\r\n        deleteWarehouse,\r\n        editWarehouse,\r\n        getWarehouses\r\n    }) (Warehouses);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INVENTORY_STOCK_ITEM,\r\n        GET_INVENTORY_STOCK_ITEMS,\r\n        DELETE_INVENTORY_STOCK_ITEM,\r\n        GET_INVENTORY_STOCK_ITEM,\r\n        EDIT_INVENTORY_STOCK_ITEM\r\n    } from '../types/inventorystockitemTypes';\r\nimport { inventorystockitemsURL } from '../constants';\r\n\r\n// Get\r\nexport const getInventoryStockItems = () => dispatch => {\r\n    axios.get(inventorystockitemsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_STOCK_ITEMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInventoryStockItem = (id) => dispatch => {\r\n    axios.delete(inventorystockitemsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INVENTORY_STOCK_ITEM,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInventoryStockItem = (inventorystockitem) => dispatch => {\r\n    axios.post(inventorystockitemsURL, inventorystockitem)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVENTORY_STOCK_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInventoryStockItem = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/inventorystockitems/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_STOCK_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editInventoryStockItem = (id, inventorystockitem) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/inventorystockitems/${id}/`, inventorystockitem)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_INVENTORY_STOCK_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_STORAGEMEDIA,\r\n        GET_STORAGEMEDIAS,\r\n        DELETE_STORAGEMEDIA,\r\n        GET_STORAGEMEDIA,\r\n        EDIT_STORAGEMEDIA\r\n    } from '../types/storagemediaTypes';\r\nimport { storagemediasURL } from '../constants';\r\n\r\n// Get\r\nexport const getStoragemedias = () => dispatch => {\r\n    axios.get(storagemediasURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STORAGEMEDIAS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteStoragemedia = (id) => dispatch => {\r\n    axios.delete(storagemediasURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_STORAGEMEDIA,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addStoragemedia = (storagemedia) => dispatch => {\r\n    axios.post(storagemediasURL, storagemedia)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STORAGEMEDIA,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getStoragemedia = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/storagemedias/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STORAGEMEDIA,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editStoragemedia = (id, storagemedia) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/storagemedias/${id}/`, storagemedia)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STORAGEMEDIA,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getInventoryStockItems, addInventoryStockItem, editInventoryStockItem, deleteInventoryStockItem } from '..//../actions/inventorystockitems';\r\nimport { getWarehouses } from '..//../actions/warehouses';\r\nimport { getStoragemedias } from '..//../actions/storagemedias';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\nclass InventoryStockItems extends Component {\r\n\r\n    emptyInventoryStockItem = {\r\n        item: null,\r\n        quantity: '',\r\n        warehouse: null,\r\n        location: null,\r\n        verified: false\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inventorystockitems : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedInventoryStockItems: null,\r\n            inventorystockitemDialog: false,\r\n            deleteInventoryStockItemDialog: false,\r\n            deleteInventoryStockItemsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null,\r\n                verified: false\r\n            },\r\n            newData: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null,\r\n                verified: false\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveInventoryStockItem = this.saveInventoryStockItem.bind(this);\r\n        this.editInventoryStockItem = this.editInventoryStockItem.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteInventoryStockItem = this.confirmDeleteInventoryStockItem.bind(this);\r\n        this.deleteInventoryStockItem = this.deleteInventoryStockItem.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedInventoryStockItems = this.deleteSelectedInventoryStockItems.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteInventoryStockItemDialog = this.hideDeleteInventoryStockItemDialog.bind(this);\r\n        this.hideDeleteInventoryStockItemsDialog = this.hideDeleteInventoryStockItemsDialog.bind(this);\r\n        this.onItem = this.onItem.bind(this);\r\n        this.onWarehouse = this.onWarehouse.bind(this);\r\n        this.onLocation = this.onLocation.bind(this);\r\n        this.onVerified = this.onVerified.bind(this);\r\n    }\r\n\r\n    onItem (e){\r\n      this.setState({item: e.value})\r\n    }\r\n\r\n    onWarehouse (e){\r\n      this.setState({warehouse: e.value})\r\n    }\r\n\r\n    onLocation (e){\r\n      this.setState({location: e.value})\r\n    }\r\n\r\n    onVerified() {\r\n        this.setState({\r\n            verified: !this.state.checked\r\n        });\r\n    }\r\n\r\n    static propTypes = {\r\n        inventorystockitems : PropTypes.array.isRequired,\r\n        getInventoryStockItems: PropTypes.func.isRequired,\r\n        addInventoryStockItem: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getStoragemedias: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getStoragemedias();\r\n        this.props.getInventoryStockItems();\r\n        this.props.getWarehouses();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null,\r\n                verified: false\r\n            },\r\n            submitted: false,\r\n            inventorystockitemDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            inventorystockitemDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteInventoryStockItemDialog() {\r\n        this.setState({ deleteInventoryStockItemDialog: false });\r\n    }\r\n\r\n    hideDeleteInventoryStockItemsDialog() {\r\n        this.setState({ deleteInventoryStockItemsDialog: false });\r\n    }\r\n\r\n    saveInventoryStockItem = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location,\r\n            verified\r\n        } = this.state;\r\n        const inventorystockitem = {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location,\r\n            verified\r\n        };\r\n        this.props.addInventoryStockItem(inventorystockitem);\r\n        this.setState({\r\n            item: null,\r\n            quantity: '',\r\n            warehouse: null,\r\n            location: null,\r\n            verified: true,\r\n            inventorystockitemDialog: false\r\n        });\r\n        this.props.history.push('/inventorystockitems');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null,\r\n                verified: false\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editInventoryStockItem(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location,\r\n            verified\r\n        } = this.state.selectRow;\r\n        const inventorystockitem = {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location,\r\n            verified\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editInventoryStockItem(this.state.selectRow.id, inventorystockitem);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteInventoryStockItem(inventorystockitem) {\r\n        this.setState({\r\n            inventorystockitem,\r\n            deleteInventoryStockItemDialog: true\r\n        });\r\n    }\r\n\r\n    deleteInventoryStockItem() {\r\n        this.props.deleteInventoryStockItem();\r\n        this.setState({\r\n            deleteInventoryStockItemDialog: false,\r\n            inventorystockitem: this.emptyInventoryStockItem\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteInventoryStockItemsDialog: true });\r\n    }\r\n\r\n    deleteSelectedInventoryStockItems() {\r\n        this.props.deleteInventoryStockItem();\r\n        this.setState({\r\n            deleteInventoryStockItemsDialog: false,\r\n            selectedInventoryStockItems: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Inventory Stock Item</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW INVENTORY STOCK ITEM\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteInventoryStockItem(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const inventorystockitemDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveInventoryStockItem} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editInventoryStockItem}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location,\r\n        } = this.state;\r\n\r\n        const {inventorystockitems} = this.props;\r\n        const {warehouses} = this.props;\r\n        const {storagemedias} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.inventorystockitems}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedInventoryStockItems} onSelectionChange={e => this.setState({selectedInventoryStockItems: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Inventory Stock Items found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"item\"\r\n                            header=\"Item\"\r\n                            sortable filter filterPlaceholder=\"Search by Item\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"quantity\"\r\n                            header=\"Quantity\"\r\n                            sortable filter filterPlaceholder=\"Search by Quantity\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"warehouse\"\r\n                            header=\"Warehouse\"\r\n                            sortable filter filterPlaceholder=\"Search by Warehouse\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"location\"\r\n                            header=\"Location\"\r\n                            sortable filter filterPlaceholder=\"Search by Location\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"stock_value\"\r\n                            header=\"Stock Value\"\r\n                            sortable filter filterPlaceholder=\"Search by Stock Value\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.inventorystockitemDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Inventory Stock Item\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={inventorystockitemDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Quantity</label>\r\n                                <InputNumber\r\n                                    name=\"quantity\"\r\n                                    onChange={this.onChange}\r\n                                    value={quantity}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                                <label>VERIFIED :</label>\r\n                                <Checkbox\r\n                                    inputId=\"working\"\r\n                                    onChange={this.onVerified}\r\n                                    checked={this.state.verified}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={item}\r\n                                    onChange={this.onItem}\r\n                                    options={inventorystockitems}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT ITEM</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={warehouse}\r\n                                    onChange={this.onWarehouse}\r\n                                    options={warehouses}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT WAREHOUSE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={location}\r\n                                    onChange={this.onLocation}\r\n                                    options={storagemedias}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT LOCATION</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE INVENTORY STOCK ITEM\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                           <InputNumber\r\n                                id=\"inQuantity\"\r\n                                value={this.state.selectRow.quantity}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            quantity: e.target.value\r\n                                        }\r\n                                    })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>VERIFIED :</label>\r\n                            <Checkbox\r\n                                onChange={(e) => this.setState({\r\n                                    selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            verified: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                inputId=\"working\"\r\n                                id=\"inVerified\"\r\n                                checked={this.state.selectRow.verified}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inItem\"\r\n                                value={this.state.selectRow.item}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            item: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorystockitems}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inLocation\"\r\n                                value={this.state.selectRow.location}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            location: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={storagemedias}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWarehouse\"\r\n                                value={this.state.selectRow.warehouse}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            warehouse: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={warehouses}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventorystockitems: state.inventorystockitems.inventorystockitems,\r\n    warehouses: state.warehouses.warehouses,\r\n    storagemedias: state.storagemedias.storagemedias,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getInventoryStockItems,\r\n        getWarehouses,\r\n        getStoragemedias,\r\n        addInventoryStockItem,\r\n        deleteInventoryStockItem,\r\n        editInventoryStockItem,\r\n    }) (InventoryStockItems);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getStoragemedias, addStoragemedia, editStoragemedia, deleteStoragemedia } from '..//../actions/storagemedias';\r\nimport { getWarehouses } from '..//../actions/warehouses';\r\nimport \"./form.css\";\r\n\r\nclass Storagemedias extends Component {\r\n\r\n    emptyStoragemedia = {\r\n        name: '',\r\n        warehouse: null,\r\n        description: '',\r\n        length: '',\r\n        width: '',\r\n        height: '',\r\n        capacity: '',\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            storagemedias : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedStoragemedias: null,\r\n            storagemediaDialog: false,\r\n            deleteStoragemediaDialog: false,\r\n            deleteStoragemediasDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                warehouse: null,\r\n                description: '',\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                capacity: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                warehouse: null,\r\n                description: '',\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                capacity: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveStoragemedia = this.saveStoragemedia.bind(this);\r\n        this.editStoragemedia = this.editStoragemedia.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteStoragemedia = this.confirmDeleteStoragemedia.bind(this);\r\n        this.deleteStoragemedia = this.deleteStoragemedia.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedStoragemedias = this.deleteSelectedStoragemedias.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteStoragemediaDialog = this.hideDeleteStoragemediaDialog.bind(this);\r\n        this.hideDeleteStoragemediasDialog = this.hideDeleteStoragemediasDialog.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({warehouse: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        storagemedias : PropTypes.array.isRequired,\r\n        getStoragemedias: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getStoragemedias();\r\n        this.props.getWarehouses()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                warehouse: null,\r\n                description: '',\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                capacity: '',\r\n            },\r\n            submitted: false,\r\n            storagemediaDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            storagemediaDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteStoragemediaDialog() {\r\n        this.setState({ deleteStoragemediaDialog: false });\r\n    }\r\n\r\n    hideDeleteStoragemediasDialog() {\r\n        this.setState({ deleteStoragemediasDialog: false });\r\n    }\r\n\r\n    saveStoragemedia = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            warehouse,\r\n            description,\r\n            length,\r\n            width,\r\n            height,\r\n            capacity,\r\n        } = this.state;\r\n        const storagemedia = {\r\n            name,\r\n            warehouse,\r\n            description,\r\n            length,\r\n            width,\r\n            height,\r\n            capacity,\r\n        };\r\n        this.props.addStoragemedia(storagemedia);\r\n        this.setState({\r\n            name: '',\r\n            warehouse: null,\r\n            description: '',\r\n            length: '',\r\n            width: '',\r\n            height: '',\r\n            capacity: '',\r\n            storagemediaDialog: false\r\n        });\r\n        this.props.history.push('/storagemedias');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                warehouse: null,\r\n                description: '',\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                capacity: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editStoragemedia(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            warehouse,\r\n            description,\r\n            length,\r\n            width,\r\n            height,\r\n            capacity,\r\n        } = this.state.selectRow;\r\n        const storagemedia = {\r\n            name,\r\n            warehouse,\r\n            description,\r\n            length,\r\n            width,\r\n            height,\r\n            capacity,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editStoragemedia(this.state.selectRow.id, storagemedia);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteStoragemedia(storagemedia) {\r\n        this.setState({\r\n            storagemedia,\r\n            deleteStoragemediaDialog: true\r\n        });\r\n    }\r\n\r\n    deleteStoragemedia() {\r\n        this.props.deleteStoragemedia();\r\n        this.setState({\r\n            deleteStoragemediaDialog: false,\r\n            storagemedia: this.emptyStoragemedia\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteStoragemediasDialog: true });\r\n    }\r\n\r\n    deleteSelectedStoragemedias() {\r\n        this.props.deleteStoragemedia();\r\n        this.setState({\r\n            deleteStoragemediasDialog: false,\r\n            selectedStoragemedias: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Storagemedia</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW STORAGEMEDIA\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteStoragemedia(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const storagemediaDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveStoragemedia} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editStoragemedia}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            warehouse,\r\n            description,\r\n            length,\r\n            width,\r\n            height,\r\n            capacity,\r\n        } = this.state;\r\n\r\n        const {warehouses} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.storagemedias}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedStoragemedias} onSelectionChange={e => this.setState({selectedStoragemedias: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Storagemedias found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"warehouse\"\r\n                            header=\"Warehouse\"\r\n                            sortable filter filterPlaceholder=\"Search by Warehouse\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"length\"\r\n                            header=\"Length\"\r\n                            sortable filter filterPlaceholder=\"Search by Length\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"width\"\r\n                            header=\"Width\"\r\n                            sortable filter filterPlaceholder=\"Search by Width\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"height\"\r\n                            header=\"Height\"\r\n                            sortable filter filterPlaceholder=\"Search by Height\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"capacity\"\r\n                            header=\"Capacity\"\r\n                            sortable filter filterPlaceholder=\"Search by Capacity\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.storagemediaDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Storagemedia\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={storagemediaDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Length</label>\r\n                                 <InputNumber\r\n                                    name=\"length\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={length}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>Width</label>\r\n                                 <InputNumber\r\n                                    name=\"width\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={width}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>Height</label>\r\n                                 <InputNumber\r\n                                    name=\"height\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={height}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>Capacity</label>\r\n                                 <InputNumber\r\n                                    name=\"capacity\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={capacity}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={warehouse}\r\n                                    onChange={this.onTypeChange}\r\n                                    options={warehouses}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT WAREHOUSE</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE STORAGEMEDIA\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Length </label>\r\n                            <InputNumber\r\n                                id=\"inLength\"\r\n                                value={this.state.selectRow.length}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        length: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Width </label>\r\n                            <InputNumber\r\n                                id=\"inWidth\"\r\n                                value={this.state.selectRow.width}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        width: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Height </label>\r\n                            <InputNumber\r\n                                id=\"inHeight\"\r\n                                value={this.state.selectRow.height}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        height: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Capacity </label>\r\n                            <InputNumber\r\n                                id=\"inCapacity\"\r\n                                value={this.state.selectRow.capacity}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        capacity: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inDescription\">Description </label>\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWarehouse\"\r\n                                value={this.state.selectRow.warehouse}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            warehouse: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={warehouses}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    storagemedias: state.storagemedias.storagemedias,\r\n    warehouses: state.warehouses.warehouses,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getStoragemedias,\r\n        addStoragemedia,\r\n        deleteStoragemedia,\r\n        editStoragemedia,\r\n        getWarehouses\r\n    }) (Storagemedias);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getInventoryReceipts} from '..//../actions/inventoryreceipts';\r\nimport \"./form.css\";\r\n\r\n\r\nclass InventoryReceipts extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inventoryreceipts : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        inventoryreceipts : PropTypes.array.isRequired,\r\n        getInventoryReceipts: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInventoryReceipts();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Inventory Receipts</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.inventoryreceipts}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Inventory Receipts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"order\"\r\n                        header=\"Order\"\r\n                        sortable filter filterPlaceholder=\"Search by Order\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"received_by\"\r\n                        header=\"Received By\"\r\n                        sortable filter filterPlaceholder=\"Search by Received By\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"receive_date\"\r\n                        header=\"Receive Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Receive Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"fully_received\"\r\n                        header=\"Fully Received\"\r\n                        sortable filter filterPlaceholder=\"Search by Fully Received\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventoryreceipts: state.inventoryreceipts.inventoryreceipts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getInventoryReceipts} ) (InventoryReceipts);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INVENTORY_RECEIPT,\r\n        GET_INVENTORY_RECEIPTS,\r\n        DELETE_INVENTORY_RECEIPT,\r\n        GET_INVENTORY_RECEIPT\r\n    } from '../types/inventoryreceiptTypes';\r\nimport { inventoryreceiptsURL } from '../constants';\r\n\r\n// Get\r\nexport const getInventoryReceipts = () => dispatch => {\r\n    axios.get(inventoryreceiptsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_RECEIPTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInventoryReceipt = (id) => dispatch => {\r\n    axios.delete(inventoryreceiptsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INVENTORY_RECEIPT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInventoryReceipt = (inventoryreceipt) => dispatch => {\r\n    axios.post(inventoryreceiptsURL, inventoryreceipt)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVENTORY_RECEIPT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInventoryReceipt = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/inventoryreceipts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_RECEIPT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getStockAdjustments, addStockAdjustment, editStockAdjustment, deleteStockAdjustment } from '..//../actions/stockadjustments';\r\nimport { getInventoryItems } from '..//../actions/inventoryitems';\r\nimport \"./form.css\";\r\n\r\nclass StockAdjustments extends Component {\r\n\r\n    emptyStockAdjustment = {\r\n        warehouse_item: null,\r\n        adjustment: '',\r\n        note: ''\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            stockadjustments : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedStockAdjustments: null,\r\n            stockadjustmentDialog: false,\r\n            deleteStockAdjustmentDialog: false,\r\n            deleteStockAdjustmentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: ''\r\n            },\r\n            newData: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveStockAdjustment = this.saveStockAdjustment.bind(this);\r\n        this.editStockAdjustment = this.editStockAdjustment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteStockAdjustment = this.confirmDeleteStockAdjustment.bind(this);\r\n        this.deleteStockAdjustment = this.deleteStockAdjustment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedStockAdjustments = this.deleteSelectedStockAdjustments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteStockAdjustmentDialog = this.hideDeleteStockAdjustmentDialog.bind(this);\r\n        this.hideDeleteStockAdjustmentsDialog = this.hideDeleteStockAdjustmentsDialog.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({warehouse_item: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        stockadjustments : PropTypes.array.isRequired,\r\n        getStockAdjustments: PropTypes.func.isRequired,\r\n        getInventoryItems: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getStockAdjustments();\r\n        this.props.getInventoryItems()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: ''\r\n            },\r\n            submitted: false,\r\n            stockadjustmentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            stockadjustmentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteStockAdjustmentDialog() {\r\n        this.setState({ deleteStockAdjustmentDialog: false });\r\n    }\r\n\r\n    hideDeleteStockAdjustmentsDialog() {\r\n        this.setState({ deleteStockAdjustmentsDialog: false });\r\n    }\r\n\r\n    saveStockAdjustment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            warehouse_item,\r\n            adjustment,\r\n            note\r\n        } = this.state;\r\n        const stockadjustment = {\r\n            warehouse_item,\r\n            adjustment,\r\n            note\r\n        };\r\n        this.props.addStockAdjustment(stockadjustment);\r\n        this.setState({\r\n            warehouse_item: '',\r\n            adjustment: '',\r\n            note: ''\r\n        });\r\n        this.props.history.push('/stockadjustments');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editStockAdjustment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            warehouse_item,\r\n            adjustment,\r\n            note\r\n        } = this.state.selectRow;\r\n        const stockadjustment = {\r\n            warehouse_item,\r\n            adjustment,\r\n            note\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editStockAdjustment(this.state.selectRow.id, stockadjustment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteStockAdjustment(stockadjustment) {\r\n        this.setState({\r\n            stockadjustment,\r\n            deleteStockAdjustmentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteStockAdjustment() {\r\n        this.props.deleteStockAdjustment();\r\n        this.setState({\r\n            deleteStockAdjustmentDialog: false,\r\n            stockadjustment: this.emptyStockAdjustment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteStockAdjustmentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedStockAdjustments() {\r\n        this.props.deleteStockAdjustment();\r\n        this.setState({\r\n            deleteStockAdjustmentsDialog: false,\r\n            selectedStockAdjustments: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Stock Adjustment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW STOCK ADJUSTMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteStockAdjustment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const stockadjustmentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveStockAdjustment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editStockAdjustment}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            warehouse_item,\r\n            adjustment,\r\n            note\r\n        } = this.state;\r\n\r\n        const {inventoryitems} = this.props;\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.stockadjustments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedStockAdjustments} onSelectionChange={e => this.setState({selectedStockAdjustments: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Stock Adjustments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"warehouse_item\"\r\n                            header=\"Warehouse Item\"\r\n                            sortable filter filterPlaceholder=\"Search by Warehouse Item\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"adjustment\"\r\n                            header=\"Adjustment\"\r\n                            sortable filter filterPlaceholder=\"Search by Adjustment\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"inventory_check\"\r\n                            header=\"Inventory Check\"\r\n                            sortable filter filterPlaceholder=\"Search by Inventory Check\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"adjustment_value\"\r\n                            header=\"Adjustment Value\"\r\n                            sortable filter filterPlaceholder=\"Search by Adjustment Value\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"prev_quantity\"\r\n                            header=\"Prev Quantity\"\r\n                            sortable filter filterPlaceholder=\"Search by Prev Quantity\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.stockadjustmentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Stock Adjustment\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={stockadjustmentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Adjustment</label>\r\n                            <InputNumber\r\n                                name=\"adjustment\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={adjustment}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"note\"\r\n                                    onChange={this.onChange}\r\n                                    value={note}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Note</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={warehouse_item}\r\n                                onChange={this.onTypeChange}\r\n                                options={inventoryitems}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT WAREHOUSE ITEM</label>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE STOCK ADJUSTMENT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                           <InputNumber\r\n                                id=\"inAdjustment\"\r\n                                value={this.state.selectRow.adjustment}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            adjustment: e.target.value\r\n                                        }\r\n                                    })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                note: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inNote\"\r\n                                    value={this.state.selectRow.note}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWarehouseItem\"\r\n                                value={this.state.selectRow.warehouse_item}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            warehouse_item: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventoryitems}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    stockadjustments: state.stockadjustments.stockadjustments,\r\n    inventoryitems: state.inventoryitems.inventoryitems,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getStockAdjustments,\r\n        addStockAdjustment,\r\n        deleteStockAdjustment,\r\n        editStockAdjustment,\r\n        getInventoryItems\r\n    }) (StockAdjustments);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_STOCK_ADJUSTMENT,\r\n        GET_STOCK_ADJUSTMENTS,\r\n        DELETE_STOCK_ADJUSTMENT,\r\n        GET_STOCK_ADJUSTMENT,\r\n        EDIT_STOCK_ADJUSTMENT\r\n    } from '../types/stockadjustmentTypes';\r\nimport { stockadjustmentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getStockAdjustments = () => dispatch => {\r\n    axios.get(stockadjustmentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STOCK_ADJUSTMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteStockAdjustment = (id) => dispatch => {\r\n    axios.delete(stockadjustmentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_STOCK_ADJUSTMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addStockAdjustment = (stockadjustment) => dispatch => {\r\n    axios.post(stockadjustmentsURL, stockadjustment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_STOCK_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getStockAdjustment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/stockadjustments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_STOCK_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editStockAdjustment = (id, stockadjustment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/stockadjustments/${id}/`, stockadjustment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_STOCK_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getInventoryStockTakes, addInventoryStockTake, editInventoryStockTake, deleteInventoryStockTake } from '..//../actions/inventorystocktakes';\r\nimport { getWarehouses } from '..//../actions/warehouses';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport \"./form.css\";\r\n\r\nclass InventoryStockTakes extends Component {\r\n\r\n    emptyInventoryStockTake = {\r\n        date: '',\r\n        adjusted_by: null,\r\n        warehouse: null,\r\n        comments: '',\r\n        adjustments: ''\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            inventorystocktakes : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedInventoryStockTakes: null,\r\n            inventorystocktakeDialog: false,\r\n            deleteInventoryStockTakeDialog: false,\r\n            deleteInventoryStockTakesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                adjusted_by: null,\r\n                warehouse: null,\r\n                comments: '',\r\n                adjustments: ''\r\n            },\r\n            newData: {\r\n                date: '',\r\n                adjusted_by: null,\r\n                warehouse: null,\r\n                comments: '',\r\n                adjustments: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveInventoryStockTake = this.saveInventoryStockTake.bind(this);\r\n        this.editInventoryStockTake = this.editInventoryStockTake.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteInventoryStockTake = this.confirmDeleteInventoryStockTake.bind(this);\r\n        this.deleteInventoryStockTake = this.deleteInventoryStockTake.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedInventoryStockTakes = this.deleteSelectedInventoryStockTakes.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteInventoryStockTakeDialog = this.hideDeleteInventoryStockTakeDialog.bind(this);\r\n        this.hideDeleteInventoryStockTakesDialog = this.hideDeleteInventoryStockTakesDialog.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onAdjustedBy = this.onAdjustedBy.bind(this);\r\n    }\r\n\r\n    onTypeChange (e){\r\n        this.setState({warehouse: e.value})\r\n    }\r\n\r\n    onAdjustedBy (e){\r\n        this.setState({adjusted_by: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        inventorystocktakes : PropTypes.array.isRequired,\r\n        getInventoryStockTakes: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInventoryStockTakes();\r\n        this.props.getWarehouses()\r\n        this.props.getEmployees()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                date: '',\r\n                adjusted_by: null,\r\n                warehouse: null,\r\n                comments: '',\r\n                adjustments: ''\r\n            },\r\n            submitted: false,\r\n            inventorystocktakeDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            inventorystocktakeDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteInventoryStockTakeDialog() {\r\n        this.setState({ deleteInventoryStockTakeDialog: false });\r\n    }\r\n\r\n    hideDeleteInventoryStockTakesDialog() {\r\n        this.setState({ deleteInventoryStockTakesDialog: false });\r\n    }\r\n\r\n    saveInventoryStockTake = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            date,\r\n            adjusted_by,\r\n            warehouse,\r\n            comments,\r\n            adjustments\r\n        } = this.state;\r\n        const inventorystocktake = {\r\n            date,\r\n            adjusted_by,\r\n            warehouse,\r\n            comments,\r\n            adjustments\r\n        };\r\n        this.props.addInventoryStockTake(inventorystocktake);\r\n        this.setState({\r\n            date: '',\r\n            adjusted_by: null,\r\n            warehouse: null,\r\n            comments: '',\r\n            adjustments: '',\r\n            inventorystocktakeDialog: false\r\n        });\r\n        this.props.history.push('/inventorystocktakes');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                date: '',\r\n                adjusted_by: null,\r\n                warehouse: null,\r\n                comments: '',\r\n                adjustments: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editInventoryStockTake(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            date,\r\n            adjusted_by,\r\n            warehouse,\r\n            comments,\r\n            adjustments\r\n        } = this.state.selectRow;\r\n        const inventorystocktake = {\r\n            date,\r\n            adjusted_by,\r\n            warehouse,\r\n            comments,\r\n            adjustments\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editInventoryStockTake(this.state.selectRow.id, inventorystocktake);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteInventoryStockTake(inventorystocktake) {\r\n        this.setState({\r\n            inventorystocktake,\r\n            deleteInventoryStockTakeDialog: true\r\n        });\r\n    }\r\n\r\n    deleteInventoryStockTake() {\r\n        this.props.deleteInventoryStockTake();\r\n        this.setState({\r\n            deleteInventoryStockTakeDialog: false,\r\n            inventorystocktake: this.emptyInventoryStockTake\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteInventoryStockTakesDialog: true });\r\n    }\r\n\r\n    deleteSelectedInventoryStockTakes() {\r\n        this.props.deleteInventoryStockTake();\r\n        this.setState({\r\n            deleteInventoryStockTakesDialog: false,\r\n            selectedInventoryStockTakes: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Inventory Stock Take</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW INVENTORY STOCK TAKE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteInventoryStockTake(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const inventorystocktakeDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveInventoryStockTake} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editInventoryStockTake}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            date,\r\n            adjusted_by,\r\n            warehouse,\r\n            comments,\r\n            adjustments\r\n        } = this.state;\r\n\r\n        const {warehouses} = this.props;\r\n        const {employees} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.inventorystocktakes}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedInventoryStockTakes} onSelectionChange={e => this.setState({selectedInventoryStockTakes: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Inventory Stock Takes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"adjusted_by\"\r\n                            header=\"Adjusted By\"\r\n                            sortable filter filterPlaceholder=\"Search by Adjusted By\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"warehouse\"\r\n                            header=\"Warehouse\"\r\n                            sortable filter filterPlaceholder=\"Search by Warehouse\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"value_of_all_adjustments\"\r\n                            header=\"Value Of All Adjustments\"\r\n                            sortable filter filterPlaceholder=\"Search by Value Of All Adjustments\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.inventorystocktakeDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Inventory Stock Take\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={inventorystocktakeDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Calendar\r\n                                    showIcon={true}\r\n                                    className=\"form-control\"\r\n                                    name=\"date\"\r\n                                    onChange={this.onChange}\r\n                                    value={date}\r\n                                    dateFormat=\"yy-mm-dd\"\r\n                                />\r\n                                <label htmlFor=\"inputtext\">DATE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>Adjustments</label>\r\n                                 <InputNumber\r\n                                    name=\"adjustments\"\r\n                                    mode=\"decimal\"\r\n                                    onChange={this.onChange}\r\n                                    value={adjustments}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                  />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"comments\"\r\n                                        onChange={this.onChange}\r\n                                        value={comments}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Comments</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={warehouse}\r\n                                    onChange={this.onTypeChange}\r\n                                    options={warehouses}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT WAREHOUSE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={adjusted_by}\r\n                                    onChange={this.onAdjustedBy}\r\n                                    options={employees}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"employee_number\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT ADJUSTED BY</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE INVENTORY STOCK TAKE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <Calendar\r\n                                showIcon={true}\r\n                                className=\"form-control\"\r\n                                id=\"inDate\"\r\n                                value={this.state.selectRow.date}\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        date: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                           <InputNumber\r\n                                id=\"inAdjustments\"\r\n                                value={this.state.selectRow.adjustments}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            adjustments: e.target.value\r\n                                        }\r\n                                    })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    onChange={(e) => this.setState({\r\n                                            selectRow: {\r\n                                                ...this.state.selectRow,\r\n                                                comments: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    id=\"inComments\"\r\n                                    value={this.state.selectRow.comments}\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWarehouse\"\r\n                                value={this.state.selectRow.warehouse}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            warehouse: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={warehouses}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inAdjustedBy\"\r\n                                value={this.state.selectRow.adjusted_by}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            adjusted_by: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    inventorystocktakes: state.inventorystocktakes.inventorystocktakes,\r\n    warehouses: state.warehouses.warehouses,\r\n    employees: state.employees.employees,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getInventoryStockTakes,\r\n        getWarehouses,\r\n        getEmployees,\r\n        addInventoryStockTake,\r\n        deleteInventoryStockTake,\r\n        editInventoryStockTake,\r\n    }) (InventoryStockTakes);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_INVENTORY_STOCK_TAKE,\r\n        GET_INVENTORY_STOCK_TAKES,\r\n        DELETE_INVENTORY_STOCK_TAKE,\r\n        GET_INVENTORY_STOCK_TAKE,\r\n        EDIT_INVENTORY_STOCK_TAKE\r\n    } from '../types/inventorystocktakeTypes';\r\nimport { inventorystocktakesURL } from '../constants';\r\n\r\n// Get\r\nexport const getInventoryStockTakes = () => dispatch => {\r\n    axios.get(inventorystocktakesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_STOCK_TAKES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteInventoryStockTake = (id) => dispatch => {\r\n    axios.delete(inventorystocktakesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_INVENTORY_STOCK_TAKE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInventoryStockTake = (inventorystocktake) => dispatch => {\r\n    axios.post(inventorystocktakesURL, inventorystocktake)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVENTORY_STOCK_TAKE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getInventoryStockTake = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/inventorystocktakes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVENTORY_STOCK_TAKE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editInventoryStockTake = (id, inventorystocktake) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/inventorystocktakes/${id}/`, inventorystocktake)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_INVENTORY_STOCK_TAKE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getActiveSuppliers} from '..//../actions/activesuppliers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass ActiveSuppliers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activesuppliers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        activesuppliers : PropTypes.array.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getActiveSuppliers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Active Suppliers</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.activesuppliers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Active Suppliers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"supplier_number\"\r\n                        header=\"Supplier Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Supplier Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"bp_number\"\r\n                        header=\"Bp Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Bp Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"name\"\r\n                        header=\"Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"contact_person\"\r\n                        header=\"Contact Person\"\r\n                        sortable filter filterPlaceholder=\"Search by Contact Person\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    activesuppliers: state.activesuppliers.activesuppliers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getActiveSuppliers} ) (ActiveSuppliers);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getDeActivedSuppliers} from '..//../actions/deactivedsuppliers';\r\nimport \"./form.css\";\r\n\r\n\r\nclass DeActivedSuppliers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            deactivedsuppliers : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        deactivedsuppliers : PropTypes.array.isRequired,\r\n        getDeActivedSuppliers: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getDeActivedSuppliers();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage DeActived Suppliers</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.deactivedsuppliers}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No De Actived Suppliers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"supplier_number\"\r\n                        header=\"Supplier Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Supplier Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"bp_number\"\r\n                        header=\"Bp Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Bp Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"name\"\r\n                        header=\"Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"email\"\r\n                        header=\"Email\"\r\n                        sortable filter filterPlaceholder=\"Search by Email\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"phone\"\r\n                        header=\"Phone\"\r\n                        sortable filter filterPlaceholder=\"Search by Phone\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"contact_person\"\r\n                        header=\"Contact Person\"\r\n                        sortable filter filterPlaceholder=\"Search by Contact Person\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    deactivedsuppliers: state.deactivedsuppliers.deactivedsuppliers\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDeActivedSuppliers} ) (DeActivedSuppliers);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_DE_ACTIVED_SUPPLIERS,\r\n        DELETE_DE_ACTIVED_SUPPLIER,\r\n        GET_DE_ACTIVED_SUPPLIER\r\n    } from '../types/deactivedsupplierTypes';\r\nimport { deactivedsuppliersURL } from '../constants';\r\n\r\n// Get\r\nexport const getDeActivedSuppliers = () => dispatch => {\r\n    axios.get(deactivedsuppliersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DE_ACTIVED_SUPPLIERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteDeActivedSupplier = (id) => dispatch => {\r\n    axios.delete(deactivedsuppliersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_DE_ACTIVED_SUPPLIER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getDeActivedSupplier = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/de-actived-suppliers/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_DE_ACTIVED_SUPPLIER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getSupplierAddresses, addSupplierAddress, editSupplierAddress, deleteSupplierAddress } from '..//../actions/supplieraddresses';\r\nimport {getSupplierAddressTypeChoices} from \"..//../actions/choices\";\r\nimport { getActiveSuppliers } from '..//../actions/activesuppliers';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\nclass SupplierAddresses extends Component {\r\n\r\n    emptySupplierAddress = {\r\n        owner: null,\r\n        type: null,\r\n        street_address: '',\r\n        floor_number: '',\r\n        city: '',\r\n        postal_code: ''\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            supplieraddresses: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedSupplierAddresses: null,\r\n            supplieraddressDialog: false,\r\n            deleteSupplierAddressDialog: false,\r\n            deleteSupplierAddressesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tpostal_code: ''\r\n            },\r\n            newData: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tpostal_code: ''\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveSupplierAddress = this.saveSupplierAddress.bind(this);\r\n        this.editSupplierAddress = this.editSupplierAddress.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteSupplierAddress = this.confirmDeleteSupplierAddress.bind(this);\r\n        this.deleteSupplierAddress = this.deleteSupplierAddress.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedSupplierAddresses = this.deleteSelectedSupplierAddresses.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteSupplierAddressDialog = this.hideDeleteSupplierAddressDialog.bind(this);\r\n        this.hideDeleteSupplierAddressesDialog = this.hideDeleteSupplierAddressesDialog.bind(this);\r\n        this.onOwner = this.onOwner.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n    }\r\n\r\n    onOwner (e){\r\n        this.setState({owner: e.value})\r\n    }\r\n\r\n    onType (e){\r\n        this.setState({type: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        supplieraddresses : PropTypes.array.isRequired,\r\n        getSupplierAddresses: PropTypes.func.isRequired,\r\n        addSupplierAddress: PropTypes.func.isRequired,\r\n        editSupplierAddress: PropTypes.func.isRequired,\r\n        deleteSupplierAddress: PropTypes.func.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n        getSupplierAddressTypeChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tpostal_code: ''\r\n            },\r\n            submitted: false,\r\n            supplieraddressDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            supplieraddressDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteSupplierAddressDialog() {\r\n        this.setState({ deleteSupplierAddressDialog: false });\r\n    }\r\n\r\n    hideDeleteSupplierAddressesDialog() {\r\n        this.setState({ deleteSupplierAddressesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getSupplierAddresses();\r\n        this.props.getSupplierAddressTypeChoices()\r\n        this.props.getActiveSuppliers()\r\n    }\r\n\r\n    saveSupplierAddress = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tpostal_code\r\n        } = this.state;\r\n        const supplieraddress  = {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tpostal_code\r\n        };\r\n        this.props.addSupplierAddress(supplieraddress);\r\n        this.setState({\r\n            owner: null,\r\n\t\t\ttype: null,\r\n\t\t\tstreet_address: '',\r\n\t\t\tfloor_number: '',\r\n\t\t\tcity: '',\r\n\t\t\tpostal_code: '',\r\n            supplieraddressDialog: false\r\n        });\r\n        this.props.history.push('/supplieraddresses');\r\n    };\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                owner: null,\r\n    \t\t\ttype: null,\r\n    \t\t\tstreet_address: '',\r\n    \t\t\tfloor_number: '',\r\n    \t\t\tcity: '',\r\n    \t\t\tpostal_code: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editSupplierAddress(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tpostal_code\r\n        } = this.state.selectRow;\r\n        const supplieraddress = {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tpostal_code\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editSupplierAddress(this.state.selectRow.id, supplieraddress);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteSupplierAddress(supplieraddress) {\r\n        this.setState({\r\n            supplieraddress,\r\n            deleteSupplierAddressDialog: true\r\n        });\r\n    }\r\n\r\n    deleteSupplierAddress() {\r\n        this.props.deleteSupplierAddress();\r\n        this.setState({\r\n            deleteSupplierAddressDialog: false,\r\n            supplieraddress: this.emptySupplierAddress\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteSupplierAddressesDialog: true });\r\n    }\r\n\r\n    deleteSelectedSupplierAddresses() {\r\n        this.props.deleteSupplierAddress();\r\n        this.setState({\r\n            deleteSupplierAddressesDialog: false,\r\n            selectedSupplierAddresses: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Supplier Address</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW SUPPLIER ADDRESS\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteSupplierAddress(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const supplieraddressDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveSupplierAddress} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editSupplierAddress}/>\r\n            </div>\r\n        );\r\n\r\n        const deleteSupplierAddressesDialogFooter = (\r\n            <>\r\n                <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDeleteSupplierAddressesDialog} />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.deleteSelectedSupplierAddresses} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            owner,\r\n\t\t\ttype,\r\n\t\t\tstreet_address,\r\n\t\t\tfloor_number,\r\n\t\t\tcity,\r\n\t\t\tpostal_code\r\n        } = this.state;\r\n\r\n        const {activesuppliers} = this.props;\r\n        const {supplieraddresstypechoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.supplieraddresses}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedSupplierAddresses} onSelectionChange={e => this.setState({selectedSupplierAddresses: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Supplier Addresses found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"owner\"\r\n                            header=\"Owner\"\r\n                            sortable filter filterPlaceholder=\"Search by Owner\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"street_address\"\r\n                            header=\"Street Address\"\r\n                            sortable filter filterPlaceholder=\"Search by Street Address\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"floor_number\"\r\n                            header=\"Floor Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Floor Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"city\"\r\n                            header=\"City\"\r\n                            sortable filter filterPlaceholder=\"Search by City\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"postal_code\"\r\n                            header=\"Postal Code\"\r\n                            sortable filter filterPlaceholder=\"Search by Postal Code\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.supplieraddressDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Supplier Address Details\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={supplieraddressDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"street_address\"\r\n                                        onChange={this.onChange}\r\n                                        value={street_address}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Street Address</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"floor_number\"\r\n                                        onChange={this.onChange}\r\n                                        value={floor_number}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Floor Number</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"city\"\r\n                                        onChange={this.onChange}\r\n                                        value={city}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">City</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"postal_code\"\r\n                                        onChange={this.onChange}\r\n                                        value={postal_code}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Postal Code</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={type}\r\n                                    onChange={this.onType}\r\n                                    options={supplieraddresstypechoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT TYPE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                <Dropdown\r\n                                    value={owner}\r\n                                    onChange={this.onOwner}\r\n                                    options={activesuppliers}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                                <label htmlFor=\"dropdown\">SELECT OWNER</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE SUPPLIER ADDRESS\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inStreetAddress\">Street Address </label>\r\n                            <InputText id=\"inStreetAddress\" value={this.state.selectRow.street_address}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        street_address: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inFloorNumber\">Floor Number </label>\r\n                            <InputText id=\"inFloorNumber\" value={this.state.selectRow.floor_number}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        floor_number: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inCity\">City </label>\r\n                            <InputText id=\"inCity\" value={this.state.selectRow.city}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        city: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"ui-float-label\">\r\n                            <label htmlFor=\"inPostalCode\">Postal Code </label>\r\n                            <InputText id=\"inPostalCode\" value={this.state.selectRow.postal_code}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        postal_code: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inType\"\r\n                            value={this.state.selectRow.type}\r\n                            options={supplieraddresstypechoices}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"value\"\r\n                            optionValue=\"key\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    type: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                        <span className=\"p-float-label\">\r\n                        <Dropdown\r\n                            id=\"inOwner\"\r\n                            value={this.state.selectRow.owner}\r\n                            options={activesuppliers}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"name\"\r\n                            optionValue=\"id\"\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    owner: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                        </span>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteSupplierAddressesDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteSupplierAddressesDialogFooter} onHide={this.hideDeleteSupplierAddressesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.supplieraddress && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    supplieraddresses: state.supplieraddresses.supplieraddresses,\r\n    activesuppliers: state.activesuppliers.activesuppliers,\r\n    supplieraddresstypechoices: state.supplieraddresstypechoices.supplieraddresstypechoices,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getSupplierAddresses,\r\n    getActiveSuppliers,\r\n    getSupplierAddressTypeChoices,\r\n    addSupplierAddress,\r\n    editSupplierAddress,\r\n    deleteSupplierAddress\r\n} ) (SupplierAddresses);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_SUPPLIER_ADDRESS,\r\n        GET_SUPPLIER_ADDRESSES,\r\n        DELETE_SUPPLIER_ADDRESS,\r\n        GET_SUPPLIER_ADDRESS,\r\n        EDIT_SUPPLIER_ADDRESS\r\n    } from '../types/supplieraddressTypes';\r\nimport { supplieraddressesURL } from '../constants';\r\n\r\n// Get\r\nexport const getSupplierAddresses = () => dispatch => {\r\n    axios.get(supplieraddressesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SUPPLIER_ADDRESSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteSupplierAddress = (id) => dispatch => {\r\n    axios.delete(supplieraddressesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_SUPPLIER_ADDRESS,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addSupplierAddress= (supplieraddress) => dispatch => {\r\n    axios.post(supplieraddressesURL, supplieraddress)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SUPPLIER_ADDRESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getSupplierAddress = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/supplier-addresses/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SUPPLIER_ADDRESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editSupplierAddress = (id, supplieraddress) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/supplier-addresses/${id}/`, supplieraddress)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_SUPPLIER_ADDRESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_RAW_MATERIAL,\r\n        GET_RAW_MATERIALS,\r\n        DELETE_RAW_MATERIAL,\r\n        GET_RAW_MATERIAL,\r\n        EDIT_RAW_MATERIAL\r\n    } from '../types/rawmaterialTypes';\r\nimport { rawmaterialsURL } from '../constants';\r\n\r\n// Get\r\nexport const getRawMaterials = () => dispatch => {\r\n    axios.get(rawmaterialsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_RAW_MATERIALS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteRawMaterial = (id) => dispatch => {\r\n    axios.delete(rawmaterialsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_RAW_MATERIAL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addRawMaterial = (rawmaterial) => dispatch => {\r\n    axios.post(rawmaterialsURL, rawmaterial)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_RAW_MATERIAL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getRawMaterial = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/raw-materials/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_RAW_MATERIAL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editRawMaterial = (id, rawmaterial) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/raw-materials/${id}/`, rawmaterial)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_RAW_MATERIAL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getRawMaterials, addRawMaterial, editRawMaterial, deleteRawMaterial } from '..//../actions/rawmaterials';\r\nimport { getInventoryTypesChoices, getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport { getActiveSuppliers } from '..//../actions/activesuppliers';\r\nimport { getInventoryCategories } from '..//../actions/inventorycategories';\r\nimport \"./form.css\";\r\n\r\nclass RawMaterials extends Component {\r\n\r\n    emptyRawMaterial = {\r\n        name: '',\r\n        type: null,\r\n        category: null,\r\n        length: '',\r\n        width: '',\r\n        height: '',\r\n        description: '',\r\n        unit: null,\r\n        unit_purchase_price: '',\r\n        supplier: null,\r\n        minimum_order_level: '',\r\n        maximum_stock_level: '',\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            rawmaterials : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedRawMaterials: null,\r\n            rawmaterialDialog: false,\r\n            deleteRawMaterialDialog: false,\r\n            deleteRawMaterialsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveRawMaterial = this.saveRawMaterial.bind(this);\r\n        this.editRawMaterial = this.editRawMaterial.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteRawMaterial = this.confirmDeleteRawMaterial.bind(this);\r\n        this.deleteRawMaterial = this.deleteRawMaterial.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedRawMaterials = this.deleteSelectedRawMaterials.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteRawMaterialDialog = this.hideDeleteRawMaterialDialog.bind(this);\r\n        this.hideDeleteRawMaterialsDialog = this.hideDeleteRawMaterialsDialog.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n        this.onCategory = this.onCategory.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onSupplier = this.onSupplier.bind(this);\r\n    }\r\n\r\n    onType (e){\r\n       this.setState({type: e.value})\r\n    }\r\n\r\n    onCategory (e){\r\n       this.setState({category: e.value})\r\n    }\r\n\r\n    onUnit (e){\r\n       this.setState({unit: e.value})\r\n    }\r\n\r\n    onSupplier (e){\r\n       this.setState({supplier: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        rawmaterials : PropTypes.array.isRequired,\r\n        getInventoryTypesChoices: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n        getInventoryCategories: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getRawMaterials();\r\n        this.props.getInventoryTypesChoices();\r\n        this.props.getUnitOfMeasureChoices();\r\n        this.props.getActiveSuppliers();\r\n        this.props.getInventoryCategories();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n            rawmaterialDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            rawmaterialDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteRawMaterialDialog() {\r\n        this.setState({ deleteRawMaterialDialog: false });\r\n    }\r\n\r\n    hideDeleteRawMaterialsDialog() {\r\n        this.setState({ deleteRawMaterialsDialog: false });\r\n    }\r\n\r\n    saveRawMaterial = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n        const rawmaterial = {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        this.props.addRawMaterial(rawmaterial);\r\n        this.setState({\r\n            name: '',\r\n            type: null,\r\n            category: null,\r\n            length: '',\r\n            width: '',\r\n            height: '',\r\n            description: '',\r\n            unit: null,\r\n            unit_purchase_price: '',\r\n            supplier: null,\r\n            minimum_order_level: '',\r\n            maximum_stock_level: '',\r\n            rawmaterialDialog: false\r\n        });\r\n        this.props.history.push('/rawmaterials');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editRawMaterial(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state.selectRow;\r\n        const rawmaterial = {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editRawMaterial(this.state.selectRow.id, rawmaterial);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteRawMaterial(rawmaterial) {\r\n        this.setState({\r\n            rawmaterial,\r\n            deleteRawMaterialDialog: true\r\n        });\r\n    }\r\n\r\n    deleteRawMaterial() {\r\n        this.props.deleteRawMaterial();\r\n        this.setState({\r\n            deleteRawMaterialDialog: false,\r\n            rawmaterial: this.emptyRawMaterial\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteRawMaterialsDialog: true });\r\n    }\r\n\r\n    deleteSelectedRawMaterials() {\r\n        this.props.deleteRawMaterial();\r\n        this.setState({\r\n            deleteRawMaterialsDialog: false,\r\n            selectedRawMaterials: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Raw Material</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW RAW MATERIAL\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteRawMaterial(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const rawmaterialDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveRawMaterial} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editRawMaterial}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n\r\n        const {inventorytypeschoices} = this.props;\r\n        const {inventorycategories} = this.props;\r\n        const {unitofmeasurechoices} = this.props;\r\n        const {activesuppliers} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.rawmaterials}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedRawMaterials} onSelectionChange={e => this.setState({selectedRawMaterials: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Raw Materials found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"category\"\r\n                            header=\"Category\"\r\n                            sortable filter filterPlaceholder=\"Search by Category\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"unit\"\r\n                            header=\"Unit\"\r\n                            sortable filter filterPlaceholder=\"Search by Unit\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.rawmaterialDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Raw Material\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={rawmaterialDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                     />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>LENGTH</label>\r\n                                <InputNumber\r\n                                    name=\"length\"\r\n                                    onChange={this.onChange}\r\n                                    value={length}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>WIDTH</label>\r\n                                <InputNumber\r\n                                    name=\"width\"\r\n                                    onChange={this.onChange}\r\n                                    value={width}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>HEIGHT</label>\r\n                                <InputNumber\r\n                                    name=\"height\"\r\n                                    onChange={this.onChange}\r\n                                    value={height}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>MAXIMUM STOCK LEVEL</label>\r\n                                <InputNumber\r\n                                    name=\"maximum_stock_level\"\r\n                                    onChange={this.onChange}\r\n                                    value={maximum_stock_level}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>UNIT PURCHASE PRICE</label>\r\n                                <InputNumber\r\n                                    name=\"unit_purchase_price\"\r\n                                    onChange={this.onChange}\r\n                                    value={unit_purchase_price}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>MINIMUM ORDER LEVEL</label>\r\n                                <InputNumber\r\n                                    name=\"minimum_order_level\"\r\n                                    onChange={this.onChange}\r\n                                    value={minimum_order_level}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT TYPE\"\r\n                                    value={type}\r\n                                    onChange={this.onType}\r\n                                    options={inventorytypeschoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT CATEGORY\"\r\n                                    value={category}\r\n                                    onChange={this.onCategory}\r\n                                    options={inventorycategories}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT UNIT\"\r\n                                    value={unit}\r\n                                    onChange={this.onUnit}\r\n                                    options={unitofmeasurechoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT SUPPLIER\"\r\n                                    value={supplier}\r\n                                    onChange={this.onSupplier}\r\n                                    options={activesuppliers}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE RAW MATERIAL\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Length </label>\r\n                            <InputNumber\r\n                                id=\"inLength\"\r\n                                value={this.state.selectRow.length}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        length: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Width </label>\r\n                            <InputNumber\r\n                                id=\"inWidth\"\r\n                                value={this.state.selectRow.width}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        width: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Height </label>\r\n                            <InputNumber\r\n                                id=\"inHeight\"\r\n                                value={this.state.selectRow.height}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        height: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inMaximumStockLevel\">Maximum Stock Level </label>\r\n                            <InputNumber\r\n                                id=\"inMaximumStockLevel\"\r\n                                value={this.state.selectRow.maximum_stock_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        maximum_stock_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inUnitPurchasePrice\">Unit Purchase Price</label>\r\n                            <InputNumber\r\n                                id=\"inUnitPurchasePrice\"\r\n                                value={this.state.selectRow.unit_purchase_price}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        unit_purchase_price: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inMinimumOrderLevel\">Minimum Order Level</label>\r\n                            <InputNumber\r\n                                id=\"inMinimumOrderLevel\"\r\n                                value={this.state.selectRow.minimum_order_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        minimum_order_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inDescription\">Description </label>\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCategory\"\r\n                                value={this.state.selectRow.category}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            category: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorycategories}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inUnit\"\r\n                                value={this.state.selectRow.unit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            unit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inSupplier\"\r\n                                value={this.state.selectRow.supplier}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            supplier: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={activesuppliers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            type: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorytypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    rawmaterials: state.rawmaterials.rawmaterials,\r\n    inventorytypeschoices: state.inventorytypeschoices.inventorytypeschoices,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    activesuppliers: state.activesuppliers.activesuppliers,\r\n    inventorycategories: state.inventorycategories.inventorycategories,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getRawMaterials,\r\n        addRawMaterial,\r\n        deleteRawMaterial,\r\n        editRawMaterial,\r\n        getInventoryTypesChoices,\r\n        getInventoryCategories,\r\n        getUnitOfMeasureChoices,\r\n        getActiveSuppliers,\r\n    }) (RawMaterials);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_EQUIPMENT,\r\n        GET_EQUIPMENTS,\r\n        DELETE_EQUIPMENT,\r\n        GET_EQUIPMENT,\r\n        EDIT_EQUIPMENT\r\n    } from '../types/equipmentTypes';\r\nimport { equipmentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getEquipments = () => dispatch => {\r\n    axios.get(equipmentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EQUIPMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteEquipment = (id) => dispatch => {\r\n    axios.delete(equipmentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_EQUIPMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addEquipment = (equipment) => dispatch => {\r\n    axios.post(equipmentsURL, equipment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_EQUIPMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getEquipment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/equipments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_EQUIPMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editEquipment = (id, equipment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/equipments/${id}/`, equipment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_EQUIPMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getEquipments, addEquipment, editEquipment, deleteEquipment } from '..//../actions/equipments';\r\nimport { getInventoryTypesChoices, getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport { getActiveSuppliers } from '..//../actions/activesuppliers';\r\nimport { getInventoryCategories } from '..//../actions/inventorycategories';\r\nimport \"./form.css\";\r\n\r\nclass Equipments extends Component {\r\n\r\n    emptyEquipment = {\r\n        name: '',\r\n        type: null,\r\n        category: null,\r\n        length: '',\r\n        width: '',\r\n        height: '',\r\n        description: '',\r\n        unit: null,\r\n        unit_purchase_price: '',\r\n        supplier: null,\r\n        minimum_order_level: '',\r\n        maximum_stock_level: '',\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            equipments : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedEquipments: null,\r\n            equipmentDialog: false,\r\n            deleteEquipmentDialog: false,\r\n            deleteEquipmentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveEquipment = this.saveEquipment.bind(this);\r\n        this.editEquipment = this.editEquipment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteEquipment = this.confirmDeleteEquipment.bind(this);\r\n        this.deleteEquipment = this.deleteEquipment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedEquipments = this.deleteSelectedEquipments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteEquipmentDialog = this.hideDeleteEquipmentDialog.bind(this);\r\n        this.hideDeleteEquipmentsDialog = this.hideDeleteEquipmentsDialog.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n        this.onCategory = this.onCategory.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onSupplier = this.onSupplier.bind(this);\r\n    }\r\n\r\n    onType (e){\r\n       this.setState({type: e.value})\r\n    }\r\n\r\n    onCategory (e){\r\n       this.setState({category: e.value})\r\n    }\r\n\r\n    onUnit (e){\r\n       this.setState({unit: e.value})\r\n    }\r\n\r\n    onSupplier (e){\r\n       this.setState({supplier: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        equipments : PropTypes.array.isRequired,\r\n        getInventoryTypesChoices: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n        getInventoryCategories: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEquipments();\r\n        this.props.getInventoryTypesChoices();\r\n        this.props.getUnitOfMeasureChoices();\r\n        this.props.getActiveSuppliers();\r\n        this.props.getInventoryCategories();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n            equipmentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            equipmentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteEquipmentDialog() {\r\n        this.setState({ deleteEquipmentDialog: false });\r\n    }\r\n\r\n    hideDeleteEquipmentsDialog() {\r\n        this.setState({ deleteEquipmentsDialog: false });\r\n    }\r\n\r\n    saveEquipment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n        const equipment = {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        this.props.addEquipment(equipment);\r\n        this.setState({\r\n            name: '',\r\n            type: null,\r\n            category: null,\r\n            length: '',\r\n            width: '',\r\n            height: '',\r\n            description: '',\r\n            unit: null,\r\n            unit_purchase_price: '',\r\n            supplier: null,\r\n            minimum_order_level: '',\r\n            maximum_stock_level: '',\r\n            equipmentDialog: false\r\n        });\r\n        this.props.history.push('/equipments');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editEquipment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state.selectRow;\r\n        const equipment = {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editEquipment(this.state.selectRow.id, equipment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteEquipment(equipment) {\r\n        this.setState({\r\n            equipment,\r\n            deleteEquipmentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteEquipment() {\r\n        this.props.deleteEquipment();\r\n        this.setState({\r\n            deleteEquipmentDialog: false,\r\n            equipment: this.emptyEquipment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteEquipmentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedEquipments() {\r\n        this.props.deleteEquipment();\r\n        this.setState({\r\n            deleteEquipmentsDialog: false,\r\n            selectedEquipments: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Equipment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW EQUIPMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteEquipment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const equipmentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveEquipment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editEquipment}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n\r\n        const {inventorytypeschoices} = this.props;\r\n        const {inventorycategories} = this.props;\r\n        const {unitofmeasurechoices} = this.props;\r\n        const {activesuppliers} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.equipments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedEquipments} onSelectionChange={e => this.setState({selectedEquipments: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Equipments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"category\"\r\n                            header=\"Category\"\r\n                            sortable filter filterPlaceholder=\"Search by Category\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"unit\"\r\n                            header=\"Unit\"\r\n                            sortable filter filterPlaceholder=\"Search by Unit\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.equipmentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Equipment\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={equipmentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                     />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>LENGTH</label>\r\n                                <InputNumber\r\n                                    name=\"length\"\r\n                                    onChange={this.onChange}\r\n                                    value={length}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>WIDTH</label>\r\n                                <InputNumber\r\n                                    name=\"width\"\r\n                                    onChange={this.onChange}\r\n                                    value={width}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>HEIGHT</label>\r\n                                <InputNumber\r\n                                    name=\"height\"\r\n                                    onChange={this.onChange}\r\n                                    value={height}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>MAXIMUM STOCK LEVEL</label>\r\n                                <InputNumber\r\n                                    name=\"maximum_stock_level\"\r\n                                    onChange={this.onChange}\r\n                                    value={maximum_stock_level}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>UNIT PURCHASE PRICE</label>\r\n                                <InputNumber\r\n                                    name=\"unit_purchase_price\"\r\n                                    onChange={this.onChange}\r\n                                    value={unit_purchase_price}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>MINIMUM ORDER LEVEL</label>\r\n                                <InputNumber\r\n                                    name=\"minimum_order_level\"\r\n                                    onChange={this.onChange}\r\n                                    value={minimum_order_level}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT TYPE\"\r\n                                    value={type}\r\n                                    onChange={this.onType}\r\n                                    options={inventorytypeschoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT CATEGORY\"\r\n                                    value={category}\r\n                                    onChange={this.onCategory}\r\n                                    options={inventorycategories}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT UNIT\"\r\n                                    value={unit}\r\n                                    onChange={this.onUnit}\r\n                                    options={unitofmeasurechoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT SUPPLIER\"\r\n                                    value={supplier}\r\n                                    onChange={this.onSupplier}\r\n                                    options={activesuppliers}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE EQUIPMENT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Length </label>\r\n                            <InputNumber\r\n                                id=\"inLength\"\r\n                                value={this.state.selectRow.length}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        length: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Width </label>\r\n                            <InputNumber\r\n                                id=\"inWidth\"\r\n                                value={this.state.selectRow.width}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        width: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Height </label>\r\n                            <InputNumber\r\n                                id=\"inHeight\"\r\n                                value={this.state.selectRow.height}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        height: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inMaximumStockLevel\">Maximum Stock Level </label>\r\n                            <InputNumber\r\n                                id=\"inMaximumStockLevel\"\r\n                                value={this.state.selectRow.maximum_stock_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        maximum_stock_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inUnitPurchasePrice\">Unit Purchase Price</label>\r\n                            <InputNumber\r\n                                id=\"inUnitPurchasePrice\"\r\n                                value={this.state.selectRow.unit_purchase_price}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        unit_purchase_price: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inMinimumOrderLevel\">Minimum Order Level</label>\r\n                            <InputNumber\r\n                                id=\"inMinimumOrderLevel\"\r\n                                value={this.state.selectRow.minimum_order_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        minimum_order_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inDescription\">Description </label>\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCategory\"\r\n                                value={this.state.selectRow.category}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            category: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorycategories}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inUnit\"\r\n                                value={this.state.selectRow.unit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            unit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inSupplier\"\r\n                                value={this.state.selectRow.supplier}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            supplier: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={activesuppliers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            type: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorytypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    equipments: state.equipments.equipments,\r\n    inventorytypeschoices: state.inventorytypeschoices.inventorytypeschoices,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    activesuppliers: state.activesuppliers.activesuppliers,\r\n    inventorycategories: state.inventorycategories.inventorycategories,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getEquipments,\r\n        addEquipment,\r\n        deleteEquipment,\r\n        editEquipment,\r\n        getInventoryTypesChoices,\r\n        getInventoryCategories,\r\n        getUnitOfMeasureChoices,\r\n        getActiveSuppliers,\r\n    }) (Equipments);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getConsumables, addConsumable, editConsumable, deleteConsumable } from '..//../actions/consumables';\r\nimport { getInventoryTypesChoices, getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport { getActiveSuppliers } from '..//../actions/activesuppliers';\r\nimport { getInventoryCategories } from '..//../actions/inventorycategories';\r\nimport \"./form.css\";\r\n\r\nclass Consumables extends Component {\r\n\r\n    emptyConsumable = {\r\n        name: '',\r\n        type: null,\r\n        category: null,\r\n        length: '',\r\n        width: '',\r\n        height: '',\r\n        description: '',\r\n        unit: null,\r\n        unit_purchase_price: '',\r\n        supplier: null,\r\n        minimum_order_level: '',\r\n        maximum_stock_level: '',\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            consumables : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedConsumables: null,\r\n            consumableDialog: false,\r\n            deleteConsumableDialog: false,\r\n            deleteConsumablesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveConsumable = this.saveConsumable.bind(this);\r\n        this.editConsumable = this.editConsumable.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteConsumable = this.confirmDeleteConsumable.bind(this);\r\n        this.deleteConsumable = this.deleteConsumable.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedConsumables = this.deleteSelectedConsumables.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteConsumableDialog = this.hideDeleteConsumableDialog.bind(this);\r\n        this.hideDeleteConsumablesDialog = this.hideDeleteConsumablesDialog.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n        this.onCategory = this.onCategory.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onSupplier = this.onSupplier.bind(this);\r\n    }\r\n\r\n    onType (e){\r\n       this.setState({type: e.value})\r\n    }\r\n\r\n    onCategory (e){\r\n       this.setState({category: e.value})\r\n    }\r\n\r\n    onUnit (e){\r\n       this.setState({unit: e.value})\r\n    }\r\n\r\n    onSupplier (e){\r\n       this.setState({supplier: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        consumables : PropTypes.array.isRequired,\r\n        getInventoryTypesChoices: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n        getActiveSuppliers: PropTypes.func.isRequired,\r\n        getInventoryCategories: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getConsumables();\r\n        this.props.getInventoryTypesChoices();\r\n        this.props.getUnitOfMeasureChoices();\r\n        this.props.getActiveSuppliers();\r\n        this.props.getInventoryCategories();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n            consumableDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            consumableDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteConsumableDialog() {\r\n        this.setState({ deleteConsumableDialog: false });\r\n    }\r\n\r\n    hideDeleteConsumablesDialog() {\r\n        this.setState({ deleteConsumablesDialog: false });\r\n    }\r\n\r\n    saveConsumable = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n        const consumable = {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        this.props.addConsumable(consumable);\r\n        this.setState({\r\n            name: '',\r\n            type: null,\r\n            category: null,\r\n            length: '',\r\n            width: '',\r\n            height: '',\r\n            description: '',\r\n            unit: null,\r\n            unit_purchase_price: '',\r\n            supplier: null,\r\n            minimum_order_level: '',\r\n            maximum_stock_level: '',\r\n            consumableDialog: false\r\n        });\r\n        this.props.history.push('/consumables');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                type: null,\r\n                category: null,\r\n                length: '',\r\n                width: '',\r\n                height: '',\r\n                description: '',\r\n                unit: null,\r\n                unit_purchase_price: '',\r\n                supplier: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editConsumable(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state.selectRow;\r\n        const consumable = {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editConsumable(this.state.selectRow.id, consumable);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteConsumable(consumable) {\r\n        this.setState({\r\n            consumable,\r\n            deleteConsumableDialog: true\r\n        });\r\n    }\r\n\r\n    deleteConsumable() {\r\n        this.props.deleteConsumable();\r\n        this.setState({\r\n            deleteConsumableDialog: false,\r\n            consumable: this.emptyConsumable\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteConsumablesDialog: true });\r\n    }\r\n\r\n    deleteSelectedConsumables() {\r\n        this.props.deleteConsumable();\r\n        this.setState({\r\n            deleteConsumablesDialog: false,\r\n            selectedConsumables: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Consumable</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW CONSUMABLE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteConsumable(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const consumableDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveConsumable} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editConsumable}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            type,\r\n            category,\r\n            length,\r\n            width,\r\n            height,\r\n            description,\r\n            unit,\r\n            unit_purchase_price,\r\n            supplier,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n\r\n        const {inventorytypeschoices} = this.props;\r\n        const {inventorycategories} = this.props;\r\n        const {unitofmeasurechoices} = this.props;\r\n        const {activesuppliers} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.consumables}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedConsumables} onSelectionChange={e => this.setState({selectedConsumables: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Consumables found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"type\"\r\n                            header=\"Type\"\r\n                            sortable filter filterPlaceholder=\"Search by Type\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"category\"\r\n                            header=\"Category\"\r\n                            sortable filter filterPlaceholder=\"Search by Category\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"unit\"\r\n                            header=\"Unit\"\r\n                            sortable filter filterPlaceholder=\"Search by Unit\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.consumableDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Consumable\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={consumableDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                     />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>LENGTH</label>\r\n                                <InputNumber\r\n                                    name=\"length\"\r\n                                    onChange={this.onChange}\r\n                                    value={length}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>WIDTH</label>\r\n                                <InputNumber\r\n                                    name=\"width\"\r\n                                    onChange={this.onChange}\r\n                                    value={width}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>HEIGHT</label>\r\n                                <InputNumber\r\n                                    name=\"height\"\r\n                                    onChange={this.onChange}\r\n                                    value={height}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>MAXIMUM STOCK LEVEL</label>\r\n                                <InputNumber\r\n                                    name=\"maximum_stock_level\"\r\n                                    onChange={this.onChange}\r\n                                    value={maximum_stock_level}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>UNIT PURCHASE PRICE</label>\r\n                                <InputNumber\r\n                                    name=\"unit_purchase_price\"\r\n                                    onChange={this.onChange}\r\n                                    value={unit_purchase_price}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <label>MINIMUM ORDER LEVEL</label>\r\n                                <InputNumber\r\n                                    name=\"minimum_order_level\"\r\n                                    onChange={this.onChange}\r\n                                    value={minimum_order_level}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT TYPE\"\r\n                                    value={type}\r\n                                    onChange={this.onType}\r\n                                    options={inventorytypeschoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT CATEGORY\"\r\n                                    value={category}\r\n                                    onChange={this.onCategory}\r\n                                    options={inventorycategories}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT UNIT\"\r\n                                    value={unit}\r\n                                    onChange={this.onUnit}\r\n                                    options={unitofmeasurechoices}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"value\"\r\n                                    optionValue=\"key\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <Dropdown\r\n                                    placeholder =\"SELECT SUPPLIER\"\r\n                                    value={supplier}\r\n                                    onChange={this.onSupplier}\r\n                                    options={activesuppliers}\r\n                                    filter={true}\r\n                                    filterBy=\"id,name\"\r\n                                    showClear={true}\r\n                                    optionLabel=\"name\"\r\n                                    optionValue=\"id\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE CONSUMABLE\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Length </label>\r\n                            <InputNumber\r\n                                id=\"inLength\"\r\n                                value={this.state.selectRow.length}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        length: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Width </label>\r\n                            <InputNumber\r\n                                id=\"inWidth\"\r\n                                value={this.state.selectRow.width}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        width: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAmount\">Height </label>\r\n                            <InputNumber\r\n                                id=\"inHeight\"\r\n                                value={this.state.selectRow.height}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        height: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inMaximumStockLevel\">Maximum Stock Level </label>\r\n                            <InputNumber\r\n                                id=\"inMaximumStockLevel\"\r\n                                value={this.state.selectRow.maximum_stock_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        maximum_stock_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inUnitPurchasePrice\">Unit Purchase Price</label>\r\n                            <InputNumber\r\n                                id=\"inUnitPurchasePrice\"\r\n                                value={this.state.selectRow.unit_purchase_price}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        unit_purchase_price: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inMinimumOrderLevel\">Minimum Order Level</label>\r\n                            <InputNumber\r\n                                id=\"inMinimumOrderLevel\"\r\n                                value={this.state.selectRow.minimum_order_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        minimum_order_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inDescription\">Description </label>\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inCategory\"\r\n                                value={this.state.selectRow.category}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            category: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorycategories}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inUnit\"\r\n                                value={this.state.selectRow.unit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            unit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inSupplier\"\r\n                                value={this.state.selectRow.supplier}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            supplier: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={activesuppliers}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            type: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={inventorytypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    consumables: state.consumables.consumables,\r\n    inventorytypeschoices: state.inventorytypeschoices.inventorytypeschoices,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    activesuppliers: state.activesuppliers.activesuppliers,\r\n    inventorycategories: state.inventorycategories.inventorycategories,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getConsumables,\r\n        addConsumable,\r\n        deleteConsumable,\r\n        editConsumable,\r\n        getInventoryTypesChoices,\r\n        getInventoryCategories,\r\n        getUnitOfMeasureChoices,\r\n        getActiveSuppliers,\r\n    }) (Consumables);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_CONSUMABLE,\r\n        GET_CONSUMABLES,\r\n        DELETE_CONSUMABLE,\r\n        GET_CONSUMABLE,\r\n        EDIT_CONSUMABLE\r\n    } from '../types/consumableTypes';\r\nimport { consumablesURL } from '../constants';\r\n\r\n// Get\r\nexport const getConsumables = () => dispatch => {\r\n    axios.get(consumablesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CONSUMABLES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteConsumable = (id) => dispatch => {\r\n    axios.delete(consumablesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_CONSUMABLE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addConsumable = (consumable) => dispatch => {\r\n    axios.post(consumablesURL, consumable)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CONSUMABLE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getConsumable = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/consumables/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CONSUMABLE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editConsumable = (id, consumable) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/inventory/consumables/${id}/`, consumable)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_CONSUMABLE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getFullyReceivedAndTotalPaidForOrders} from '..//../actions/fullyreceivedandtotalpaidfororders';\r\nimport \"./form.css\";\r\n\r\n\r\nclass FullyReceivedAndTotalPaidForOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullyreceivedandtotalpaidfororders : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        fullyreceivedandtotalpaidfororders : PropTypes.array.isRequired,\r\n        getFullyReceivedAndTotalPaidForOrders: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getFullyReceivedAndTotalPaidForOrders();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Fully Received And Total Paid For Orders</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.fullyreceivedandtotalpaidfororders}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Fully Received And Total Paid For Orders found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"status\"\r\n                        header=\"Status\"\r\n                        sortable filter filterPlaceholder=\"Search by Status\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"supplier\"\r\n                        header=\"Supplier\"\r\n                        sortable filter filterPlaceholder=\"Search by Supplier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"tracking_number\"\r\n                        header=\"Tracking Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Tracking Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"received_to_date\"\r\n                        header=\"Received To Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Received To Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    fullyreceivedandtotalpaidfororders: state.fullyreceivedandtotalpaidfororders.fullyreceivedandtotalpaidfororders\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFullyReceivedAndTotalPaidForOrders} ) (FullyReceivedAndTotalPaidForOrders);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n        GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDERS,\r\n        DELETE_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n        GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER\r\n    } from '../types/fullyreceivedandtotalpaidfororderTypes';\r\nimport { fullyreceivedandtotalpaidforordersURL } from '../constants';\r\n\r\n// Get\r\nexport const getFullyReceivedAndTotalPaidForOrders = () => dispatch => {\r\n    axios.get(fullyreceivedandtotalpaidforordersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteFullyReceivedAndTotalPaidForOrder = (id) => dispatch => {\r\n    axios.delete(fullyreceivedandtotalpaidforordersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addFullyReceivedAndTotalPaidForOrder = (fullyreceivedandtotalpaidfororder) => dispatch => {\r\n    axios.post(fullyreceivedandtotalpaidforordersURL, fullyreceivedandtotalpaidfororder)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getFullyReceivedAndTotalPaidForOrder = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/fully-received-and-total-paid-for-orders/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_RECEIVED_AND_TOTAL_PAID_FOR_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getFullyReceivedTotalPaidForAndVerifiedOrders} from '..//../actions/fullyreceivedtotalpaidforandverifiedorders';\r\nimport \"./form.css\";\r\n\r\n\r\nclass FullyReceivedTotalPaidForAndVerifiedOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullyreceivedtotalpaidforandverifiedorders : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        fullyreceivedtotalpaidforandverifiedorders : PropTypes.array.isRequired,\r\n        getFullyReceivedTotalPaidForAndVerifiedOrders: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getFullyReceivedTotalPaidForAndVerifiedOrders();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Fully Received Total Paid For And Verified Orders</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.fullyreceivedtotalpaidforandverifiedorders}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Fully Received Total Paid For And Verified Orders found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"status\"\r\n                        header=\"Status\"\r\n                        sortable filter filterPlaceholder=\"Search by Status\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"supplier\"\r\n                        header=\"Supplier\"\r\n                        sortable filter filterPlaceholder=\"Search by Supplier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"tracking_number\"\r\n                        header=\"Tracking Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Tracking Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"received_to_date\"\r\n                        header=\"Received To Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Received To Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    fullyreceivedtotalpaidforandverifiedorders: state.fullyreceivedtotalpaidforandverifiedorders.fullyreceivedtotalpaidforandverifiedorders\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFullyReceivedTotalPaidForAndVerifiedOrders} ) (FullyReceivedTotalPaidForAndVerifiedOrders);\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n        GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDERS,\r\n        DELETE_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n        GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER\r\n    } from '../types/fullyreceivedtotalpaidforandverifiedorderTypes';\r\nimport { fullyreceivedtotalpaidforandverifiedordersURL } from '../constants';\r\n\r\n// Get\r\nexport const getFullyReceivedTotalPaidForAndVerifiedOrders = () => dispatch => {\r\n    axios.get(fullyreceivedtotalpaidforandverifiedordersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteFullyReceivedTotalPaidForAndVerifiedOrder = (id) => dispatch => {\r\n    axios.delete(fullyreceivedtotalpaidforandverifiedordersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addFullyReceivedTotalPaidForAndVerifiedOrder = (fullyreceivedtotalpaidforandverifiedorder) => dispatch => {\r\n    axios.post(fullyreceivedtotalpaidforandverifiedordersURL, fullyreceivedtotalpaidforandverifiedorder)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getFullyReceivedTotalPaidForAndVerifiedOrder = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/inventory/fully-received-total-paid-for-and-verified-orders/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLY_RECEIVED_TOTAL_PAID_FOR_AND_VERIFIED_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getCreditNotes} from '..//../actions/creditnotes';\r\nimport \"./form.css\";\r\n\r\n\r\nclass CreditNotes extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            creditnotes : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        creditnotes : PropTypes.array.isRequired,\r\n        getCreditNotes: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getCreditNotes();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Credit Notes</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.creditnotes}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Credit Notes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"invoice\"\r\n                        header=\"Invoice\"\r\n                        sortable filter filterPlaceholder=\"Search by Invoice\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"entry\"\r\n                        header=\"Entry\"\r\n                        sortable filter filterPlaceholder=\"Search by Entry\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"date\"\r\n                        header=\"Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    creditnotes: state.creditnotes.creditnotes\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCreditNotes} ) (CreditNotes);\r\n","import axios from 'axios';\r\nimport { ADD_CREDIT_NOTE, GET_CREDIT_NOTES, GET_CREDIT_NOTE, DELETE_CREDIT_NOTE } from '../types/creditnoteTypes';\r\nimport { creditnotesURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getCreditNotes = () => dispatch => {\r\n    axios.get(creditnotesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CREDIT_NOTES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteCreditNote = (id) => dispatch => {\r\n    axios.delete(creditnotesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_CREDIT_NOTE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addCreditNote = creditnote => dispatch => {\r\n    axios.post(creditnotesURL, creditnote)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CREDIT_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getCreditNote = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/creditnote/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CREDIT_NOTE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getPayments, addPayment, editPayment } from '..//../actions/payments';\r\nimport { getCustomerPaymentMethodsChoices } from '..//../actions/choices';\r\nimport { getInvoices } from '..//../actions/invoices';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getCashDrawers } from '..//../actions/cashdrawers';\r\n\r\n\r\nclass Payments extends Component {\r\n\r\n    emptyAccount = {\r\n        amount: '',\r\n        comments: '',\r\n        invoice: null,\r\n        cashier: null,\r\n        method: null,\r\n        cash: null,\r\n        \r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            accounts : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedPayments: null,\r\n            paymentDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                amount: '',\r\n                comments: '',\r\n                invoice: null,\r\n                cashier: null,\r\n                method: null,\r\n                cash: null,\r\n            },\r\n            newData: {\r\n                amount: '',\r\n                comments: '',\r\n                invoice: null,\r\n                cashier: null,\r\n                method: null,\r\n                cash: null,\r\n            },\r\n            submitted: false,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.savePayment = this.savePayment.bind(this);\r\n        this.editPayment = this.editPayment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n        this.onMethod = this.onMethod.bind(this);\r\n        this.onInvoice = this.onInvoice.bind(this);\r\n        this.onCash = this.onCash.bind(this);\r\n\r\n\r\n        \r\n    }\r\n\r\n    static propTypes = {\r\n        payments : PropTypes.array.isRequired,\r\n        getPayments: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployees();\r\n        this.props.getPayments();\r\n        this.props.getCustomerPaymentMethodsChoices();\r\n        this.props.getCashDrawers();\r\n        this.props.getInvoices();\r\n\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    onEmployee (e){\r\n        this.setState({cashier: e.value})\r\n    }\r\n\r\n    onMethod (e){\r\n        this.setState({method: e.value})\r\n    }\r\n\r\n    onInvoice (e){\r\n        this.setState({invoice: e.value})\r\n    }\r\n\r\n    onCash (e){\r\n        this.setState({cash: e.value})\r\n    }\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                amount: '',\r\n                comments: '',\r\n                invoice: null,\r\n                cashier: null,\r\n                method: null,\r\n                cash: null,\r\n                \r\n            },\r\n            submitted: false,\r\n            paymentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            paymentDialog: false\r\n        });\r\n    }\r\n\r\n\r\n\r\n    savePayment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            amount,\r\n            comments,\r\n            invoice,\r\n            cashier,\r\n            method,\r\n            cash,\r\n        } = this.state;\r\n        const payment = {\r\n            amount,\r\n            comments,\r\n            invoice,\r\n            cashier,\r\n            method,\r\n            cash,\r\n        };\r\n        this.props.addPayment(payment);\r\n        this.setState({\r\n            amount: '',\r\n            comments: '',\r\n            invoice: null,\r\n            cashier: null,\r\n            method: null,\r\n            cash: null,\r\n            \r\n        });\r\n        this.props.history.push('/payments');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                amount: '',\r\n                comments: '',\r\n                invoice: null,\r\n                cashier: null,\r\n                method: null,\r\n                cash: null,\r\n            }     \r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editPayment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            amount,\r\n            comments,\r\n            invoice,\r\n            cashier,\r\n            method,\r\n            cash,\r\n        } = this.state.selectRow;\r\n        const payment = {\r\n            amount,\r\n            comments,\r\n            invoice,\r\n            cashier,\r\n            method,\r\n            cash,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editPayment(this.state.selectRow.id, payment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.id) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Payment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"MAKE NEW PAYMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const paymentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.savePayment} />\r\n            </>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { invoices } = this.props;\r\n        const { customerpaymentmethodschoices } = this.props;\r\n        const { employees } = this.props;\r\n        const { cashdrawers } = this.props;\r\n        const { payments } = this.props;\r\n\r\n        const {\r\n            amount,\r\n            comments,\r\n            invoice,\r\n            cashier,\r\n            method,\r\n            cash,\r\n            \r\n        } = this.state;\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={payments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Payments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"method\"\r\n                            header=\"Payment Method\"\r\n                            sortable filter filterPlaceholder=\"Search by Method\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"amount\"\r\n                            header=\"Amount\"\r\n                            sortable filter filterPlaceholder=\"Search by Amount\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog \r\n                        visible={this.state.paymentDialog} \r\n                        style={{ width: '900px' }} \r\n                        header=\" Create Payment\" \r\n                        modal \r\n                        className=\"p-fluid\" \r\n                        footer={paymentDialogFooter} \r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        \r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label>Amount</label>\r\n                            <InputNumber\r\n                                name=\"amount\"\r\n                                mode=\"decimal\"\r\n                                onChange={this.onChange}\r\n                                value={amount}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"comments\"\r\n                                    onChange={this.onChange}\r\n                                    value={comments}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Comments</label>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={invoice}\r\n                                onChange={this.onInvoice}\r\n                                options={invoices}\r\n                                filter={true}\r\n                                filterBy=\"id\"\r\n                                showClear={true}\r\n                                optionLabel=\"customer\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT INVOICE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={method}\r\n                                onChange={this.onMethod}\r\n                                options={customerpaymentmethodschoices}\r\n                                filter={true}\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT PAYMENT METHOD</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={cashier}\r\n                                onChange={this.onEmployee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                showClear={true}\r\n                                optionLabel=\"email\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CASHIER</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={cash}\r\n                                onChange={this.onCash}\r\n                                options={cashdrawers}\r\n                                filter={true}\r\n                                showClear={true}\r\n                                optionLabel=\"id\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"dropdown\">SELECT CASH DRAWER</label>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    payments: state.payments.payments,\r\n    cashdrawers: state.cashdrawers.cashdrawers,\r\n    invoices: state.invoices.invoices,\r\n    employees: state.employees.employees,\r\n    customerpaymentmethodschoices: state.customerpaymentmethodschoices.customerpaymentmethodschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n            mapStateToProps, \r\n            {getPayments, addPayment, editPayment, getCashDrawers, getCustomerPaymentMethodsChoices, getEmployees, getInvoices } \r\n            ) (Payments);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { GET_PAYMENTS, GET_PAYMENT, ADD_PAYMENT, EDIT_PAYMENT, DELETE_PAYMENT } from '../types/paymentTypes';\r\nimport { paymentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getPayments = () => dispatch => {\r\n    axios.get(paymentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PAYMENTS ,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deletePayment = (id) => dispatch => {\r\n    axios.delete(paymentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PAYMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addPayment = (payment) => dispatch => {\r\n    axios.post(paymentsURL, payment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Get\r\nexport const getPayment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/payments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n\r\nexport const editPayment = (id, payment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/sales/payments/${id}`, payment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PAYMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { GET_CASH_DRAWERS} from './types';\r\nimport { cashdrawersURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getCashDrawers = () => dispatch => {\r\n    axios.get(cashdrawersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CASH_DRAWERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}","import axios from 'axios';\r\nimport {\r\n        GET_INVOICES,\r\n        ADD_INVOICE,\r\n        GET_ERRORS,\r\n    } from './types';\r\nimport { invoicesURL } from '../constants';\r\n\r\n// Get\r\nexport const getInvoices = () => dispatch => {\r\n    axios.get(invoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addInvoice = invoice => dispatch => {\r\n    axios.post(invoicesURL, invoice)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_INVOICE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err =>{\r\n            const errors = {\r\n                msg: err.response.data,\r\n                status: err.response.status\r\n\r\n        }\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: errors\r\n        });\r\n    });\r\n}","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getReceipts } from '..//../actions/receipts';\r\n\r\n\r\n\r\nclass Receipts extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            receipts : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        receipts : PropTypes.array.isRequired,\r\n        getReceipts: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getReceipts();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Accounts</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"RECEIPT\" className=\"p-button-success p-mr-2\" />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.receipts}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Receipts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"receipt_number\"\r\n                        header=\"Receipt Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Receipt Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"amount\"\r\n                        header=\"Amount Paid\"\r\n                        sortable filter filterPlaceholder=\"Search by Amount Paid\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"created_date\"\r\n                        header=\"Created Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Created Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    receipts: state.receipts.receipts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getReceipts} ) (Receipts);\r\n\r\n\r\n","import axios from 'axios';\r\nimport { GET_RECEIPTS, GET_RECEIPT, DELETE_RECEIPT } from '../types/receiptTypes';\r\nimport { receiptsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getReceipts = () => dispatch => {\r\n    axios.get(receiptsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_RECEIPTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteReceipt = (id) => dispatch => {\r\n    axios.delete(receiptsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_RECEIPT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getReceipt = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/receipts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_RECEIPT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getInvoiceLines} from '..//../actions/invoicelines';\r\nimport \"./form.css\";\r\n\r\n\r\nclass InvoiceLines extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            invoicelines : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        invoicelines : PropTypes.array.isRequired,\r\n        getInvoiceLines: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getInvoiceLines();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Invoice Lines</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.invoicelines}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Invoice Lines found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"invoice\"\r\n                        header=\"Invoice\"\r\n                        sortable filter filterPlaceholder=\"Search by Invoice\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"product\"\r\n                        header=\"Product\"\r\n                        sortable filter filterPlaceholder=\"Search by Product\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"line_type\"\r\n                        header=\"Line Type\"\r\n                        sortable filter filterPlaceholder=\"Search by Line Type\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"tax\"\r\n                        header=\"Tax\"\r\n                        sortable filter filterPlaceholder=\"Search by Tax\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"discount\"\r\n                        header=\"Discount\"\r\n                        sortable filter filterPlaceholder=\"Search by Discount\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"total\"\r\n                        header=\"Total\"\r\n                        sortable filter filterPlaceholder=\"Search by Total\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    invoicelines: state.invoicelines.invoicelines\r\n})\r\n\r\nexport default connect(mapStateToProps, {getInvoiceLines} ) (InvoiceLines);\r\n","import axios from 'axios';\r\nimport { GET_INVOICE_LINES } from '../types/invoicelineTypes';\r\nimport { invoicelinesURL } from '../constants';\r\n\r\n\r\nexport const getInvoiceLines = () => dispatch => {\r\n    axios.get(invoicelinesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_INVOICE_LINES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { GET_SALES_GROUPS_PRICING_DISCOUNTS, GET_SALES_GROUPS_PRICING_DISCOUNT, DELETE_SALES_GROUPS_PRICING_DISCOUNT, ADD_SALES_GROUPS_PRICING_DISCOUNT } from '../types/salesgroupspricingdiscountTypes';\r\nimport { salesgroupspricingdiscountsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getSalesGroupsPricingDiscounts = () => dispatch => {\r\n    axios.get(salesgroupspricingdiscountsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SALES_GROUPS_PRICING_DISCOUNTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteSalesGroupsPricingDiscount = (id) => dispatch => {\r\n    axios.delete(salesgroupspricingdiscountsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_SALES_GROUPS_PRICING_DISCOUNT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addSalesGroupsPricingDiscount = (salesgroupspricingdiscount) => dispatch => {\r\n    axios.post(salesgroupspricingdiscountsURL, salesgroupspricingdiscount)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SALES_GROUPS_PRICING_DISCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getSalesGroupsPricingDiscount = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/sales-groups-pricing-discounts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SALES_GROUPS_PRICING_DISCOUNT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getSalesGroupsPricingDiscounts} from '..//../actions/salesgroupspricingdiscounts';\r\nimport \"./form.css\";\r\n\r\n\r\nclass SalesGroupsPricingDiscounts extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            salesgroupspricingdiscounts : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        salesgroupspricingdiscounts : PropTypes.array.isRequired,\r\n        getSalesGroupsPricingDiscounts: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getSalesGroupsPricingDiscounts();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Sales Groups Pricing Discounts</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.salesgroupspricingdiscounts}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Sales Groups Pricing Discounts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"group_name\"\r\n                        header=\"Group Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Group Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"product_name\"\r\n                        header=\"Product Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Product Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"group_discount_rate\"\r\n                        header=\"Group Discount Rate\"\r\n                        sortable filter filterPlaceholder=\"Search by Group Discount Rate\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    salesgroupspricingdiscounts: state.salesgroupspricingdiscounts.salesgroupspricingdiscounts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getSalesGroupsPricingDiscounts} ) (SalesGroupsPricingDiscounts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addSalesGroupsPricingDiscount } from '..//../actions/salesgroupspricingdiscounts';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\n\r\n\r\nclass SalesGroupsPricingDiscountForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            group_name: '',\r\n            product_name: '',\r\n            group_discount_rate: ''\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            group_name,\r\n            product_name,\r\n            group_discount_rate\r\n        } = this.state;\r\n        const salesgroupspricingdiscount = {\r\n            group_name,\r\n            product_name,\r\n            group_discount_rate\r\n        };\r\n        this.props.addSalesGroupsPricingDiscount(salesgroupspricingdiscount);\r\n        this.setState({\r\n            group_name: '',\r\n            product_name: '',\r\n            group_discount_rate: ''\r\n        });\r\n        this.props.history.push('/salesgroupspricingdiscounts');\r\n    };\r\n\r\n    static propTypes = {\r\n        addSalesGroupsPricingDiscount: PropTypes.func.isRequired,\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            group_name,\r\n            product_name,\r\n            group_discount_rate\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Sales Groups Pricing Discount</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"group_name\"\r\n                                onChange={this.onChange}\r\n                                value={group_name}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Group Name</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"product_name\"\r\n                                onChange={this.onChange}\r\n                                value={product_name}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Product Name</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <label>Group Discount Rate</label>\r\n                         <InputNumber\r\n                            name=\"group_discount_rate\"\r\n                            mode=\"decimal\"\r\n                            onChange={this.onChange}\r\n                            value={group_discount_rate}\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                          />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { addSalesGroupsPricingDiscount})(SalesGroupsPricingDiscountForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getQuotations} from '..//../actions/quotations';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Quotations extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            quotations : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        quotations : PropTypes.array.isRequired,\r\n        getQuotations: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getQuotations();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Quotations</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.quotations}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Quotations found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer\"\r\n                        header=\"Customer\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    quotations: state.quotations.quotations\r\n})\r\n\r\nexport default connect(mapStateToProps, {getQuotations} ) (Quotations);\r\n","import axios from 'axios';\r\nimport { GET_QUOTATIONS, GET_QUOTATION, DELETE_QUOTATION } from '../types/quotationTypes';\r\nimport { quotationsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getQuotations = () => dispatch => {\r\n    axios.get(quotationsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_QUOTATIONS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteQuotation = (id) => dispatch => {\r\n    axios.delete(quotationsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_QUOTATION,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getQuotation = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/quotations/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_QUOTATION,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getUnverifiedInvoices} from '..//../actions/unverifiedinvoices';\r\nimport \"./form.css\";\r\n\r\nclass UnverifiedInvoices extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            unverifiedinvoices : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        unverifiedinvoices : PropTypes.array.isRequired,\r\n        getUnverifiedInvoices: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUnverifiedInvoices();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Unverified Invoices</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.unverifiedinvoices}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Unverified Invoices found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer\"\r\n                        header=\"Customer\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    unverifiedinvoices: state.unverifiedinvoices.unverifiedinvoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUnverifiedInvoices} ) (UnverifiedInvoices);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_UNVERIFIED_INVOICES,\r\n        DELETE_UNVERIFIED_INVOICE,\r\n        GET_UNVERIFIED_INVOICE\r\n    } from '../types/unverifiedinvoiceTypes';\r\nimport { unverifiedinvoicesURL } from '../constants';\r\n\r\n// Get\r\nexport const getUnverifiedInvoices = () => dispatch => {\r\n    axios.get(unverifiedinvoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNVERIFIED_INVOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteUnverifiedInvoice = (id) => dispatch => {\r\n    axios.delete(unverifiedinvoicesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_UNVERIFIED_INVOICE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getUnverifiedInvoice = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/unverified-invoices/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNVERIFIED_INVOICE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getOverdueInvoices} from '..//../actions/overdueinvoices';\r\nimport \"./form.css\";\r\n\r\n\r\nclass OverdueInvoices extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            overdueinvoices : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        overdueinvoices : PropTypes.array.isRequired,\r\n        getOverdueInvoices: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getOverdueInvoices();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Overdue Invoices</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.overdueinvoices}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Overdue Invoices found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer\"\r\n                        header=\"Customer\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    overdueinvoices: state.overdueinvoices.overdueinvoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {getOverdueInvoices} ) (OverdueInvoices);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_OVERDUE_INVOICES,\r\n        DELETE_OVERDUE_INVOICE,\r\n        GET_OVERDUE_INVOICE\r\n    } from '../types/overdueinvoiceTypes';\r\nimport { overdueinvoicesURL } from '../constants';\r\n\r\n// Get\r\nexport const getOverdueInvoices = () => dispatch => {\r\n    axios.get(overdueinvoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_OVERDUE_INVOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteOverdueInvoice = (id) => dispatch => {\r\n    axios.delete(overdueinvoicesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_OVERDUE_INVOICE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getOverdueInvoice = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/overdue-invoices/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_OVERDUE_INVOICE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getVoidedInvoices} from '..//../actions/voidedinvoices';\r\nimport \"./form.css\";\r\n\r\nclass VoidedInvoices extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            voidedinvoices : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        voidedinvoices : PropTypes.array.isRequired,\r\n        getVoidedInvoices: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getVoidedInvoices();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Voided Invoices</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.voidedinvoices}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Voided Invoices found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer\"\r\n                        header=\"Customer\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    voidedinvoices: state.voidedinvoices.voidedinvoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {getVoidedInvoices} ) (VoidedInvoices);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_VOIDED_INVOICES,\r\n        DELETE_VOIDED_INVOICE,\r\n        GET_VOIDED_INVOICE\r\n    } from '../types/voidedinvoiceTypes';\r\nimport { voidedinvoicesURL } from '../constants';\r\n\r\n// Get\r\nexport const getVoidedInvoices = () => dispatch => {\r\n    axios.get(voidedinvoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_VOIDED_INVOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteVoidedInvoice = (id) => dispatch => {\r\n    axios.delete(voidedinvoicesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_VOIDED_INVOICE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getVoidedInvoice = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/voided-invoices/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_VOIDED_INVOICE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getRefundedInvoices} from '..//../actions/refundedinvoices';\r\nimport \"./form.css\";\r\n\r\nclass RefundedInvoices extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            refundedinvoices : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        refundedinvoices : PropTypes.array.isRequired,\r\n        getRefundedInvoices: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getRefundedInvoices();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Refunded Invoices</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.refundedinvoices}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Refunded Invoices found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer\"\r\n                        header=\"Customer\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    refundedinvoices: state.refundedinvoices.refundedinvoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {getRefundedInvoices} ) (RefundedInvoices);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_REFUNDED_INVOICES,\r\n        DELETE_REFUNDED_INVOICE,\r\n        GET_REFUNDED_INVOICE\r\n    } from '../types/refundedinvoiceTypes';\r\nimport { refundedinvoicesURL } from '../constants';\r\n\r\n// Get\r\nexport const getRefundedInvoices = () => dispatch => {\r\n    axios.get(refundedinvoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_REFUNDED_INVOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteRefundedInvoice = (id) => dispatch => {\r\n    axios.delete(refundedinvoicesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_REFUNDED_INVOICE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getRefundedInvoice = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/refunded-invoices/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_REFUNDED_INVOICE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getFullypaidNotYetSalesInvoices} from '..//../actions/fullypaidnotyetsalesinvoices';\r\nimport \"./form.css\";\r\n\r\n\r\nclass FullypaidNotYetSalesInvoices extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullypaidnotyetsalesinvoices : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        fullypaidnotyetsalesinvoices : PropTypes.array.isRequired,\r\n        getFullypaidNotYetSalesInvoices: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getFullypaidNotYetSalesInvoices();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Fullypaid Not Yet Sales Invoices</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.fullypaidnotyetsalesinvoices}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Fullypaid Not Yet Sales Invoices found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"account_number\"\r\n                        header=\"Account Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Account Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"type\"\r\n                        header=\"Type\"\r\n                        sortable filter filterPlaceholder=\"Search by Type\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"balance_sheet_category\"\r\n                        header=\"Balance Sheet Category\"\r\n                        sortable filter filterPlaceholder=\"Search by Balance Sheet Category\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"balance\"\r\n                        header=\"Balance\"\r\n                        sortable filter filterPlaceholder=\"Search by Balance\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"created_date\"\r\n                        header=\"Created Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Created Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    fullypaidnotyetsalesinvoices: state.fullypaidnotyetsalesinvoices.fullypaidnotyetsalesinvoices\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFullypaidNotYetSalesInvoices} ) (FullypaidNotYetSalesInvoices);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_FULLYPAID_NOT_YET_SALES_INVOICES,\r\n        DELETE_FULLYPAID_NOT_YET_SALES_INVOICE,\r\n        GET_FULLYPAID_NOT_YET_SALES_INVOICE\r\n    } from '../types/fullypaidnotyetsalesinvoiceTypes';\r\nimport { fullypaidnotyetsalesinvoicesURL } from '../constants';\r\n\r\n// Get\r\nexport const getFullypaidNotYetSalesInvoices = () => dispatch => {\r\n    axios.get(fullypaidnotyetsalesinvoicesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLYPAID_NOT_YET_SALES_INVOICES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteFullypaidNotYetSalesInvoice = (id) => dispatch => {\r\n    axios.delete(fullypaidnotyetsalesinvoicesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_FULLYPAID_NOT_YET_SALES_INVOICE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getFullypaidNotYetSalesInvoice = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/fullypaid-not-yet-sales-invoices/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_FULLYPAID_NOT_YET_SALES_INVOICE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getSales} from '..//../actions/sales';\r\nimport \"./form.css\";\r\n\r\n\r\n\r\nclass Sales extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            sales : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        sales : PropTypes.array.isRequired,\r\n        getSales: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getSales();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Sales</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.sales}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Sales found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"customer\"\r\n                        header=\"Customer\"\r\n                        sortable filter filterPlaceholder=\"Search by Customer\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"cashier\"\r\n                        header=\"Cashier\"\r\n                        sortable filter filterPlaceholder=\"Search by Cashier\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    sales: state.sales.sales\r\n})\r\n\r\nexport default connect(mapStateToProps, {getSales} ) (Sales);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_SALES,\r\n        DELETE_SALE,\r\n        ADD_SALE,\r\n        GET_SALE\r\n    } from '../types/saleTypes';\r\nimport { salesURL } from '../constants';\r\n\r\n// Get\r\nexport const getSales = () => dispatch => {\r\n    axios.get(salesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SALES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addSale = (sale) => dispatch => {\r\n    axios.post(salesURL, sale)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SALE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Delete\r\nexport const deleteSale = (id) => dispatch => {\r\n    axios.delete(salesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_SALE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getSale = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/sales/sales/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SALE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport { GET_PROCESS_PRODUCTS, GET_PROCESS_PRODUCT, EDIT_PROCESS_PRODUCT, DELETE_PROCESS_PRODUCT, ADD_PROCESS_PRODUCT } from '../types/processproductTypes';\r\nimport { processproductsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getProcessProducts = () => dispatch => {\r\n    axios.get(processproductsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_PRODUCTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessProduct = (id) => dispatch => {\r\n    axios.delete(processproductsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESS_PRODUCT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addProcessProduct = (processproduct) => dispatch => {\r\n    axios.post(processproductsURL, processproduct)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESS_PRODUCT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessProduct = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/process-products/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_PRODUCT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editProcessProduct = (id, processproduct) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/process-products/${id}/`, processproduct)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PROCESS_PRODUCT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import React, { Component } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getProcessProducts } from '..//../actions/processproducts';\r\nimport { getTaxes} from '..//../actions/taxes';\r\nimport { getSalesGroupsPricingDiscounts } from '..//../actions/salesgroupspricingdiscounts';\r\n\r\n\r\n\r\n\r\nclass Lines extends Component{\r\n  componentDidMount(){\r\n    this.props.getTaxes();\r\n    this.props.getProcessProducts();\r\n    this.props.getSalesGroupsPricingDiscounts();\r\n  }\r\n\r\n  render(){\r\n    const { processproducts } = this.props;\r\n    const { taxes } = this.props;\r\n    const { salesgroupspricingdiscounts } = this.props;\r\n\r\n    let products = processproducts.length > 0\r\n      && processproducts.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>{item.name}</option>\r\n      )\r\n      }, this);\r\n\r\n    let discounts = salesgroupspricingdiscounts.length > 0\r\n      && salesgroupspricingdiscounts.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>{item.group_name}</option>\r\n      )\r\n      }, this);\r\n\r\n\r\n\r\n    let Taxes = taxes.length > 0\r\n      && taxes.map((item, i) => {\r\n      return (\r\n        <option key={i} value={item.id}>{item.name}</option>\r\n      )\r\n      }, this);\r\n\r\n\r\n\r\n\r\n    return (\r\n      this.props.lines.map((val, idx) => {\r\n        let discount = `discount-${idx}`, quantity = `quantity-${idx}`, product = `product-${idx}`, tax = `tax-${idx}`\r\n        return (\r\n          <tr key={val.index}>\r\n            <td>\r\n              <select\r\n                name=\"discount\"\r\n                id={discount}\r\n                data-id={idx}\r\n                className=\"form-control\"\r\n              >\r\n                 {discounts}\r\n              </select>\r\n            </td>\r\n\r\n            <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"quantity\"\r\n                  data-id={idx}\r\n                  id={quantity}\r\n                  className=\"form-control\"\r\n                />\r\n            </td>\r\n            \r\n            <td>\r\n              <select\r\n                name=\"product\"\r\n                id={product}\r\n                data-id={idx}\r\n                className=\"form-control\"\r\n              >\r\n                 {products}\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select\r\n                name=\"tax\"\r\n                id={tax}\r\n                data-id={idx}\r\n                className=\"form-control\"\r\n              >\r\n                 {Taxes}\r\n              </select>\r\n            </td>\r\n\r\n            <td>\r\n              {\r\n              idx===0?<Button onClick={()=>this.props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n              : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => this.props.delete(val))} />\r\n              }\r\n            </td>\r\n          </tr >\r\n        )\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    processproducts: state.processproducts.processproducts,\r\n    taxes: state.taxes.taxes,\r\n    salesgroupspricingdiscounts: state.salesgroupspricingdiscounts.salesgroupspricingdiscounts\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  { getProcessProducts, getTaxes, getSalesGroupsPricingDiscounts } ) \r\n  (Lines);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addInvoice } from '..//../actions/invoices';\r\nimport { getActiveCustomers } from '..//../actions/activecustomers';\r\nimport { getWarehouses } from '..//../actions/warehouses';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getInvoiceSalesChoices, getInvoiceSalesTypesChoices } from '..//../actions/choices';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport Lines from './Lines';\r\nimport PropTypes from 'prop-types';\r\nimport {Dropdown} from 'primereact/dropdown';\r\n\r\n\r\nexport class SalesForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            status: null,\r\n            customer: null,\r\n            validated_by: null,\r\n            cashier: null,\r\n            due: '',\r\n            terms: '',\r\n            comments: '',\r\n            ship_from: null,\r\n            sale_type: null,\r\n            lines: [{ index: Math.random(),discount: '', quantity:'', product: '',  tax: '' }],\r\n\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.onStatus = this.onStatus.bind(this);\r\n        this.onCustomer = this.onCustomer.bind(this);\r\n        this.onInvoiceValidator = this.onInvoiceValidator.bind(this);\r\n        this.onSale = this.onSale.bind(this);\r\n        this.onShipFrom = this.onShipFrom.bind(this);\r\n        this.onCashier = this.onCashier.bind(this);\r\n    }\r\n\r\n    onStatus (e){\r\n      this.setState({status: e.value})\r\n    }\r\n\r\n    onCustomer (e){\r\n      this.setState({customer: e.value})\r\n    }\r\n\r\n    onInvoiceValidator (e){\r\n      this.setState({validated_by: e.value})\r\n    }\r\n\r\n    onCashier (e){\r\n      this.setState({cashier: e.value})\r\n    }\r\n\r\n    onShipFrom (e){\r\n      this.setState({ship_from: e.value})\r\n    }\r\n\r\n    onSale (e){\r\n      this.setState({sale_type: e.value})\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        if ([\"discount\", 'quantity', \"product\",  \"tax\"].includes(e.target.name)) {\r\n          let lines = [...this.state.lines]\r\n          lines[e.target.dataset.id][e.target.name] = e.target.value;\r\n        } else {\r\n          this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            lines: [...prevState.lines, { index: Math.random(), discount: '', quantity:'', product: '',  tax: ''}],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            lines: this.state.lines.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n          lines: this.state.lines.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n          status,\r\n          customer,\r\n          validated_by,\r\n          cashier,\r\n          sale_type,\r\n          due,\r\n          terms,\r\n          comments,\r\n          ship_from,\r\n          lines,\r\n\r\n      } = this.state;\r\n\r\n\r\n      const invoice = {\r\n          status,\r\n          customer,\r\n          validated_by,\r\n          cashier,\r\n          sale_type,\r\n          due,\r\n          terms,\r\n          comments,\r\n          ship_from,\r\n          lines,\r\n      };\r\n\r\n      this.props.addInvoice(invoice);\r\n      console.log(invoice)\r\n      this.setState({\r\n          lines: [],\r\n          status: \"\",\r\n          customer: \"\",\r\n          validated_by: \"\",\r\n          cashier: \"\",\r\n          sale_type: '',\r\n          due: \"\",\r\n          terms: \"\",\r\n          comments: \"\",\r\n          ship_from: \"\",\r\n\r\n        });\r\n        // this.props.history.push('/invoices');\r\n    };\r\n\r\n    static propTypes = {\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getInvoiceSalesChoices: PropTypes.func.isRequired,\r\n        getInvoiceSalesTypesChoices: PropTypes.func.isRequired,\r\n        getActiveCustomers: PropTypes.func.isRequired,\r\n        addInvoice: PropTypes.func.isRequired,\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.getActiveCustomers();\r\n      this.props.getWarehouses();\r\n      this.props.getInvoiceSalesTypesChoices();\r\n      this.props.getInvoiceSalesChoices();\r\n      this.props.getEmployees();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n          status,\r\n          customer,\r\n          validated_by,\r\n          cashier,\r\n          due,\r\n          sale_type,\r\n          terms,\r\n          ship_from,\r\n          comments,\r\n          lines,\r\n        } = this.state;\r\n\r\n\r\n        const { activecustomers} = this.props;\r\n        const { invoicesalestypeschoices } = this.props;\r\n        const { invoicesaleschoices} = this.props;\r\n        const { warehouses} = this.props;\r\n        const { employees } = this.props;\r\n\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>ADD INVOICE</h2>\r\n              <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label>Due</label>\r\n                    <Calendar\r\n                      showIcon={true}\r\n                      className=\"form-control\"\r\n                      name=\"due\"\r\n                      onChange={this.onChange}\r\n                      value={due}\r\n                      dateFormat=\"yy-mm-dd\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label>Terms</label>\r\n                    <InputText\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"terms\"\r\n                      onChange={this.onChange}\r\n                      value={terms}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>Comments</label>\r\n                    <InputTextarea\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"comments\"\r\n                      onChange={this.onChange}\r\n                      value={comments}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown \r\n                      placeholder =\"VALIDATED BY\"\r\n                      value={validated_by}\r\n                      onChange={this.onInvoiceValidator}\r\n                      options={employees}\r\n                      filter={true} \r\n                      filterBy=\"id,name\" \r\n                      showClear={true}\r\n                      optionLabel=\"email\" \r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown \r\n                      placeholder =\"SELECT CUSTOMER\"\r\n                      value={customer}\r\n                      onChange={this.onCustomer}\r\n                      options={activecustomers}\r\n                      filter={true} \r\n                      filterBy=\"id,name\" \r\n                      showClear={true}\r\n                      optionLabel=\"name\" \r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown \r\n                      placeholder =\"SELECT CASHIER\"\r\n                      value={cashier}\r\n                      onChange={this.onCashier}\r\n                      options={employees}\r\n                      filter={true} \r\n                      filterBy=\"id,name\" \r\n                      showClear={true}\r\n                      optionLabel=\"email\" \r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown \r\n                      placeholder =\"SELECT SHIP FROM\"\r\n                      value={ship_from}\r\n                      onChange={this.onShipFrom}\r\n                      options={warehouses}\r\n                      filter={true} \r\n                      filterBy=\"id,name\" \r\n                      showClear={true}\r\n                      optionLabel=\"name\" \r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown \r\n                      placeholder =\"SELECT STATUS\"\r\n                      value={status}\r\n                      onChange={this.onStatus}\r\n                      options={invoicesaleschoices}\r\n                      filter={true} \r\n                      filterBy=\"id,name\" \r\n                      showClear={true}\r\n                      optionLabel=\"value\" \r\n                      optionValue=\"key\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown \r\n                      placeholder =\"SELECT SALE TYPE\"\r\n                      value={sale_type}\r\n                      onChange={this.onSale}\r\n                      options={invoicesalestypeschoices}\r\n                      filter={true} \r\n                      showClear={true}\r\n                      optionLabel=\"value\" \r\n                      optionValue=\"key\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                  </div>\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                          \r\n                          <th>DISCOUNT</th>\r\n                          <th>QUANTITY</th>\r\n                          <th>PRODUCT</th>\r\n                          <th>TAX</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <Lines add={this.addNewRow} delete={this.clickOnDelete.bind(this)} lines={lines} />\r\n                      </tbody>\r\n                      <tfoot>\r\n                        <tr><td colSpan=\"4\">\r\n                            <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                        </td></tr>\r\n                      </tfoot>\r\n                  </table>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    activecustomers: state.activecustomers.activecustomers,\r\n    warehouses: state.warehouses.warehouses,\r\n    invoicesaleschoices: state.invoicesaleschoices.invoicesaleschoices,\r\n    employees: state.employees.employees,\r\n    invoicesalestypeschoices: state.invoicesalestypeschoices.invoicesalestypeschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n      mapStateToProps, \r\n      { getActiveCustomers, getWarehouses, getInvoiceSalesTypesChoices, getInvoiceSalesChoices, getEmployees, addInvoice})\r\n      (SalesForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getUnverifiedProductionProcesses} from '..//../actions/unverifiedproductionprocesses';\r\nimport \"./form.css\";\r\n\r\n\r\nclass UnverifiedProductionProcesses extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            unverifiedproductionprocesses : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        unverifiedproductionprocesses : PropTypes.array.isRequired,\r\n        getUnverifiedProductionProcesses: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getUnverifiedProductionProcesses();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Unverified Production Processes</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.unverifiedproductionprocesses}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Unverified Production Processes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"name\"\r\n                        header=\"Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"rate\"\r\n                        header=\"Rate\"\r\n                        sortable filter filterPlaceholder=\"Search by Rate\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"type\"\r\n                        header=\"Type\"\r\n                        sortable filter filterPlaceholder=\"Search by Type\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    unverifiedproductionprocesses: state.unverifiedproductionprocesses.unverifiedproductionprocesses\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUnverifiedProductionProcesses} ) (UnverifiedProductionProcesses);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_UNVERIFIED_PRODUCTION_PROCESSES,\r\n        DELETE_UNVERIFIED_PRODUCTION_PROCESS,\r\n        GET_UNVERIFIED_PRODUCTION_PROCESS\r\n    } from '../types/unverifiedproductionprocessTypes';\r\nimport { unverifiedproductionprocessesURL } from '../constants';\r\nimport { ADD_PROCESS } from './types';\r\n\r\n// Get\r\nexport const getUnverifiedProductionProcesses = () => dispatch => {\r\n    axios.get(unverifiedproductionprocessesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNVERIFIED_PRODUCTION_PROCESSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const addProcess = (process) => dispatch => {\r\n    axios.post(unverifiedproductionprocessesURL, process)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n//Delete\r\nexport const deleteUnverifiedProductionProcess = (id) => dispatch => {\r\n    axios.delete(unverifiedproductionprocessesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_UNVERIFIED_PRODUCTION_PROCESS,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getUnverifiedProductionProcess = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/unverified-production-processes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_UNVERIFIED_PRODUCTION_PROCESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getVerifiedProductionProcesses} from '..//../actions/verifiedproductionprocesses';\r\nimport \"./form.css\";\r\n\r\n\r\nclass VerifiedProductionProcesses extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            verifiedproductionprocesses : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedAccounts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        verifiedproductionprocesses : PropTypes.array.isRequired,\r\n        getVerifiedProductionProcesses: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getVerifiedProductionProcesses();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Verified Production Processes</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.verifiedproductionprocesses}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedAccounts} onSelectionChange={e => this.setState({selectedAccounts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Verified Production Processes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"name\"\r\n                        header=\"Name\"\r\n                        sortable filter filterPlaceholder=\"Search by Name\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"rate\"\r\n                        header=\"Rate\"\r\n                        sortable filter filterPlaceholder=\"Search by Rate\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"type\"\r\n                        header=\"Type\"\r\n                        sortable filter filterPlaceholder=\"Search by Type\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    verifiedproductionprocesses: state.verifiedproductionprocesses.verifiedproductionprocesses\r\n})\r\n\r\nexport default connect(mapStateToProps, {getVerifiedProductionProcesses} ) (VerifiedProductionProcesses);\r\n","import axios from 'axios';\r\nimport {\r\n        GET_VERIFIED_PRODUCTION_PROCESSES,\r\n        DELETE_VERIFIED_PRODUCTION_PROCESS,\r\n        GET_VERIFIED_PRODUCTION_PROCESS\r\n    } from '../types/verifiedproductionprocessTypes';\r\nimport { verifiedproductionprocessesURL } from '../constants';\r\n\r\n// Get\r\nexport const getVerifiedProductionProcesses = () => dispatch => {\r\n    axios.get(verifiedproductionprocessesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_VERIFIED_PRODUCTION_PROCESSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteVerifiedProductionProcess = (id) => dispatch => {\r\n    axios.delete(verifiedproductionprocessesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_VERIFIED_PRODUCTION_PROCESS,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getVerifiedProductionProcess = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/verified-production-processes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_VERIFIED_PRODUCTION_PROCESS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n        ADD_MANUFACTURED_STOCK_ITEM,\r\n        GET_MANUFACTURED_STOCK_ITEMS,\r\n        DELETE_MANUFACTURED_STOCK_ITEM,\r\n        GET_MANUFACTURED_STOCK_ITEM,\r\n        EDIT_MANUFACTURED_STOCK_ITEM\r\n    } from '../types/manufacturedstockitemTypes';\r\nimport { manufacturedstockitemsURL } from '../constants';\r\n\r\n// Get\r\nexport const getManufacturedStockItems = () => dispatch => {\r\n    axios.get(manufacturedstockitemsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURED_STOCK_ITEMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\nexport const deleteManufacturedStockItem = (id) => dispatch => {\r\n    axios.delete(manufacturedstockitemsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_MANUFACTURED_STOCK_ITEM,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addManufacturedStockItem = (manufacturedstockitem) => dispatch => {\r\n    axios.post(manufacturedstockitemsURL, manufacturedstockitem)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_MANUFACTURED_STOCK_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//get\r\nexport const getManufacturedStockItem = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/manufactured-stock-items/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURED_STOCK_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editManufacturedStockItem = (id, manufacturedstockitem) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/manufactured-stock-items/${id}/`, manufacturedstockitem)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_MANUFACTURED_STOCK_ITEM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getManufacturedStockItems, addManufacturedStockItem, editManufacturedStockItem, deleteManufacturedStockItem } from '..//../actions/manufacturedstockitems';\r\nimport {getProcessProducts} from \"..//../actions/processproducts\";\r\nimport {getWarehouses} from \"..//../actions/warehouses\";\r\nimport {getStoragemedias} from \"..//../actions/storagemedias\";\r\nimport \"./form.css\";\r\n\r\nclass ManufacturedStockItems extends Component {\r\n\r\n    emptyManufacturedStockItem = {\r\n        item: null,\r\n        quantity: '',\r\n        warehouse: null,\r\n        location: null\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            manufacturedstockitems : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedManufacturedStockItems: null,\r\n            manufacturedstockitemDialog: false,\r\n            deleteManufacturedStockItemDialog: false,\r\n            deleteManufacturedStockItemsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null\r\n            },\r\n            newData: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveManufacturedStockItem = this.saveManufacturedStockItem.bind(this);\r\n        this.editManufacturedStockItem = this.editManufacturedStockItem.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteManufacturedStockItem = this.confirmDeleteManufacturedStockItem.bind(this);\r\n        this.deleteManufacturedStockItem = this.deleteManufacturedStockItem.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedManufacturedStockItems = this.deleteSelectedManufacturedStockItems.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteManufacturedStockItemDialog = this.hideDeleteManufacturedStockItemDialog.bind(this);\r\n        this.hideDeleteManufacturedStockItemsDialog = this.hideDeleteManufacturedStockItemsDialog.bind(this);\r\n        this.onItem = this.onItem.bind(this);\r\n        this.onWarehouse = this.onWarehouse.bind(this);\r\n        this.onLocation = this.onLocation.bind(this);\r\n    }\r\n\r\n    onItem(e){\r\n      this.setState({item: e.value})\r\n    }\r\n\r\n    onWarehouse(e){\r\n      this.setState({warehouse: e.value})\r\n    }\r\n\r\n    onLocation(e){\r\n      this.setState({location: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        manufacturedstockitems : PropTypes.array.isRequired,\r\n        getManufacturedStockItems: PropTypes.func.isRequired,\r\n        getProcessProducts: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getStoragemedias: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getManufacturedStockItems();\r\n        this.props.getProcessProducts()\r\n        this.props.getWarehouses()\r\n        this.props.getStoragemedias()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null\r\n            },\r\n            submitted: false,\r\n            manufacturedstockitemDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            manufacturedstockitemDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteManufacturedStockItemDialog() {\r\n        this.setState({ deleteManufacturedStockItemDialog: false });\r\n    }\r\n\r\n    hideDeleteManufacturedStockItemsDialog() {\r\n        this.setState({ deleteManufacturedStockItemsDialog: false });\r\n    }\r\n\r\n    saveManufacturedStockItem = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        } = this.state;\r\n        const manufacturedstockitem = {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        };\r\n        this.props.addManufacturedStockItem(manufacturedstockitem);\r\n        this.setState({\r\n            item: null,\r\n            quantity: '',\r\n            warehouse: null,\r\n            location: null,\r\n            manufacturedstockitemDialog: false\r\n        });\r\n        this.props.history.push('/manufacturedstockitems');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                item: null,\r\n                quantity: '',\r\n                warehouse: null,\r\n                location: null\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editManufacturedStockItem(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        } = this.state.selectRow;\r\n        const manufacturedstockitem = {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editManufacturedStockItem(this.state.selectRow.id, manufacturedstockitem);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteManufacturedStockItem(manufacturedstockitem) {\r\n        this.setState({\r\n            manufacturedstockitem,\r\n            deleteManufacturedStockItemDialog: true\r\n        });\r\n    }\r\n\r\n    deleteManufacturedStockItem() {\r\n        this.props.deleteManufacturedStockItem();\r\n        this.setState({\r\n            deleteManufacturedStockItemDialog: false,\r\n            manufacturedstockitem: this.emptyManufacturedStockItem\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteManufacturedStockItemsDialog: true });\r\n    }\r\n\r\n    deleteSelectedManufacturedStockItems() {\r\n        this.props.deleteManufacturedStockItem();\r\n        this.setState({\r\n            deleteManufacturedStockItemsDialog: false,\r\n            selectedManufacturedStockItems: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Manufactured Stock Item</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW MANUFACTURED STOCK ITEM\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteManufacturedStockItem(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const manufacturedstockitemDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveManufacturedStockItem} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editManufacturedStockItem}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        } = this.state;\r\n\r\n        const { processproducts } = this.props;\r\n        const { warehouses } = this.props;\r\n        const { storagemedias } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.manufacturedstockitems}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedManufacturedStockItems} onSelectionChange={e => this.setState({selectedManufacturedStockItems: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Manufactured Stock Items found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"item\"\r\n                            header=\"Item\"\r\n                            sortable filter filterPlaceholder=\"Search by Item\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"quantity\"\r\n                            header=\"Quantity\"\r\n                            sortable filter filterPlaceholder=\"Search by Quantity\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"warehouse\"\r\n                            header=\"Warehouse\"\r\n                            sortable filter filterPlaceholder=\"Search by Warehouse\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"location\"\r\n                            header=\"Location\"\r\n                            sortable filter filterPlaceholder=\"Search by Location\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.manufacturedstockitemDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Manufactured Stock Item\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={manufacturedstockitemDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>QUANTITY</label>\r\n                                <InputNumber\r\n                                    name=\"quantity\"\r\n                                    onChange={this.onChange}\r\n                                    value={quantity}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={item}\r\n                                        onChange={this.onItem}\r\n                                        options={processproducts}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT ITEM</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={warehouse}\r\n                                        onChange={this.onWarehouse}\r\n                                        options={warehouses}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT WAREHOUSE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={location}\r\n                                        onChange={this.onLocation}\r\n                                        options={storagemedias}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT LOCATION</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE MANUFACTURED STOCK ITEM\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inQuantity\">Quantity </label>\r\n                            <InputNumber\r\n                                id=\"inQuantity\"\r\n                                value={this.state.selectRow.quantity}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        quantity: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWarehouse\"\r\n                                value={this.state.selectRow.warehouse}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            warehouse: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={warehouses}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inItem\"\r\n                                value={this.state.selectRow.item}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            item: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={processproducts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inLocation\"\r\n                                value={this.state.selectRow.location}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            location: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={storagemedias}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    manufacturedstockitems: state.manufacturedstockitems.manufacturedstockitems,\r\n    processproducts: state.processproducts.processproducts,\r\n    warehouses: state.warehouses.warehouses,\r\n    storagemedias: state.storagemedias.storagemedias\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getManufacturedStockItems,\r\n        addManufacturedStockItem,\r\n        deleteManufacturedStockItem,\r\n        editManufacturedStockItem,\r\n        getProcessProducts,\r\n        getWarehouses,\r\n        getStoragemedias\r\n    }) (ManufacturedStockItems);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addManufacturedStockItem } from '..//../actions/manufacturedstockitems';\r\nimport {getProcessProducts} from \"..//../actions/processproducts\";\r\nimport {getWarehouses} from \"..//../actions/warehouses\";\r\nimport {getStoragemedias} from \"..//../actions/storagemedias\";\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\n\r\nexport class ManufacturedStockItemForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            item: null,\r\n            quantity: '',\r\n            warehouse: null,\r\n            location: null\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onItem = this.onItem.bind(this);\r\n        this.onWarehouse = this.onWarehouse.bind(this);\r\n        this.onLocation = this.onLocation.bind(this);\r\n    }\r\n\r\n    onItem(e){\r\n      this.setState({item: e.value})\r\n    }\r\n\r\n    onWarehouse(e){\r\n      this.setState({warehouse: e.value})\r\n    }\r\n\r\n    onLocation(e){\r\n      this.setState({location: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        } = this.state;\r\n        const manufacturedstockitem = {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        };\r\n        this.props.addManufacturedStockItem(manufacturedstockitem);\r\n        this.setState({\r\n            item: '',\r\n            quantity: '',\r\n            warehouse: '',\r\n            location: ''\r\n        });\r\n        this.props.history.push('/manufacturedstockitems');\r\n    };\r\n\r\n    static propTypes = {\r\n        addManufacturedStockItem: PropTypes.func.isRequired,\r\n        getProcessProducts: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getStoragemedias: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessProducts()\r\n        this.props.getWarehouses()\r\n        this.props.getStoragemedias()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            item,\r\n            quantity,\r\n            warehouse,\r\n            location\r\n        } = this.state;\r\n\r\n        const { processproducts } = this.props;\r\n        const { warehouses } = this.props;\r\n        const { storagemedias } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n                <h2>Manage Manufactured Stock Item</h2>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-12\">\r\n                        <label>QUANTITY</label>\r\n                        <InputNumber\r\n                            name=\"quantity\"\r\n                            onChange={this.onChange}\r\n                            value={quantity}\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={item}\r\n                                onChange={this.onItem}\r\n                                options={processproducts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT ITEM</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={warehouse}\r\n                                onChange={this.onWarehouse}\r\n                                options={warehouses}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT WAREHOUSE</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={location}\r\n                                onChange={this.onLocation}\r\n                                options={storagemedias}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT LOCATION</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    processproducts: state.processproducts.processproducts,\r\n    warehouses: state.warehouses.warehouses,\r\n    storagemedias: state.storagemedias.storagemedias\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProcessProducts, getWarehouses, getStoragemedias, addManufacturedStockItem })(ManufacturedStockItemForm);\r\n","import axios from 'axios';\r\nimport { GET_PROCESS_MACHINES, GET_PROCESS_MACHINE, DELETE_PROCESS_MACHINE, ADD_PROCESS_MACHINE } from '../types/processmachineTypes';\r\nimport { processmachinesURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getProcessMachines = () => dispatch => {\r\n    axios.get(processmachinesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_MACHINES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessMachine = (id) => dispatch => {\r\n    axios.delete(processmachinesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESS_MACHINE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addProcessMachine = (processmachine) => dispatch => {\r\n    axios.post(processmachinesURL, processmachine)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESS_MACHINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessMachine = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/process-machines/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_MACHINE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getProcessMachines} from '..//../actions/processmachines';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./form.css\";\r\n\r\n\r\nclass ProcessMachines extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processmachines : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessMachines: null,\r\n\r\n        };\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        processmachines : PropTypes.array.isRequired,\r\n        getProcessMachines: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessMachines();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Process Machine</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n        const dateFilter = this.renderDateFilter();\r\n\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.processmachines}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedProcessMachines} onSelectionChange={e => this.setState({selectedProcessMachines: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Process Machines found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"equipment\" header=\"Equipment\" sortable filter filterPlaceholder=\"Search by Equipment\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"date_commissioned\" header=\"Date Commissioned\" sortable filter filterMatchMode=\"custom\" filterFunction={this.filterDate} filterElement={dateFilter} style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processmachines: state.processmachines.processmachines\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProcessMachines} ) (ProcessMachines);\r\n","import axios from 'axios';\r\nimport { GET_PROCESS_MACHINE_GROUPS, GET_PROCESS_MACHINE_GROUP, DELETE_PROCESS_MACHINE_GROUP, ADD_PROCESS_MACHINE_GROUP } from '../types/processmachinegroupTypes';\r\nimport { processmachinegroupsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getProcessMachineGroups = () => dispatch => {\r\n    axios.get(processmachinegroupsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_MACHINE_GROUPS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessMachineGroup = (id) => dispatch => {\r\n    axios.delete(processmachinegroupsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESS_MACHINE_GROUP,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addProcessMachineGroup = (processmachinegroup) => dispatch => {\r\n    axios.post(processmachinegroupsURL, processmachinegroup)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESS_MACHINE_GROUP,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessMachineGroup = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/process-machine-group/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_MACHINE_GROUP,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getProcessMachineGroups} from '..//../actions/processmachinegroups';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./form.css\";\r\n\r\n\r\nclass ProcessMachineGroups extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processmachinegroups : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessGroups: null,\r\n\r\n        };\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        processmachinegroups : PropTypes.array.isRequired,\r\n        getProcessMachineGroups: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessMachineGroups();\r\n        console.log(this.props.processmachinegroups)\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Process Machine Groups</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-excel\" iconPos=\"right\" label=\"CSV\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.processmachinegroups}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedProcessgroups} onSelectionChange={e => this.setState({selectedProcessGroups: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No ProcessMachineGroups found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"reference_number\" header=\"Reference Number\" sortable filter filterPlaceholder=\"Search by Reference Number\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processmachinegroups: state.processmachinegroups.processmachinegroups\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProcessMachineGroups} ) (ProcessMachineGroups);\r\n","import React, { Component } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getEquipments } from '..//../actions/equipments';\r\n\r\n\r\nclass Machines extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         debit_account: null,\r\n\r\n    //     }\r\n                 \r\n    //     this.onAccount = this.onAccount.bind(this);\r\n\r\n    // }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.getEquipments();\r\n    }\r\n    \r\n    render(){\r\n        const { equipments } = this.props;\r\n\r\n        let EquipmentOptions = equipments.length > 0\r\n            && equipments.map((item, i) => {\r\n            return (\r\n              <option key={i} value={item.id}>{item.name}</option>\r\n            )\r\n          }, this);\r\n\r\n        return (\r\n           this.props.machines.map((val, idx) => {\r\n            let equipment = `equipment-${idx}`, date_commissioned = `date_commissioned-${idx}` \r\n            return (\r\n                <tr key={val.index}>\r\n                    <td>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"date_commissioned\"\r\n                          data-id={idx}\r\n                          format=\"yy-mm-dd\"\r\n                          id={date_commissioned}\r\n                          className=\"form-control\"\r\n                        />\r\n                    </td>\r\n\r\n                    <td>\r\n                        <select\r\n                          name=\"equipment\"\r\n                          id={equipment}\r\n                          data-id={idx}\r\n                          className=\"form-control\"\r\n                        >\r\n                           {EquipmentOptions}\r\n                        </select>\r\n                    </td>   \r\n\r\n                    <td>\r\n                        {\r\n                        idx===0?<Button onClick={()=>this.props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n                        : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => this.props.delete(val))} />\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    equipments: state.equipments.equipments\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEquipments} ) (Machines);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProcessMachineGroup } from '../../actions/processmachinegroups';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport Machines from './Machines';\r\n\r\n\r\nexport class ProcessMachineGroupForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n            machines: [{ index: Math.random(), equipment: '', date_commissioned: '' }],\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"equipment\", \"date_commissioned\"].includes(e.target.name)) {\r\n            let machines = [...this.state.machines]\r\n            machines[e.target.dataset.id][e.target.name] = e.target.value;\r\n\r\n        } else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            machines: [...prevState.machines, { index: Math.random(), equipment: '', date_commissioned: ''  }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            machines: this.state.machines.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            machines: this.state.machines.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, description, machines } = this.state;\r\n        const processmachinegroup = { name, description, machines };\r\n        this.props.addProcessMachineGroup(processmachinegroup);\r\n        this.setState({\r\n            machines: [],\r\n            name: '',\r\n            description: '',\r\n        });\r\n        this.props.history.push('/processmachinegroups');\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcessMachineGroup: PropTypes.func.isRequired,\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, description, machines} = this.state;\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n                <h2>Manage Process Machine Group</h2>\r\n                <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        \r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"description\"\r\n                                    value={description}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Description</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputText\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">Name</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                        </div>\r\n                        <table className=\"table\">\r\n                          <thead>\r\n                              <tr>\r\n                                <th>DATE COMMISIONED</th>\r\n                                <th>EQUIPMENT</th>\r\n\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              <Machines add={this.addNewRow} delete={this.clickOnDelete.bind(this)} machines={machines} />\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr><td colSpan=\"4\">\r\n                                    <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                                </td></tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { addProcessMachineGroup })(ProcessMachineGroupForm);\r\n","import axios from 'axios';\r\nimport { ADD_SHIFT, GET_SHIFTS, GET_SHIFT, EDIT_SHIFT, DELETE_SHIFT } from '../types/shiftTypes';\r\nimport { shiftsURL } from '../constants';\r\n\r\n// Get\r\nexport const getShifts=  () => dispatch => {\r\n    axios.get(shiftsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_SHIFTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteShift = (id) => dispatch => {\r\n    axios.delete(shiftsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_SHIFT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addShift = shift => dispatch => {\r\n    axios.post(shiftsURL, shift)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SHIFT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getShift = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/shifts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SHIFT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editShift = (id, shift) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/shifts/${id}/`, shift)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_SHIFT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_MANUFACTURING_TEAM, EDIT_MANUFACTURING_TEAM, GET_MANUFACTURING_TEAMS, GET_MANUFACTURING_TEAM, DELETE_MANUFACTURING_TEAM } from '../types/manufacturingteamTypes';\r\nimport { manufacturingteamsURL } from '../constants';\r\n\r\n// Get\r\nexport const getManufacturingTeams=  () => dispatch => {\r\n    axios.get(manufacturingteamsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_MANUFACTURING_TEAMS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteManufacturingTeam = (id) => dispatch => {\r\n    axios.delete(manufacturingteamsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_MANUFACTURING_TEAM,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addManufacturingTeam = manufacturingteam => dispatch => {\r\n    axios.post(manufacturingteamsURL, manufacturingteam)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_MANUFACTURING_TEAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getManufacturingTeam = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/manufacturing-teams/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURING_TEAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editManufacturingTeam = (id, manufacturingteam) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/manufacturing-teams/${id}/`, manufacturingteam)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_MANUFACTURING_TEAM,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getShifts, addShift, editShift, deleteShift } from '..//../actions/shifts';\r\nimport {getEmployees} from \"..//../actions/employees\";\r\nimport {getManufacturingTeams} from \"..//../actions/manufacturingteams\";\r\nimport {getProcessMachines} from \"..//../actions/processmachines\";\r\nimport \"./form.css\";\r\n\r\nclass Shifts extends Component {\r\n\r\n    emptyShift = {\r\n        name: '',\r\n        team: null,\r\n        supervisor: null,\r\n        employee: null,\r\n        machine: null\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            shifts : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedShifts: null,\r\n            shiftDialog: false,\r\n            deleteShiftDialog: false,\r\n            deleteShiftsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                team: null,\r\n                supervisor: null,\r\n                employee: null,\r\n                machine: null\r\n            },\r\n            newData: {\r\n                name: '',\r\n                team: null,\r\n                supervisor: null,\r\n                employee: null,\r\n                machine: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveShift = this.saveShift.bind(this);\r\n        this.editShift = this.editShift.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteShifts = this.confirmDeleteShifts.bind(this);\r\n        this.deleteShift = this.deleteShift.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedShifts = this.deleteSelectedShifts.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteShiftDialog = this.hideDeleteShiftDialog.bind(this);\r\n        this.hideDeleteShiftsDialog = this.hideDeleteShiftsDialog.bind(this);\r\n        this.onTeam = this.onTeam.bind(this);\r\n        this.onSupervisor = this.onSupervisor.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n        this.onMachine = this.onMachine.bind(this);\r\n    }\r\n\r\n    onTeam(e){\r\n        this.setState({team: e.value})\r\n    }\r\n\r\n    onSupervisor(e){\r\n        this.setState({supervisor: e.value})\r\n    }\r\n\r\n    onEmployee(e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    onMachine(e){\r\n        this.setState({machine: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        shifts : PropTypes.array.isRequired,\r\n        getShifts: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getManufacturingTeams: PropTypes.func.isRequired,\r\n        getProcessMachines: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getShifts();\r\n        this.props.getEmployees()\r\n        this.props.getManufacturingTeams()\r\n        this.props.getProcessMachines()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                team: null,\r\n                supervisor: null,\r\n                employee: null,\r\n                machine: null\r\n            },\r\n            submitted: false,\r\n            shiftDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            shiftDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteShiftDialog() {\r\n        this.setState({ deleteShiftDialog: false });\r\n    }\r\n\r\n    hideDeleteShiftsDialog() {\r\n        this.setState({ deleteShiftsDialog: false });\r\n    }\r\n\r\n    saveShift = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            team,\r\n            supervisor,\r\n            employee,\r\n            machine\r\n        } = this.state;\r\n        const shift = {\r\n            name,\r\n            team,\r\n            supervisor,\r\n            employee,\r\n            machine\r\n        };\r\n        this.props.addShift(shift);\r\n        this.setState({\r\n            name: '',\r\n            team: null,\r\n            supervisor: null,\r\n            employee: null,\r\n            machine: null,\r\n            shiftDialog: false\r\n        });\r\n        this.props.history.push('/shifts');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                team: null,\r\n                supervisor: null,\r\n                employee: null,\r\n                machine: null\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editShift(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            team,\r\n            supervisor,\r\n            employee,\r\n            machine\r\n        } = this.state.selectRow;\r\n        const shift = {\r\n            name,\r\n            team,\r\n            supervisor,\r\n            employee,\r\n            machine\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editShift(this.state.selectRow.id, shift);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteShifts(shift) {\r\n        this.setState({\r\n            shift,\r\n            deleteShiftDialog: true\r\n        });\r\n    }\r\n\r\n    deleteShift() {\r\n        this.props.deleteShift();\r\n        this.setState({\r\n            deleteShiftDialog: false,\r\n            shift: this.emptyShift\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteShiftsDialog: true });\r\n    }\r\n\r\n    deleteSelectedShifts() {\r\n        this.props.deleteShift();\r\n        this.setState({\r\n            deleteShiftsDialog: false,\r\n            selectedShifts: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Shift</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW SHIFT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteShifts(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const shiftDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveShift} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editShift}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          name,\r\n          team,\r\n          supervisor,\r\n          employee,\r\n          machine\r\n        } = this.state;\r\n\r\n        const { employees } = this.props;\r\n        const { manufacturingteams } = this.props;\r\n        const { processmachines } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.shifts}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedShifts} onSelectionChange={e => this.setState({selectedShifts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Shifts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"team\"\r\n                            header=\"Team\"\r\n                            sortable filter filterPlaceholder=\"Search by Team\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"supervisor\"\r\n                            header=\"Supervisor\"\r\n                            sortable filter filterPlaceholder=\"Search by Supervisor\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"machine\"\r\n                            header=\"Machine\"\r\n                            sortable filter filterPlaceholder=\"Search by Machine\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.shiftDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Shift\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={shiftDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={team}\r\n                                        onChange={this.onTeam}\r\n                                        options={manufacturingteams}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"name\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT TEAM</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={supervisor}\r\n                                        onChange={this.onSupervisor}\r\n                                        options={employees}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"employee_number\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT SUPERVISOR</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={employee}\r\n                                        onChange={this.onEmployee}\r\n                                        options={employees}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"employee_number\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT EMPLOYEE</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={machine}\r\n                                        onChange={this.onMachine}\r\n                                        options={processmachines}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"equipment\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT MACHINE</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE SHIFT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    shifts: state.shifts.shifts,\r\n    employees: state.employees.employees,\r\n    processmachines: state.processmachines.processmachines,\r\n    manufacturingteams: state.manufacturingteams.manufacturingteams})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getShifts,\r\n        addShift,\r\n        deleteShift,\r\n        editShift,\r\n        getEmployees,\r\n        getProcessMachines,\r\n        getManufacturingTeams,\r\n    }) (Shifts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addShift } from '..//../actions/shifts';\r\nimport {getEmployees} from \"..//../actions/employees\";\r\nimport {getManufacturingTeams} from \"..//../actions/manufacturingteams\";\r\nimport {getProcessMachines} from \"..//../actions/processmachines\";\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\n\r\nexport class ShiftForm extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n        team: null,\r\n        supervisor: null,\r\n        employee: null,\r\n        machine: null\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onTeam = this.onTeam.bind(this);\r\n      this.onSupervisor = this.onSupervisor.bind(this);\r\n      this.onEmployee = this.onEmployee.bind(this);\r\n      this.onMachine = this.onMachine.bind(this);\r\n    }\r\n\r\n    onTeam(e){\r\n      this.setState({team: e.value})\r\n    }\r\n\r\n    onSupervisor(e){\r\n      this.setState({supervisor: e.value})\r\n    }\r\n\r\n    onEmployee(e){\r\n      this.setState({employee: e.value})\r\n    }\r\n\r\n    onMachine(e){\r\n      this.setState({machine: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        name,\r\n        team,\r\n        supervisor,\r\n        employee,\r\n        machine\r\n      } = this.state;\r\n      const shift = {\r\n        name,\r\n        team,\r\n        supervisor,\r\n        employee,\r\n        machine\r\n      };\r\n      this.props.addShift(shift);\r\n      this.setState({\r\n        name: '',\r\n        team: '',\r\n        supervisor: '',\r\n        employee: '',\r\n        machine: ''\r\n      });\r\n      this.props.history.push('/shifts');\r\n    };\r\n\r\n    static propTypes = {\r\n        addShift: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n        getManufacturingTeams: PropTypes.func.isRequired,\r\n        getProcessMachines: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.getEmployees()\r\n      this.props.getManufacturingTeams()\r\n      this.props.getProcessMachines()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n          name,\r\n          team,\r\n          supervisor,\r\n          employee,\r\n          machine\r\n        } = this.state;\r\n\r\n        const { employees } = this.props;\r\n        const { manufacturingteams } = this.props;\r\n        const { processmachines } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Shift</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>Name</label>\r\n                    <InputText\r\n                      name=\"name\"\r\n                      onChange={this.onChange}\r\n                      value={name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT TEAM\"\r\n                      value={team}\r\n                      onChange={this.onTeam}\r\n                      options={manufacturingteams}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"name\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT SUPERVISOR\"\r\n                      value={supervisor}\r\n                      onChange={this.onSupervisor}\r\n                      options={employees}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"employee_number\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT EMPLOYEE\"\r\n                      value={employee}\r\n                      onChange={this.onEmployee}\r\n                      options={employees}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"employee_number\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT MACHINE\"\r\n                      value={machine}\r\n                      onChange={this.onMachine}\r\n                      options={processmachines}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"name\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                  </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees,\r\n    processmachines: state.processmachines.processmachines,\r\n    manufacturingteams: state.manufacturingteams.manufacturingteams\r\n})\r\n\r\nexport default connect(mapStateToProps, { getEmployees, getProcessMachines, getManufacturingTeams, addShift })(ShiftForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addShiftSchedule } from '..//../actions/shiftschedules';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\n\r\nexport class ShiftScheduleForm extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        name\r\n      } = this.state;\r\n      const shiftschedule = {\r\n        name\r\n      };\r\n      this.props.addShiftSchedule(shiftschedule);\r\n      this.setState({\r\n        name: ''\r\n      });\r\n      this.props.history.push('/shiftschedules');\r\n    };\r\n\r\n    static propTypes = {\r\n        addShiftSchedule: PropTypes.func.isRequired    }\r\n\r\n    render() {\r\n        const {\r\n          name\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Add Shift Schedule</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>Name</label>\r\n                    <InputText\r\n                      name=\"name\"\r\n                      onChange={this.onChange}\r\n                      value={name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                  </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { addShiftSchedule })(ShiftScheduleForm);\r\n","import axios from 'axios';\r\nimport { ADD_SHIFT_SCHEDULE, GET_SHIFT_SCHEDULES, EDIT_SHIFT_SCHEDULE, GET_SHIFT_SCHEDULE, DELETE_SHIFT_SCHEDULE } from '../types/shiftscheduleTypes';\r\nimport { shiftschedulesURL } from '../constants';\r\n\r\n// Get\r\nexport const getShiftSchedules=  () => dispatch => {\r\n    axios.get(shiftschedulesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_SHIFT_SCHEDULES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteShiftSchedule = (id) => dispatch => {\r\n    axios.delete(shiftschedulesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_SHIFT_SCHEDULE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addShiftSchedule = shiftschedule => dispatch => {\r\n    axios.post(shiftschedulesURL, shiftschedule)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_SHIFT_SCHEDULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getShiftSchedule = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/shift-schedules/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SHIFT_SCHEDULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editShiftSchedule = (id, shiftschedule) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/shift-schedules/${id}/`, shiftschedule)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_SHIFT_SCHEDULE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { GET_PROCESS_RATES, GET_PROCESS_RATE, EDIT_PROCESS_RATE, DELETE_PROCESS_RATE, ADD_PROCESS_RATE } from '../types/processrateTypes';\r\nimport { processratesURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getProcessRates = () => dispatch => {\r\n    axios.get(processratesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_RATES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessRate = (id) => dispatch => {\r\n    axios.delete(processratesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESS_RATE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addProcessRate = (processrate) => dispatch => {\r\n    axios.post(processratesURL, processrate)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESS_RATE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessRate = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/process-rates/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESS_RATE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editProcessRate = (id, processrate) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/process-rates/${id}/`, processrate)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PROCESS_RATE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getProcessRates, addProcessRate, editProcessRate, deleteProcessRate } from '..//../actions/processrates';\r\nimport { getProcessRateUnitTimeChoices } from '..//../actions/choices';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport \"./form.css\";\r\n\r\n\r\nclass Taxes extends Component {\r\n\r\n    emptyProcessRate = {\r\n        unit_time: null,\r\n        quantity: '',\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processrates: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessRates: null,\r\n            processrateDialog: false,\r\n            deleteProcessRateDialog: false,\r\n            deleteProcessRatesDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                unit_time: null,\r\n                quantity: '',\r\n            },\r\n            newData: {\r\n                unit_time: null,\r\n                quantity: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveProcessRate = this.saveProcessRate.bind(this);\r\n        this.editProcessRate = this.editProcessRate.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteProcessRate = this.confirmDeleteProcessRate.bind(this);\r\n        this.deleteProcessRate = this.deleteProcessRate.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedProcessRates = this.deleteSelectedProcessRates.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteProcessRateDialog = this.hideDeleteProcessRateDialog.bind(this);\r\n        this.hideDeleteProcessRatesDialog = this.hideDeleteProcessRatesDialog.bind(this);\r\n        this.onUnitTime = this.onUnitTime.bind(this);\r\n    }\r\n\r\n    onUnitTime (e){\r\n        this.setState({unit_time: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        processrates : PropTypes.array.isRequired,\r\n        getProcessRates: PropTypes.func.isRequired,\r\n        addProcessRate: PropTypes.func.isRequired,\r\n        editProcessRate: PropTypes.func.isRequired,\r\n        deleteProcessRate: PropTypes.func.isRequired,\r\n        getProcessRateUnitTimeChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                unit_time: null,\r\n                quantity: '',\r\n            },\r\n            submitted: false,\r\n            processrateDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            processrateDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteProcessRateDialog() {\r\n        this.setState({ deleteProcessRateDialog: false });\r\n    }\r\n\r\n    hideDeleteProcessRatesDialog() {\r\n        this.setState({ deleteProcessRatesDialog: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessRates();\r\n        this.props.getProcessRateUnitTimeChoices()\r\n    }\r\n\r\n\r\n    saveProcessRate = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            unit_time,\r\n            quantity\r\n        } = this.state;\r\n        const processrate = {\r\n            unit_time,\r\n            quantity\r\n        };\r\n        this.props.addProcessRate(processrate);\r\n        this.setState({\r\n            unit_time: null,\r\n            quantity: '',\r\n            processrateDialog: false\r\n        });\r\n        this.props.history.push('/processrates');\r\n    };\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                unit_time: null,\r\n                quantity: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editProcessRate(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            unit_time,\r\n            quantity\r\n\r\n        } = this.state.selectRow;\r\n        const processrate = {\r\n            unit_time,\r\n            quantity\r\n\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editProcessRate(this.state.selectRow.id, processrate);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteProcessRate(processrate) {\r\n        this.setState({\r\n            processrate,\r\n            deleteProcessRateDialog: true\r\n        });\r\n    }\r\n\r\n    deleteProcessRate() {\r\n        this.props.deleteProcessRate();\r\n        this.setState({\r\n            deleteProcessRateDialog: false,\r\n            processrate: this.emptyProcessRate\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteProcessRatesDialog: true });\r\n    }\r\n\r\n    deleteSelectedProcessRates() {\r\n        this.props.deleteProcessRate();\r\n        this.setState({\r\n            deleteProcessRatesDialog: false,\r\n            selectedProcessRates: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Process Rate</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW PROCESS RATE\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteProcessRate(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const processrateDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveProcessRate} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editProcessRate}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            unit_time,\r\n            quantity\r\n        } = this.state;\r\n\r\n        const {processrateunittimechoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.processrates}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedProcessRates} onSelectionChange={e => this.setState({selectedProcessRates: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Taxes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"unit_time\" header=\"Unit Time\" sortable filter filterPlaceholder=\"Search by Time\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"quantity\" header=\"Quantity\" sortable filter filterPlaceholder=\"Search by Quantity\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n\r\n                    <Dialog\r\n                        visible={this.state.processrateDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Create Process Rate\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={processrateDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>QUANTITY</label>\r\n                                <InputNumber\r\n                                    name=\"quantity\"\r\n                                    onChange={this.onChange}\r\n                                    value={quantity}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={unit_time}\r\n                                        onChange={this.onUnitTime}\r\n                                        options={processrateunittimechoices}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"value\"\r\n                                        optionValue=\"key\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT UNIT TIME</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        style={{ width: '700px' }}\r\n                        header=\"UPDATE PROCESS RATE\"\r\n                        modal={true} onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inQuantity\">Quantity </label>\r\n                            <InputNumber\r\n                                id=\"inQuantity\"\r\n                                value={this.state.selectRow.quantity}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        quantity: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inUnitTime\"\r\n                                value={this.state.selectRow.unit_time}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            unit_time: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={processrateunittimechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteProcessRatesDialog} style={{ width: '450px' }} header=\"Confirm\" modal onHide={this.hideDeleteProcessRatesDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.processrate && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processrates: state.processrates.processrates,\r\n    processrateunittimechoices: state.processrateunittimechoices.processrateunittimechoices\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProcessRateUnitTimeChoices, getProcessRates, addProcessRate, editProcessRate, deleteProcessRate } ) (Taxes);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport { addProcessRate } from '..//../actions/processrates';\r\nimport { getProcessRateUnitTimeChoices, getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\n\r\nclass ProcessRateForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            unit: null,\r\n            unit_time: null,\r\n            quantity: '',\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onUnitTime = this.onUnitTime.bind(this);\r\n    }\r\n\r\n    onUnit (e){\r\n        this.setState({unit: e.value})\r\n    }\r\n\r\n    onUnitTime (e){\r\n        this.setState({unit_time: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            unit,\r\n            unit_time,\r\n            quantity\r\n        } = this.state;\r\n\r\n        const processrate = {\r\n            unit,\r\n            unit_time,\r\n            quantity\r\n        };\r\n        this.props.addProcessRate(processrate);\r\n        this.setState({\r\n            unit: '',\r\n            unit_time: '',\r\n            quantity: '',\r\n        });\r\n        this.props.history.push('/processrates');\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcessRate: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n        getProcessRateUnitTimeChoices: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUnitOfMeasureChoices()\r\n        this.props.getProcessRateUnitTimeChoices()\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            unit,\r\n            unit_time,\r\n            quantity\r\n        } = this.state;\r\n\r\n        const {unitofmeasurechoices} = this.props;\r\n        const {processrateunittimechoices} = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n                <h2>Manage PROCESS RATE</h2>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-12\">\r\n                        <label>QUANTITY</label>\r\n                        <InputNumber\r\n                            name=\"quantity\"\r\n                            onChange={this.onChange}\r\n                            value={quantity}\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={unit}\r\n                                onChange={this.onUnit}\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT UNIT</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={unit_time}\r\n                                onChange={this.onUnitTime}\r\n                                options={processrateunittimechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT UNIT TIME</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    processrateunittimechoices: state.processrateunittimechoices.processrateunittimechoices\r\n})\r\nexport default connect(\r\n    mapStateToProps,\r\n    {getUnitOfMeasureChoices, getProcessRateUnitTimeChoices, addProcessRate}\r\n    )(ProcessRateForm);\r\n","import React, { Component } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getWarehouses } from '..//../actions/warehouses';\r\nimport { getRawMaterials } from '..//../actions/rawmaterials';\r\n\r\n\r\nclass Ingridients extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         debit_account: null,\r\n\r\n    //     }\r\n                 \r\n    //     this.onAccount = this.onAccount.bind(this);\r\n\r\n    // }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.getWarehouses();\r\n        this.props.getRawMaterials();\r\n    }\r\n    \r\n    render(){\r\n        const { rawmaterials } = this.props;\r\n        const { warehouses } = this.props;\r\n\r\n        let ingridients = rawmaterials.length > 0\r\n            && rawmaterials.map((item, i) => {\r\n            return (\r\n              <option key={i} value={item.id}>{item.name}</option>\r\n            )\r\n          }, this);\r\n\r\n        let locations = warehouses.length > 0\r\n            && warehouses.map((item, i) => {\r\n            return (\r\n              <option key={i} value={item.id}>{item.name}</option>\r\n            )\r\n          }, this);\r\n\r\n        return (\r\n           this.props.ingridients.map((val, idx) => {\r\n            let ship_from = `ship_from-${idx}`, quantity = `quantity-${idx}`, raw_material = `raw_material-${idx}`\r\n            return (\r\n                <tr key={val.index}>\r\n                    <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"quantity\"\r\n                          data-id={idx}\r\n                          id={quantity}\r\n                          className=\"form-control\"\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <select\r\n                          name=\"ship_from\"\r\n                          id={ship_from}\r\n                          data-id={idx}\r\n                          className=\"form-control\"\r\n                        >\r\n                           {locations}\r\n                        </select>\r\n                    </td> \r\n                    <td>\r\n                        <select\r\n                          name=\"raw_material\"\r\n                          id={raw_material}\r\n                          data-id={idx}\r\n                          className=\"form-control\"\r\n                        >\r\n                           {ingridients}\r\n                        </select>\r\n                    </td>    \r\n\r\n                    <td>\r\n                        {\r\n                        idx===0?<Button onClick={()=>this.props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n                        : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => this.props.delete(val))} />\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    rawmaterials: state.rawmaterials.rawmaterials,\r\n    warehouses: state.warehouses.warehouses,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getRawMaterials, getWarehouses} ) (Ingridients);\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport { connect } from 'react-redux';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { getProcessRates } from '..//../actions/processrates';\r\nimport { addProcess } from '..//../actions/unverifiedproductionprocesses';\r\nimport { getManufacturingProcessChoices } from '..//../actions/choices';\r\nimport { getProcessMachineGroups } from '..//../actions/processmachinegroups';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport PropTypes from 'prop-types';\r\nimport Ingridients from './Ingridients';\r\n\r\n\r\n\r\nclass ProductionProcessForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            process_equipment: null,\r\n            rate: null,\r\n            description: '',\r\n            date: '',\r\n            type: null,\r\n            duration: '',\r\n            ingridients: [{ index: Math.random(), quantity: '', ship_from: '', raw_material: ''}],\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.onRate = this.onRate.bind(this);\r\n        this.onEquipment = this.onEquipment.bind(this);\r\n        this.onChoices = this.onChoices.bind(this);\r\n        \r\n    }\r\n\r\n    onRate (e){\r\n        this.setState({rate: e.value})\r\n    }\r\n\r\n    onEquipment (e){\r\n        this.setState({process_equipment: e.value})\r\n    }\r\n\r\n    onChoices (e){\r\n        this.setState({type: e.value})\r\n    }\r\n\r\n\r\n\r\n    handleChange = (e) => {\r\n        if ([\"quantity\", \"raw_material\", 'ship_from'].includes(e.target.name)) {\r\n            let ingridients = [...this.state.ingridients]\r\n            ingridients[e.target.dataset.id][e.target.name] = e.target.value;\r\n\r\n        } else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            ingridients: [...prevState.ingridients, { index: Math.random(), ship_from: \"\", raw_material: '', quantity: '' }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            ingridients: this.state.ingridients.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            ingridients: this.state.ingridients.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            process_equipment,\r\n            rate,\r\n            description,\r\n            date,\r\n            type,\r\n            duration,\r\n            ingridients,\r\n\r\n        } = this.state;\r\n\r\n        const process = {\r\n            name,\r\n            process_equipment,\r\n            rate,\r\n            description,\r\n            date,\r\n            type,\r\n            duration,\r\n            ingridients,\r\n        };\r\n\r\n        this.props.addProcess(process);\r\n        this.setState({\r\n            ingridients: [],\r\n            name: '',\r\n            process_equipment: null,\r\n            rate: null,\r\n            description: '',\r\n            date: '',\r\n            type: null,\r\n            duration: '',\r\n        });\r\n        // this.props.history.push('/bills')\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcess: PropTypes.func.isRequired,\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessRates();\r\n        this.props.getProcessMachineGroups();\r\n        this.props.getManufacturingProcessChoices();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            process_equipment,\r\n            rate,\r\n            description,\r\n            date,\r\n            type,\r\n            duration,\r\n            ingridients,\r\n        } = this.state;\r\n\r\n\r\n        const { processrates } = this.props;\r\n        const { processmachinegroups } = this.props;\r\n        const { manufacturingprocesschoices } = this.props;\r\n        \r\n\r\n        return (\r\n          <div className=\"card card-body mt-4 mb-4\">\r\n            <h2>Manage Bill</h2>\r\n            <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n              <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <span className=\"p-float-label\">\r\n                        <InputText\r\n                            name=\"name\"\r\n                            value={name}\r\n                        />\r\n                        <label htmlFor=\"inputtext\">NAME</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <span className=\"p-float-label\">\r\n                    <Calendar\r\n                        showIcon={true}\r\n                        className=\"form-control\"\r\n                        name=\"date\"\r\n                        onChange={this.onChange}\r\n                        value={date}\r\n                        dateFormat=\"yy-mm-dd\"\r\n                    />\r\n                    <label htmlFor=\"inputtext\">Date</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label>DURATION</label>\r\n                    <InputNumber\r\n                        name=\"duration\"\r\n                        onChange={this.onChange}\r\n                        value={duration}\r\n                        showButtons\r\n                        buttonLayout=\"horizontal\"\r\n                        decrementButtonClassName=\"p-button-danger\"\r\n                        incrementButtonClassName=\"p-button-success\"\r\n                        incrementButtonIcon=\"pi pi-plus\"\r\n                        decrementButtonIcon=\"pi pi-minus\"\r\n                        step={1}\r\n                    />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                    <span className=\"p-float-label\">\r\n                        <InputTextarea\r\n                            name=\"description\"\r\n                            value={description}\r\n                        />\r\n                        <label htmlFor=\"inputtext\">DESCRIPTION</label>\r\n                  </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <span className=\"p-float-label\">\r\n                    <Dropdown\r\n                        value={rate}\r\n                        onChange={this.onRate}\r\n                        options={processrates}\r\n                        filter={true}\r\n                        showClear={true}\r\n                        optionLabel=\"quantity\"\r\n                        optionValue=\"id\"\r\n                    />\r\n\r\n                    <label htmlFor=\"dropdown\">SELECT RATE</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <span className=\"p-float-label\">\r\n                    <Dropdown\r\n                        value={type}\r\n                        onChange={this.onChoices}\r\n                        options={manufacturingprocesschoices}\r\n                        filter={true}\r\n                        filterBy=\"key,value\"\r\n                        showClear={true}\r\n                        optionLabel=\"value\"\r\n                        optionValue=\"key\"\r\n                    />\r\n\r\n                    <label htmlFor=\"dropdown\">SELECT TYPE</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <span className=\"p-float-label\">\r\n                    <Dropdown\r\n                        value={process_equipment}\r\n                        onChange={this.onEquipment}\r\n                        options={processmachinegroups}\r\n                        filter={true}\r\n                        filterBy=\"id, name\"\r\n                        showClear={true}\r\n                        optionLabel=\"name\"\r\n                        optionValue=\"id\"\r\n                    />\r\n\r\n                    <label htmlFor=\"dropdown\">SELECT EQUIPMENT</label>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                </div>\r\n                <table className=\"table\">\r\n                  <thead>\r\n                      <tr>\r\n                        <th>QUANTIY</th>\r\n                        <th>SHIP FROM</th>\r\n                        <th>RAW MATERIAL</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <Ingridients add={this.addNewRow} delete={this.clickOnDelete.bind(this)} ingridients={ingridients} />\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr><td colSpan=\"4\">\r\n                            <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                        </td></tr>\r\n                    </tfoot>\r\n                </table>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    processmachinegroups: state.processmachinegroups.processmachinegroups,\r\n    processrates: state.processrates.processrates,\r\n    manufacturingprocesschoices: state.manufacturingprocesschoices.manufacturingprocesschoices,\r\n\r\n})\r\n\r\nexport default connect(\r\n            mapStateToProps, \r\n            {getProcessMachineGroups, getProcessRates, addProcess, getManufacturingProcessChoices })\r\n            (ProductionProcessForm);\r\n\r\n\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getProductionOrders} from '..//../actions/productionorders';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./form.css\";\r\n\r\n\r\nclass ProductionOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            productionorders: null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProductionorders: null,\r\n\r\n        };\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        productionorders : PropTypes.array.isRequired,\r\n        getProductionOrders: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProductionOrders();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Production Orders</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-excel\" iconPos=\"right\" label=\"CSV\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.productionorders}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedProductionorders} onSelectionChange={e => this.setState({selectedProductionorders: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Production Orders found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"due\" header=\"Due\" sortable filter filterPlaceholder=\"Search by Due\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"customer\" header=\"Customer\" sortable filter filterPlaceholder=\"Search by Customer\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" field=\"process\" header=\"Process\" sortable filter filterPlaceholder=\"Search by Process\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                    <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    productionorders: state.productionorders.productionorders\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProductionOrders} ) (ProductionOrders);\r\n","import axios from 'axios';\r\nimport { GET_PRODUCTION_ORDERS, GET_PRODUCTION_ORDER, DELETE_PRODUCTION_ORDER, ADD_PRODUCTION_ORDER } from '../types/productionorderTypes';\r\nimport { productionordersURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getProductionOrders = () => dispatch => {\r\n    axios.get(productionordersURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PRODUCTION_ORDERS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProductionOrder = (id) => dispatch => {\r\n    axios.delete(productionordersURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PRODUCTION_ORDER,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addProductionOrder = (productionorder) => dispatch => {\r\n    axios.post(productionordersURL, productionorder)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PRODUCTION_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProductionOrder = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/production-orders/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PRODUCTION_ORDER,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_MANUFACTURING_PERSONEL, GET_MANUFACTURING_PERSONELS, EDIT_MANUFACTURING_PERSONEL, GET_MANUFACTURING_PERSONEL, DELETE_MANUFACTURING_PERSONEL } from '../types/manufacturingpersonelTypes';\r\nimport { manufacturingpersonelsURL } from '../constants';\r\n\r\n// Get\r\nexport const getManufacturingPersonels=  () => dispatch => {\r\n    axios.get(manufacturingpersonelsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_MANUFACTURING_PERSONELS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteManufacturingPersonel = (id) => dispatch => {\r\n    axios.delete(manufacturingpersonelsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_MANUFACTURING_PERSONEL,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addManufacturingPersonel = manufacturingpersonel => dispatch => {\r\n    axios.post(manufacturingpersonelsURL, manufacturingpersonel)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_MANUFACTURING_PERSONEL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getManufacturingPersonel = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/manufacturing-personels/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_MANUFACTURING_PERSONEL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editManufacturingPersonel = (id, manufacturingpersonel) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/manufacturing-personels/${id}/`, manufacturingpersonel)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_MANUFACTURING_PERSONEL,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getManufacturingTeams, addManufacturingTeam, editManufacturingTeam, deleteManufacturingTeam } from '..//../actions/manufacturingteams';\r\nimport { getManufacturingPersonels } from '../../actions/manufacturingpersonels';\r\nimport \"./form.css\";\r\n\r\nclass ManufacturingTeams extends Component {\r\n\r\n    emptyManufacturingTeam = {\r\n        name: '',\r\n        description: '',\r\n        manager: null,\r\n        members: null,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            manufacturingteams : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedManufacturingTeams: null,\r\n            manufacturingteamDialog: false,\r\n            deleteManufacturingTeamDialog: false,\r\n            deleteManufacturingTeamsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                members: null,\r\n            },\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                members: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveManufacturingTeam = this.saveManufacturingTeam.bind(this);\r\n        this.editManufacturingTeam = this.editManufacturingTeam.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteManufacturingTeam = this.confirmDeleteManufacturingTeam.bind(this);\r\n        this.deleteManufacturingTeam = this.deleteManufacturingTeam.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedManufacturingTeams = this.deleteSelectedManufacturingTeams.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteManufacturingTeamDialog = this.hideDeleteManufacturingTeamDialog.bind(this);\r\n        this.hideDeleteManufacturingTeamsDialog = this.hideDeleteManufacturingTeamsDialog.bind(this);\r\n        this.onManager = this.onManager.bind(this);\r\n        this.onMembers = this.onMembers.bind(this);\r\n    }\r\n\r\n    onManager (e){\r\n        this.setState({manager: e.value})\r\n    }\r\n\r\n    onMembers (e){\r\n        this.setState({members: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        manufacturingteams : PropTypes.array.isRequired,\r\n        getManufacturingTeams: PropTypes.func.isRequired,\r\n        getManufacturingPersonels: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getManufacturingTeams();\r\n        this.props.getManufacturingPersonels()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                members: null,\r\n            },\r\n            submitted: false,\r\n            manufacturingteamDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            manufacturingteamDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteManufacturingTeamDialog() {\r\n        this.setState({ deleteManufacturingTeamDialog: false });\r\n    }\r\n\r\n    hideDeleteManufacturingTeamsDialog() {\r\n        this.setState({ deleteManufacturingTeamsDialog: false });\r\n    }\r\n\r\n    saveManufacturingTeam = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        } = this.state;\r\n        const manufacturingteam = {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        };\r\n        this.props.addManufacturingTeam(manufacturingteam);\r\n        this.setState({\r\n            name: '',\r\n            description: '',\r\n            manager: null,\r\n            members: null,\r\n            manufacturingteamDialog: false\r\n        });\r\n        this.props.history.push('/manufacturingteams');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                manager: null,\r\n                members: null,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editManufacturingTeam(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        } = this.state.selectRow;\r\n        const manufacturingteam = {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editManufacturingTeam(this.state.selectRow.id, manufacturingteam);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteManufacturingTeam(manufacturingteam) {\r\n        this.setState({\r\n            manufacturingteam,\r\n            deleteManufacturingTeamDialog: true\r\n        });\r\n    }\r\n\r\n    deleteManufacturingTeam() {\r\n        this.props.deleteManufacturingTeam();\r\n        this.setState({\r\n            deleteManufacturingTeamDialog: false,\r\n            manufacturingteam: this.emptyManufacturingTeam\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteManufacturingTeamsDialog: true });\r\n    }\r\n\r\n    deleteSelectedManufacturingTeams() {\r\n        this.props.deleteManufacturingTeam();\r\n        this.setState({\r\n            deleteManufacturingTeamsDialog: false,\r\n            selectedManufacturingTeams: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Manufacturing Team</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW MANUFACTURING TEAM\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteManufacturingTeam(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const manufacturingteamDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveManufacturingTeam} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editManufacturingTeam}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        } = this.state;\r\n\r\n        const { manufacturingpersonels } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.manufacturingteams}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedManufacturingTeams} onSelectionChange={e => this.setState({selectedManufacturingTeams: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Manufacturing Teams found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"name\"\r\n                            header=\"Name\"\r\n                            sortable filter filterPlaceholder=\"Search by Name\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"manager\"\r\n                            header=\"Manager\"\r\n                            sortable filter filterPlaceholder=\"Search by Manager\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.manufacturingteamDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Manufacturing Team\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={manufacturingteamDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputText\r\n                                        name=\"name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Name</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={description}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Description</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={manager}\r\n                                        onChange={this.onManager}\r\n                                        options={manufacturingpersonels}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"employee\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT MANAGER</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={members}\r\n                                        onChange={this.onMembers}\r\n                                        options={manufacturingpersonels}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"employee\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT MEMBERS</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE MANUFACTURING TEAM\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inDescription\">Description </label>\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inManager\"\r\n                                value={this.state.selectRow.manager}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            manager: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={manufacturingpersonels}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inMembers\"\r\n                                value={this.state.selectRow.members}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            members: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={manufacturingpersonels}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    manufacturingteams: state.manufacturingteams.manufacturingteams,\r\n    manufacturingpersonels: state.manufacturingpersonels.manufacturingpersonels,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getManufacturingTeams,\r\n        addManufacturingTeam,\r\n        deleteManufacturingTeam,\r\n        editManufacturingTeam,\r\n        getManufacturingPersonels\r\n    }) (ManufacturingTeams);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Button} from 'primereact/button';\r\nimport { addManufacturingTeam } from '../../actions/manufacturingteams';\r\nimport { getManufacturingPersonels } from '../../actions/manufacturingpersonels';\r\nimport PropTypes from 'prop-types';\r\nimport {Dropdown} from 'primereact/dropdown';\r\n\r\n\r\nexport class ManufacturingTeamForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n            manager: null,\r\n            members: null,\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onManager = this.onManager.bind(this);\r\n        this.onMembers = this.onMembers.bind(this);\r\n    }\r\n\r\n    onManager (e){\r\n        this.setState({manager: e.value})\r\n    }\r\n\r\n    onMembers (e){\r\n        this.setState({members: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        } = this.state;\r\n        const manufacturingteam = {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        };\r\n        this.props.addManufacturingTeam(manufacturingteam);\r\n        this.setState({\r\n            name: '',\r\n            description: '',\r\n            manager: '',\r\n            members: '',\r\n        });\r\n        this.props.history.push('/manufacturingteams');\r\n    };\r\n\r\n    static propTypes = {\r\n        addManufacturingTeam: PropTypes.func.isRequired,\r\n        getManufacturingPersonels: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getManufacturingPersonels()\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            name,\r\n            description,\r\n            manager,\r\n            members,\r\n        } = this.state;\r\n\r\n        const { manufacturingpersonels } = this.props\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n                <h2>Manage Manufacturing Team </h2>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-12\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputText\r\n                                name=\"name\"\r\n                                onChange={this.onChange}\r\n                                value={name}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Name</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-12\">\r\n                        <span className=\"p-float-label\">\r\n                            <InputTextarea\r\n                                name=\"description\"\r\n                                onChange={this.onChange}\r\n                                value={description}\r\n                            />\r\n                            <label htmlFor=\"inputtext\">Description</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={manager}\r\n                                onChange={this.onManager}\r\n                                options={manufacturingpersonels}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT MANAGER</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                value={members}\r\n                                onChange={this.onMembers}\r\n                                options={manufacturingpersonels}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            <label htmlFor=\"inputtext\">SELECT MEMBERS</label>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    manufacturingpersonels: state.manufacturingpersonels.manufacturingpersonels,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getManufacturingPersonels, addManufacturingTeam })(ManufacturingTeamForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getManufacturingPersonels, addManufacturingPersonel, editManufacturingPersonel, deleteManufacturingPersonel } from '..//../actions/manufacturingpersonels';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport \"./form.css\";\r\n\r\nclass ManufacturingPersonels extends Component {\r\n\r\n    emptyManufacturingPersonel = {\r\n        employee: null,\r\n        is_manager: false,\r\n        can_authorize_equipment_requisitions: false,\r\n        can_authorize_consumables_requisitions: false,\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            manufacturingpersonels: [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedManufacturingPersonels: null,\r\n            manufacturingpersonelDialog: false,\r\n            deleteManufacturingPersonelDialog: false,\r\n            deleteManufacturingPersonelsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n\r\n            selectRow: {\r\n                employee: null,\r\n                is_manager: false,\r\n                can_authorize_equipment_requisitions: false,\r\n                can_authorize_consumables_requisitions: false,\r\n            },\r\n            newData: {\r\n                employee: null,\r\n                is_manager: false,\r\n                can_authorize_equipment_requisitions: false,\r\n                can_authorize_consumables_requisitions: false,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveManufacturingPersonel = this.saveManufacturingPersonel.bind(this);\r\n        this.editManufacturingPersonel = this.editManufacturingPersonel.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteManufacturingPersonel = this.confirmDeleteManufacturingPersonel.bind(this);\r\n        this.deleteManufacturingPersonel = this.deleteManufacturingPersonel.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedManufacturingPersonels = this.deleteSelectedManufacturingPersonels.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteManufacturingPersonelDialog = this.hideDeleteManufacturingPersonelDialog.bind(this);\r\n        this.hideDeleteManufacturingPersonelsDialog = this.hideDeleteManufacturingPersonelsDialog.bind(this);\r\n        this.handleIsManger = this.handleIsManger.bind(this);\r\n        this.handleEquipment = this.handleEquipment.bind(this);\r\n        this.handleConsumables = this.handleConsumables.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n    }\r\n\r\n    handleIsManger() {\r\n        this.setState({\r\n            is_manager: !this.state.checked\r\n        });\r\n    }\r\n\r\n    handleEquipment(event) {\r\n        this.setState({\r\n            can_authorize_equipment_requisitions: !this.state.checked\r\n        });\r\n    }\r\n\r\n    handleConsumables(event) {\r\n        this.setState({\r\n            can_authorize_consumables_requisitions: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onEmployee (e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        manufacturingpersonels : PropTypes.array.isRequired,\r\n        getManufacturingPersonels: PropTypes.func.isRequired,\r\n        addManufacturingPersonel: PropTypes.func.isRequired,\r\n        editManufacturingPersonel: PropTypes.func.isRequired,\r\n        deleteManufacturingPersonel: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getManufacturingPersonels()\r\n        this.props.getEmployees();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                employee: null,\r\n                is_manager: false,\r\n                can_authorize_equipment_requisitions: false,\r\n                can_authorize_consumables_requisitions: false,\r\n            },\r\n            submitted: false,\r\n            manufacturingpersonelDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            manufacturingpersonelDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteManufacturingPersonelDialog() {\r\n        this.setState({ deleteManufacturingPersonelDialog: false });\r\n    }\r\n\r\n    hideDeleteManufacturingPersonelsDialog() {\r\n        this.setState({ deleteManufacturingPersonelsDialog: false });\r\n    }\r\n\r\n\r\n    saveManufacturingPersonel = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            employee,\r\n            is_manager,\r\n            can_authorize_equipment_requisitions,\r\n            can_authorize_consumables_requisitions,\r\n        } = this.state;\r\n        const manufacturingpersonel = {\r\n            employee,\r\n            is_manager,\r\n            can_authorize_equipment_requisitions,\r\n            can_authorize_consumables_requisitions,\r\n        };\r\n        this.props.addManufacturingPersonel(manufacturingpersonel);\r\n        this.setState({\r\n            employee: '',\r\n            is_manager: true,\r\n            can_authorize_equipment_requisitions: true,\r\n            can_authorize_consumables_requisitions: true,\r\n            manufacturingpersonelDialog: false\r\n        });\r\n        this.props.history.push('/manufacturingpersonels');\r\n    };\r\n\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                employee: null,\r\n                is_manager: false,\r\n                can_authorize_equipment_requisitions: false,\r\n                can_authorize_consumables_requisitions: false,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n\r\n    editManufacturingPersonel(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            employee,\r\n            is_manager,\r\n            can_authorize_equipment_requisitions,\r\n            can_authorize_consumables_requisitions,\r\n\r\n        } = this.state.selectRow;\r\n        const manufacturingpersonel = {\r\n            employee,\r\n            is_manager,\r\n            can_authorize_equipment_requisitions,\r\n            can_authorize_consumables_requisitions,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editManufacturingPersonel(this.state.selectRow.id, manufacturingpersonel);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n\r\n    confirmDeleteManufacturingPersonel(manufacturingpersonel) {\r\n        this.setState({\r\n            manufacturingpersonel,\r\n            deleteManufacturingPersonelDialog: true\r\n        });\r\n    }\r\n\r\n    deleteManufacturingPersonel() {\r\n        this.props.deleteManufacturingPersonel();\r\n        this.setState({\r\n            deleteManufacturingPersonelDialog: false,\r\n            manufacturingpersonel: this.emptyManufacturingPersonel\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteManufacturingPersonelsDialog: true });\r\n    }\r\n\r\n    deleteSelectedManufacturingPersonels() {\r\n        this.props.deleteManufacturingPersonel();\r\n        this.setState({\r\n            deleteManufacturingPersonelsDialog: false,\r\n            selectedManufacturingPersonels: null\r\n        });\r\n    }\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Manufacturing Personel</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW MANUFACTURING PERSONEL\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteManufacturingPersonel(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n        const manufacturingpersonelDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveManufacturingPersonel} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editManufacturingPersonel}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            employee,\r\n        } = this.state;\r\n\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.manufacturingpersonels}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedManufacturingPersonels} onSelectionChange={e => this.setState({selectedManufacturingPersonels: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Active Customers found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"employee\"\r\n                            header=\"Employee\"\r\n                            sortable filter filterPlaceholder=\"Search by Employee\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.manufacturingpersonelDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\"Create Manufacturing Personel\"\r\n                        modal className=\"p-fluid\"\r\n                        footer={manufacturingpersonelDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <Dropdown\r\n                                placeholder =\"SELECT EMPLOYEE\"\r\n                                value={employee}\r\n                                onChange={this.onEmployee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>IS MANAGER :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.handleIsManger}\r\n                                checked={this.state.is_manager}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>CAN AUTHORIZE EQUIPMENT REQUISITIONS :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.handleEquipment}\r\n                                checked={this.state.can_authorize_equipment_requisitions}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                            <label>CAN AUTHORIZE CONSUMABLES REQUISITIONS :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.handleConsumables}\r\n                                checked={this.state.can_authorize_consumables_requisitions}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE MANUFACTURING PERSONEL\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>IS MANAGER :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            is_manager: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.is_manager}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>CAN AUTHORIZE EQUIPMENT REQUISITIONS :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            can_authorize_equipment_requisitions: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.can_authorize_equipment_requisitions}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12 p-formgroup-inline\">\r\n                            <label>CAN AUTHORIZE CONSUMABLES REQUISITIONS :</label>\r\n                            <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            can_authorize_consumables_requisitions: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                checked={this.state.selectRow.can_authorize_consumables_requisitions}\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inEmployee\"\r\n                                value={this.state.selectRow.employee}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        employee: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog visible={this.state.deleteManufacturingPersonelsDialog} style={{ width: '450px' }} header=\"Confirm\" modal onHide={this.hideDeleteManufacturingPersonelsDialog}>\r\n                        <div className=\"confirmation-content\">\r\n                            <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{ fontSize: '2rem'}} />\r\n                            {this.state.manufacturingpersonel && <span>Are you sure you want to delete the selected?</span>}\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    manufacturingpersonels: state.manufacturingpersonels.manufacturingpersonels,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getEmployees,\r\n    getManufacturingPersonels,\r\n    editManufacturingPersonel,\r\n    deleteManufacturingPersonel,\r\n    addManufacturingPersonel} ) (ManufacturingPersonels);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addManufacturingPersonel } from '..//../actions/manufacturingpersonels';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Checkbox} from 'primereact/checkbox';\r\n\r\nexport class ManufacturingPersonelForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            employee: null,\r\n            is_manager: false,\r\n            can_authorize_equipment_requisitions: false,\r\n            can_authorize_consumables_requisitions: false,\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.handleIsManger = this.handleIsManger.bind(this);\r\n      this.handleEquipment = this.handleEquipment.bind(this);\r\n      this.handleConsumables = this.handleConsumables.bind(this);\r\n      this.onEmployee = this.onEmployee.bind(this);\r\n    }\r\n\r\n    handleIsManger() {\r\n        this.setState({\r\n            is_manager: !this.state.checked\r\n        });\r\n    }\r\n\r\n    handleEquipment(event) {\r\n        this.setState({\r\n            can_authorize_equipment_requisitions: !this.state.checked\r\n        });\r\n    }\r\n\r\n    handleConsumables(event) {\r\n        this.setState({\r\n            can_authorize_consumables_requisitions: !this.state.checked\r\n        });\r\n    }\r\n\r\n    onEmployee (e){\r\n        this.setState({employee: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            employee,\r\n            is_manager,\r\n            can_authorize_equipment_requisitions,\r\n            can_authorize_consumables_requisitions,\r\n        } = this.state;\r\n\r\n        const manufacturingpersonel = {\r\n            employee,\r\n            is_manager,\r\n            can_authorize_equipment_requisitions,\r\n            can_authorize_consumables_requisitions,\r\n        };\r\n\r\n        this.props.addManufacturingPersonel(manufacturingpersonel);\r\n        this.setState({\r\n            employee: '',\r\n            is_manager: true,\r\n            can_authorize_equipment_requisitions: true,\r\n            can_authorize_consumables_requisitions: true,\r\n        });\r\n        this.props.history.push('/manufacturingpersonels');\r\n    };\r\n\r\n    static propTypes = {\r\n        addManufacturingPersonel: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getEmployees();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            employee,\r\n        } = this.state;\r\n\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Manufacturing Personel</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col-12 p-md-12\">\r\n                        <Dropdown\r\n                            placeholder =\"SELECT EMPLOYEE\"\r\n                            value={employee}\r\n                            onChange={this.onEmployee}\r\n                            options={employees}\r\n                            filter={true}\r\n                            filterBy=\"id,name\"\r\n                            showClear={true}\r\n                            optionLabel=\"employee_number\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>IS MANAGER :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.handleIsManger}\r\n                            checked={this.state.is_manager}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>CAN AUTHORIZE EQUIPMENT REQUISITIONS :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.handleEquipment}\r\n                            checked={this.state.can_authorize_equipment_requisitions}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                        <label>CAN AUTHORIZE CONSUMABLES REQUISITIONS :</label>\r\n                        <Checkbox\r\n                            inputId=\"working\"\r\n                            onChange={this.handleConsumables}\r\n                            checked={this.state.can_authorize_consumables_requisitions}\r\n                        />\r\n                    </div>\r\n                    <div className=\"p-field p-col-12 p-md-6\">\r\n                        <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, { getEmployees, addManufacturingPersonel })(ManufacturingPersonelForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getProcessProducts, addProcessProduct, editProcessProduct, deleteProcessProduct } from '..//../actions/processproducts';\r\nimport { getManufacturingProductTypesChoices, getProcessedProductsStockStatusChoices, getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport \"./form.css\";\r\n\r\nclass ProcessProducts extends Component {\r\n\r\n    emptyProcessProduct = {\r\n        name: '',\r\n        description: '',\r\n        type: null,\r\n        unit: null,\r\n        finished_goods: false,\r\n        unit_price: '',\r\n        status: null,\r\n        minimum_order_level: '',\r\n        maximum_stock_level: '',\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processproducts : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessProducts: null,\r\n            processproductDialog: false,\r\n            deleteProcessProductDialog: false,\r\n            deleteProcessProductsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                type: null,\r\n                unit: null,\r\n                finished_goods: false,\r\n                unit_price: '',\r\n                status: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                type: null,\r\n                unit: null,\r\n                finished_goods: false,\r\n                unit_price: '',\r\n                status: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveProcessProduct = this.saveProcessProduct.bind(this);\r\n        this.editProcessProduct = this.editProcessProduct.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteProcessProduct = this.confirmDeleteProcessProduct.bind(this);\r\n        this.deleteProcessProduct = this.deleteProcessProduct.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedProcessProducts = this.deleteSelectedProcessProducts.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteProcessProductDialog = this.hideDeleteProcessProductDialog.bind(this);\r\n        this.hideDeleteProcessProductsDialog = this.hideDeleteProcessProductsDialog.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onStatus = this.onStatus.bind(this);\r\n        this.handleFinished = this.handleFinished.bind(this);\r\n    }\r\n\r\n    handleFinished() {\r\n      this.setState({\r\n        finished_goods: !this.state.checked\r\n      });\r\n    }\r\n\r\n    onType (e){\r\n      this.setState({type: e.value})\r\n    }\r\n\r\n    onUnit (e){\r\n      this.setState({unit: e.value})\r\n    }\r\n\r\n    onStatus (e){\r\n      this.setState({status: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        processproducts : PropTypes.array.isRequired,\r\n        getProcessProducts: PropTypes.func.isRequired,\r\n        getManufacturingProductTypesChoices: PropTypes.func.isRequired,\r\n        getProcessedProductsStockStatusChoices: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessProducts();\r\n        this.props.getManufacturingProductTypesChoices();\r\n        this.props.getProcessedProductsStockStatusChoices();\r\n        this.props.getUnitOfMeasureChoices();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                name: '',\r\n                description: '',\r\n                type: null,\r\n                unit: null,\r\n                finished_goods: false,\r\n                unit_price: '',\r\n                status: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            },\r\n            submitted: false,\r\n            processproductDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            processproductDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteProcessProductDialog() {\r\n        this.setState({ deleteProcessProductDialog: false });\r\n    }\r\n\r\n    hideDeleteProcessProductsDialog() {\r\n        this.setState({ deleteProcessProductsDialog: false });\r\n    }\r\n\r\n    saveProcessProduct = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            description,\r\n            type,\r\n            unit,\r\n            finished_goods,\r\n            unit_price,\r\n            status,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n        const processproduct = {\r\n            name,\r\n            description,\r\n            type,\r\n            unit,\r\n            finished_goods,\r\n            unit_price,\r\n            status,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        this.props.addProcessProduct(processproduct);\r\n        this.setState({\r\n            name: '',\r\n            description: '',\r\n            type: null,\r\n            unit: null,\r\n            finished_goods: true,\r\n            unit_price: '',\r\n            status: null,\r\n            minimum_order_level: '',\r\n            maximum_stock_level: '',\r\n            processproductDialog: false\r\n        });\r\n        this.props.history.push('/processproducts');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                name: '',\r\n                description: '',\r\n                type: null,\r\n                unit: null,\r\n                finished_goods: false,\r\n                unit_price: '',\r\n                status: null,\r\n                minimum_order_level: '',\r\n                maximum_stock_level: '',\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editProcessProduct(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            name,\r\n            description,\r\n            type,\r\n            unit,\r\n            finished_goods,\r\n            unit_price,\r\n            status,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state.selectRow;\r\n        const processproduct = {\r\n            name,\r\n            description,\r\n            type,\r\n            unit,\r\n            finished_goods,\r\n            unit_price,\r\n            status,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editProcessProduct(this.state.selectRow.id, processproduct);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteProcessProduct(processproduct) {\r\n        this.setState({\r\n            processproduct,\r\n            deleteProcessProductDialog: true\r\n        });\r\n    }\r\n\r\n    deleteProcessProduct() {\r\n        this.props.deleteProcessProduct();\r\n        this.setState({\r\n            deleteProcessProductDialog: false,\r\n            processproduct: this.emptyProcessProduct\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteProcessProductsDialog: true });\r\n    }\r\n\r\n    deleteSelectedProcessProducts() {\r\n        this.props.deleteProcessProduct();\r\n        this.setState({\r\n            deleteProcessProductsDialog: false,\r\n            selectedProcessProducts: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Process Product</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW PROCESS PRODUCT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteProcessProduct(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const processproductDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveProcessProduct} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editProcessProduct}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n            name,\r\n            description,\r\n            type,\r\n            unit,\r\n            unit_price,\r\n            status,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n        const {manufacturingproducttypeschoices} = this.props;\r\n        const {processedproductsstockstatuschoices} = this.props;\r\n        const {unitofmeasurechoices} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.processproducts}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedProcessProducts} onSelectionChange={e => this.setState({selectedProcessProducts: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Process Products found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"reference_number\" header=\"Reference Number\" sortable filter filterPlaceholder=\"Search by Reference Number\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search by Name\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"type\" header=\"Type\" sortable filter filterPlaceholder=\"Search by Type\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"status\" header=\"Status\" sortable filter filterPlaceholder=\"Search by Status\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.processproductDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Process Product\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={processproductDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                              <label>Description</label>\r\n                              <InputTextarea\r\n                                name=\"description\"\r\n                                onChange={this.onChange}\r\n                                value={description}\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <label>Name</label>\r\n                              <InputText\r\n                                name=\"name\"\r\n                                onChange={this.onChange}\r\n                                value={name}\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <label>Unit Price</label>\r\n                              <InputNumber\r\n                                name=\"unit_price\"\r\n                                onChange={this.onChange}\r\n                                value={unit_price}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <label>MAXIMUM STOCK LEVEL</label>\r\n                              <InputNumber\r\n                                name=\"maximum_stock_level\"\r\n                                onChange={this.onChange}\r\n                                value={maximum_stock_level}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <label>MINIMUM ORDER LEVEL</label>\r\n                              <InputNumber\r\n                                name=\"minimum_order_level\"\r\n                                onChange={this.onChange}\r\n                                value={minimum_order_level}\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <Dropdown\r\n                                placeholder =\"SELECT TYPE\"\r\n                                value={type}\r\n                                onChange={this.onType}\r\n                                options={manufacturingproducttypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <Dropdown\r\n                                placeholder =\"SELECT UNIT\"\r\n                                value={unit}\r\n                                onChange={this.onUnit}\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <Dropdown\r\n                                placeholder =\"SELECT STATUS\"\r\n                                value={status}\r\n                                onChange={this.onStatus}\r\n                                options={processedproductsstockstatuschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                              <label>FINISHED GOODS :</label>\r\n                              <Checkbox\r\n                                inputId=\"working\"\r\n                                onChange={this.handleFinished}\r\n                                checked={this.state.finished_goods}\r\n                              />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE PROCESS PRODUCT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inName\">Name </label>\r\n                            <InputText id=\"inName\" value={this.state.selectRow.name}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        name: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inDescription\">Description </label>\r\n                            <InputTextarea id=\"inDescription\" value={this.state.selectRow.description}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        description: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div>\r\n                        <label htmlFor=\"inMaximumStockLevel\">Maximum Stock Level </label>\r\n                        <InputNumber\r\n                            id=\"inMaximumStockLevel\"\r\n                            value={this.state.selectRow.maximum_stock_level}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    maximum_stock_level: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                    </div>\r\n                            <div>\r\n                            <label htmlFor=\"inMinimumOrderLevel\">Minimum Order Level </label>\r\n                            <InputNumber\r\n                                id=\"inMinimumOrderLevel\"\r\n                                value={this.state.selectRow.minimum_order_level}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        minimum_order_level: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div>\r\n                        <label htmlFor=\"inUnitPrice\">Unit Price </label>\r\n                        <InputNumber\r\n                            id=\"inUnitPrice\"\r\n                            value={this.state.selectRow.unit_price}\r\n                            style={{marginLeft: '.5em'}}\r\n                            mode=\"decimal\"\r\n                            showButtons\r\n                            buttonLayout=\"horizontal\"\r\n                            decrementButtonClassName=\"p-button-danger\"\r\n                            incrementButtonClassName=\"p-button-success\"\r\n                            incrementButtonIcon=\"pi pi-plus\"\r\n                            decrementButtonIcon=\"pi pi-minus\"\r\n                            step={1}\r\n                            onChange={(e) =>\r\n                            this.setState({\r\n                                selectRow: {\r\n                                    ...this.state.selectRow,\r\n                                    unit_price: e.target.value\r\n                                }\r\n                            })\r\n                        }/>\r\n                    </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inType\"\r\n                                value={this.state.selectRow.type}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            type: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={manufacturingproducttypeschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inUnit\"\r\n                                value={this.state.selectRow.unit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            unit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inStatus\"\r\n                                value={this.state.selectRow.status}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            status: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={processedproductsstockstatuschoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processproducts: state.processproducts.processproducts,\r\n    manufacturingproducttypeschoices: state.manufacturingproducttypeschoices.manufacturingproducttypeschoices,\r\n    processedproductsstockstatuschoices: state.processedproductsstockstatuschoices.processedproductsstockstatuschoices,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getProcessProducts,\r\n        addProcessProduct,\r\n        deleteProcessProduct,\r\n        editProcessProduct,\r\n        getManufacturingProductTypesChoices,\r\n        getProcessedProductsStockStatusChoices,\r\n        getUnitOfMeasureChoices,\r\n    }) (ProcessProducts);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Checkbox} from 'primereact/checkbox';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { addProcessProduct } from '../../actions/processproducts';\r\nimport { getManufacturingProductTypesChoices, getProcessedProductsStockStatusChoices, getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport { getInventoryStockItems } from '..//../actions/inventorystockitems';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class ProcessProductForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n            type: null,\r\n            unit: null,\r\n            finished_goods: false,\r\n            location:null,\r\n            status: null,\r\n            minimum_order_level: '',\r\n            maximum_stock_level: '',\r\n\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleFinished = this.handleFinished.bind(this);\r\n        this.onType = this.onType.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onlocation = this.onlocation.bind(this);\r\n        this.onStatus = this.onStatus.bind(this);\r\n    }\r\n\r\n    handleFinished() {\r\n      this.setState({\r\n        finished_goods: !this.state.checked\r\n      });\r\n    }\r\n\r\n    onType (e){\r\n      this.setState({type: e.value})\r\n    }\r\n\r\n    onUnit (e){\r\n      this.setState({unit: e.value})\r\n    }\r\n\r\n    onlocation (e){\r\n      this.setState({location: e.value})\r\n    }\r\n\r\n    onStatus (e){\r\n      this.setState({status: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n          name,\r\n          description,\r\n          type,\r\n          unit,\r\n          finished_goods,\r\n          location,\r\n          status,\r\n          minimum_order_level,\r\n          maximum_stock_level,\r\n        } = this.state;\r\n      const processproduct = {\r\n          name,\r\n          description,\r\n          type,\r\n          unit,\r\n          finished_goods,\r\n          location,\r\n          status,\r\n          minimum_order_level,\r\n          maximum_stock_level,\r\n        };\r\n      this.props.addProcessProduct(processproduct);\r\n      console.log(processproduct)\r\n      this.setState({\r\n          name: '',\r\n          description: '',\r\n          type: '',\r\n          unit: '',\r\n          finished_goods: true,\r\n          location: '',\r\n          status: '',\r\n          minimum_order_level: '',\r\n          maximum_stock_level: '',\r\n        });\r\n      this.props.history.push('/processproducts');\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcessProduct: PropTypes.func.isRequired,\r\n        getManufacturingProductTypesChoices: PropTypes.func.isRequired,\r\n        getInventoryStockItems: PropTypes.func.isRequired,\r\n        getProcessedProductsStockStatusChoices: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n    }\r\n    componentDidMount() {\r\n      this.props.getManufacturingProductTypesChoices();\r\n      this.props.getInventoryStockItems();\r\n      this.props.getProcessedProductsStockStatusChoices();\r\n      this.props.getUnitOfMeasureChoices();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            description,\r\n            type,\r\n            unit,\r\n            location,\r\n            status,\r\n            minimum_order_level,\r\n            maximum_stock_level,\r\n        } = this.state;\r\n\r\n        const {manufacturingproducttypeschoices} = this.props;\r\n        const {inventorystockitems} = this.props;\r\n        const {processedproductstockstatuschoices} = this.props;\r\n        const {unitofmeasurechoices} = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Manage Process Product</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n              <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                  <label>Name</label>\r\n                  <InputText\r\n                    name=\"name\"\r\n                    onChange={this.onChange}\r\n                    value={name}\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                  <label>Description</label>\r\n                  <InputTextarea\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={description}\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <label>MAXIMUM STOCK LEVEL</label>\r\n                  <InputNumber\r\n                    name=\"maximum_stock_level\"\r\n                    onChange={this.onChange}\r\n                    value={maximum_stock_level}\r\n                    showButtons\r\n                    buttonLayout=\"horizontal\"\r\n                    decrementButtonClassName=\"p-button-danger\"\r\n                    incrementButtonClassName=\"p-button-success\"\r\n                    incrementButtonIcon=\"pi pi-plus\"\r\n                    decrementButtonIcon=\"pi pi-minus\"\r\n                    step={1}\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <label>MINIMUM ORDER LEVEL</label>\r\n                  <InputNumber\r\n                    name=\"minimum_order_level\"\r\n                    onChange={this.onChange}\r\n                    value={minimum_order_level}\r\n                    showButtons\r\n                    buttonLayout=\"horizontal\"\r\n                    decrementButtonClassName=\"p-button-danger\"\r\n                    incrementButtonClassName=\"p-button-success\"\r\n                    incrementButtonIcon=\"pi pi-plus\"\r\n                    decrementButtonIcon=\"pi pi-minus\"\r\n                    step={1}\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT TYPE\"\r\n                    value={type}\r\n                    onChange={this.onType}\r\n                    options={manufacturingproducttypeschoices}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"value\"\r\n                    optionValue=\"id\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT UNIT\"\r\n                    value={unit}\r\n                    onChange={this.onUnit}\r\n                    options={unitofmeasurechoices}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"id\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT LOCATION\"\r\n                    value={location}\r\n                    onChange={this.onlocation}\r\n                    options={inventorystockitems}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"id\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT STATUS\"\r\n                    value={status}\r\n                    onChange={this.onStatus}\r\n                    options={processedproductstockstatuschoices}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"value\"\r\n                    optionValue=\"key\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6 p-formgroup-inline\">\r\n                  <label>FINISHED GOODS :</label>\r\n                  <Checkbox\r\n                    inputId=\"working\"\r\n                    onChange={this.handleFinished}\r\n                    checked={this.state.finished_goods}\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                </div>\r\n            </div>\r\n            </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    manufacturingproducttypeschoices: state.manufacturingproducttypeschoices.manufacturingproducttypeschoices,\r\n    processedproductstockstatuschoices: state.processedproductstockstatuschoices.processedproductstockstatuschoices,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    inventorystockitems: state.inventorystockitems.inventorystockitems,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getManufacturingProductTypesChoices, getProcessedProductsStockStatusChoices, getUnitOfMeasureChoices, getInventoryStockItems, addProcessProduct })(ProcessProductForm);\r\n","import axios from 'axios';\r\nimport { GET_WASTE_GENERATION_REPORTS, GET_WASTE_GENERATION_REPORT, EDIT_WASTE_GENERATION_REPORT, DELETE_WASTE_GENERATION_REPORT, ADD_WASTE_GENERATION_REPORT } from '../types/wastegenerationreportTypes';\r\nimport { wastegenerationreportsURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getWasteGenerationReports = () => dispatch => {\r\n    axios.get(wastegenerationreportsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_WASTE_GENERATION_REPORTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteWasteGenerationReport = (id) => dispatch => {\r\n    axios.delete(wastegenerationreportsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_WASTE_GENERATION_REPORT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n// Add\r\nexport const addWasteGenerationReport = (wastegenerationreport) => dispatch => {\r\n    axios.post(wastegenerationreportsURL, wastegenerationreport)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_WASTE_GENERATION_REPORT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getWasteGenerationReport = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/waste-generation-reports/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_WASTE_GENERATION_REPORT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editWasteGenerationReport = (id, wastegenerationreport) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/waste-generation-reports/${id}/`, wastegenerationreport)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_WASTE_GENERATION_REPORT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getWasteGenerationReports, addWasteGenerationReport, editWasteGenerationReport, deleteWasteGenerationReport } from '..//../actions/wastegenerationreports';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getProcessProducts } from '..//../actions/processproducts';\r\nimport { getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport \"./form.css\";\r\n\r\nclass WasteGenerationReports extends Component {\r\n\r\n    emptyWasteGenerationReport = {\r\n        product: null,\r\n        unit: null,\r\n        quantity: '',\r\n        comments: '',\r\n        recorded_by: null,\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            wastegenerationreports : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedWasteGenerationReports: null,\r\n            wastegenerationreportDialog: false,\r\n            deleteWasteGenerationReportDialog: false,\r\n            deleteWasteGenerationReportsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                product: null,\r\n                unit: null,\r\n                quantity: '',\r\n                comments: '',\r\n                recorded_by: null,\r\n            },\r\n            newData: {\r\n                product: null,\r\n                unit: null,\r\n                quantity: '',\r\n                comments: '',\r\n                recorded_by: null,\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveWasteGenerationReport = this.saveWasteGenerationReport.bind(this);\r\n        this.editWasteGenerationReport = this.editWasteGenerationReport.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteManufacturedStockItem = this.confirmDeleteManufacturedStockItem.bind(this);\r\n        this.deleteWasteGenerationReport = this.deleteWasteGenerationReport.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedWasteGenerationReports = this.deleteSelectedWasteGenerationReports.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteWasteGenerationReportDialog = this.hideDeleteWasteGenerationReportDialog.bind(this);\r\n        this.hideDeleteWasteGenerationReportsDialog = this.hideDeleteWasteGenerationReportsDialog.bind(this);\r\n        this.onUnit = this.onUnit.bind(this);\r\n        this.onProduct = this.onProduct.bind(this);\r\n        this.onRecordedBy = this.onRecordedBy.bind(this);\r\n    }\r\n\r\n    onUnit (e){\r\n        this.setState({unit: e.value})\r\n    }\r\n\r\n    onProduct (e){\r\n        this.setState({product: e.value})\r\n    }\r\n\r\n    onRecordedBy (e){\r\n        this.setState({recorded_by: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        wastegenerationreports : PropTypes.array.isRequired,\r\n        getWasteGenerationReports: PropTypes.func.isRequired,\r\n        getProcessProducts: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getWasteGenerationReports();\r\n        this.props.getProcessProducts()\r\n        this.props.getUnitOfMeasureChoices()\r\n        this.props.getEmployees()\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                product: null,\r\n                unit: null,\r\n                quantity: '',\r\n                comments: '',\r\n                recorded_by: null,\r\n            },\r\n            submitted: false,\r\n            wastegenerationreportDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            wastegenerationreportDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteWasteGenerationReportDialog() {\r\n        this.setState({ deleteWasteGenerationReportDialog: false });\r\n    }\r\n\r\n    hideDeleteWasteGenerationReportsDialog() {\r\n        this.setState({ deleteWasteGenerationReportsDialog: false });\r\n    }\r\n\r\n    saveWasteGenerationReport = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            product,\r\n            unit,\r\n            quantity,\r\n            comments,\r\n            recorded_by\r\n        } = this.state;\r\n        const wastegenerationreport = {\r\n            product,\r\n            unit,\r\n            quantity,\r\n            comments,\r\n            recorded_by\r\n        };\r\n        this.props.addWasteGenerationReport(wastegenerationreport);\r\n        this.setState({\r\n            product: null,\r\n            unit: null,\r\n            quantity: '',\r\n            comments: '',\r\n            recorded_by: null,\r\n            wastegenerationreportDialog: false\r\n        });\r\n        this.props.history.push('/wastegenerationreports');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                product: null,\r\n                unit: null,\r\n                quantity: '',\r\n                comments: '',\r\n                recorded_by: null,\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editWasteGenerationReport(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            product,\r\n            unit,\r\n            quantity,\r\n            comments,\r\n            recorded_by\r\n        } = this.state.selectRow;\r\n        const wastegenerationreport = {\r\n            product,\r\n            unit,\r\n            quantity,\r\n            comments,\r\n            recorded_by\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editWasteGenerationReport(this.state.selectRow.id, wastegenerationreport);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteManufacturedStockItem(wastegenerationreport) {\r\n        this.setState({\r\n            wastegenerationreport,\r\n            deleteWasteGenerationReportDialog: true\r\n        });\r\n    }\r\n\r\n    deleteWasteGenerationReport() {\r\n        this.props.deleteWasteGenerationReport();\r\n        this.setState({\r\n            deleteWasteGenerationReportDialog: false,\r\n            wastegenerationreport: this.emptyWasteGenerationReport\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteWasteGenerationReportsDialog: true });\r\n    }\r\n\r\n    deleteSelectedWasteGenerationReports() {\r\n        this.props.deleteWasteGenerationReport();\r\n        this.setState({\r\n            deleteWasteGenerationReportsDialog: false,\r\n            selectedWasteGenerationReports: null\r\n        });\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Waste Generation Report</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW WASTE GENERATION REPORT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteManufacturedStockItem(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const wastegenerationreportDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveWasteGenerationReport} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editWasteGenerationReport}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const { product, unit, quantity, comments, recorded_by } = this.state;\r\n        const { processproducts } = this.props;\r\n        const { unitofmeasurechoices } = this.props;\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.wastegenerationreports}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedWasteGenerationReports} onSelectionChange={e => this.setState({selectedWasteGenerationReports: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Waste Generation Reports found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column className=\"table-field\" selectionMode=\"multiple\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"id\" header=\"ID\" sortable filter filterPlaceholder=\"Search by ID\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"reference_number\" header=\"Reference Number\" sortable filter filterPlaceholder=\"Search by Reference Number\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"product\" header=\"Product\" sortable filter filterPlaceholder=\"Search by Product\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"unit\" header=\"Unit\" sortable filter filterPlaceholder=\"Search by Unit\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"quantity\" header=\"Quantity\" sortable filter filterPlaceholder=\"Search by Quantity\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" field=\"recorded_by\" header=\"Recorded By\" sortable filter filterPlaceholder=\"Search by Record\" style={{width:'3em', backgroundColor: '#4EB0A5'}}/>\r\n                        <Column className=\"table-field\" body={this.actionBodyTemplate} headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}} bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}} />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.wastegenerationreportDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Waste Generation Report\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={wastegenerationreportDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>QUANTITY</label>\r\n                                <InputNumber\r\n                                  name=\"quantity\"\r\n                                  onChange={this.onChange}\r\n                                  value={quantity}\r\n                                  showButtons\r\n                                  buttonLayout=\"horizontal\"\r\n                                  decrementButtonClassName=\"p-button-danger\"\r\n                                  incrementButtonClassName=\"p-button-success\"\r\n                                  incrementButtonIcon=\"pi pi-plus\"\r\n                                  decrementButtonIcon=\"pi pi-minus\"\r\n                                  step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                              <label>COMMNETS</label>\r\n                              <InputTextarea\r\n                                name=\"comments\"\r\n                                onChange={this.onChange}\r\n                                value={comments}\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <Dropdown\r\n                                placeholder =\"SELECT PRODUCT\"\r\n                                value={product}\r\n                                onChange={this.onProduct}\r\n                                options={processproducts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <Dropdown\r\n                                placeholder =\"SELECT UNIT\"\r\n                                value={unit}\r\n                                onChange={this.onUnit}\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                              <Dropdown\r\n                                placeholder =\"SELECT RECORDED BY\"\r\n                                value={recorded_by}\r\n                                onChange={this.onRecordedBy}\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                              />\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE WASTE GENERATION REPORT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inQuantity\">Quantity </label>\r\n                            <InputNumber\r\n                                id=\"inQuantity\"\r\n                                value={this.state.selectRow.quantity}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        quantity: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inComments\">Comments </label>\r\n                            <InputTextarea id=\"inComments\" value={this.state.selectRow.comments}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        comments: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inProduct\"\r\n                                value={this.state.selectRow.product}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            product: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={processproducts}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inUnit\"\r\n                                value={this.state.selectRow.unit}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            unit: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={unitofmeasurechoices}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inRecordedBy\"\r\n                                value={this.state.selectRow.recorded_by}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            recorded_by: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={employees}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"employee_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    wastegenerationreports: state.wastegenerationreports.wastegenerationreports,\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    processproducts: state.processproducts.processproducts,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getWasteGenerationReports,\r\n        addWasteGenerationReport,\r\n        deleteWasteGenerationReport,\r\n        editWasteGenerationReport,\r\n        getUnitOfMeasureChoices,\r\n        getProcessProducts,\r\n        getEmployees,\r\n    }) (WasteGenerationReports);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addWasteGenerationReport } from '..//../actions/wastegenerationreports';\r\nimport PropTypes from 'prop-types';\r\nimport { getEmployees } from '..//../actions/employees';\r\nimport { getProcessProducts } from '..//../actions/processproducts';\r\nimport { getUnitOfMeasureChoices } from '..//../actions/choices';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\n\r\n\r\nexport class WasteGenerationReportForm extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          product: null,\r\n          unit: null,\r\n          quantity: '',\r\n          comments: '',\r\n          recorded_by: null,\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onUnit = this.onUnit.bind(this);\r\n      this.onProduct = this.onProduct.bind(this);\r\n      this.onRecordedBy = this.onRecordedBy.bind(this);\r\n    }\r\n\r\n    onUnit (e){\r\n      this.setState({unit: e.value})\r\n    }\r\n\r\n    onProduct (e){\r\n      this.setState({product: e.value})\r\n    }\r\n\r\n    onRecordedBy (e){\r\n      this.setState({recorded_by: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const { product, unit, quantity, comments, recorded_by } = this.state;\r\n      const wastereportgeneration = { product, unit, quantity, comments, recorded_by };\r\n      this.props.addWasteGenerationReport(wastereportgeneration);\r\n      this.setState({\r\n            product: '',\r\n            unit: '',\r\n            quantity: '',\r\n            comments: '',\r\n            recorded_by: '',\r\n        });\r\n      this.props.history.push('/wastegenerationreports');\r\n    };\r\n\r\n    static propTypes = {\r\n        addWasteGenerationReport: PropTypes.func.isRequired,\r\n        getProcessProducts: PropTypes.func.isRequired,\r\n        getUnitOfMeasureChoices: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.getProcessProducts()\r\n      this.props.getUnitOfMeasureChoices()\r\n      this.props.getEmployees()\r\n    }\r\n\r\n\r\n    render() {\r\n        const { product, unit, quantity, comments, recorded_by } = this.state;\r\n        const { processproducts } = this.props;\r\n        const { unitofmeasurechoices } = this.props;\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Add Waste Report</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n              <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>QUANTITY</label>\r\n                    <InputNumber\r\n                      name=\"quantity\"\r\n                      onChange={this.onChange}\r\n                      value={quantity}\r\n                      showButtons\r\n                      buttonLayout=\"horizontal\"\r\n                      decrementButtonClassName=\"p-button-danger\"\r\n                      incrementButtonClassName=\"p-button-success\"\r\n                      incrementButtonIcon=\"pi pi-plus\"\r\n                      decrementButtonIcon=\"pi pi-minus\"\r\n                      step={1}\r\n                    />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\">\r\n                  <label>COMMNETS</label>\r\n                  <InputTextarea\r\n                    name=\"comments\"\r\n                    onChange={this.onChange}\r\n                    value={comments}\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT PRODUCT\"\r\n                    value={product}\r\n                    onChange={this.onProduct}\r\n                    options={processproducts}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"id\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT UNIT\"\r\n                    value={unit}\r\n                    onChange={this.onUnit}\r\n                    options={unitofmeasurechoices}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"name\"\r\n                    optionValue=\"id\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Dropdown\r\n                    placeholder =\"SELECT RECORDED BY\"\r\n                    value={recorded_by}\r\n                    onChange={this.onRecordedBy}\r\n                    options={employees}\r\n                    filter={true}\r\n                    filterBy=\"id,name\"\r\n                    showClear={true}\r\n                    optionLabel=\"employee_number\"\r\n                    optionValue=\"id\"\r\n                  />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                  <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                </div>\r\n            </div>\r\n            </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    unitofmeasurechoices: state.unitofmeasurechoices.unitofmeasurechoices,\r\n    processproducts: state.processproducts.processproducts,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUnitOfMeasureChoices, getProcessProducts, getEmployees, addWasteGenerationReport })(WasteGenerationReportForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getProcessedProductStockReceipts} from '..//../actions/processedproductstockreceipts';\r\nimport \"./form.css\";\r\n\r\n\r\nclass ProcessedProductStockReceipts extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processedproductstockreceipts : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessedProductStockReceipts: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        processedproductstockreceipts : PropTypes.array.isRequired,\r\n        getProcessedProductStockReceipts: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessedProductStockReceipts();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Processed Product Stock Receipts</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-excel\" iconPos=\"right\" label=\"CSV\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.processedproductstockreceipts}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedProcessedProductStockReceipts} onSelectionChange={e => this.setState({selectedProcessedProductStockReceipts: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No ProcessedProductStockReceipts found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"received_by\"\r\n                        header=\"Received By\"\r\n                        sortable filter filterPlaceholder=\"Search by Received By\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"receive_date\"\r\n                        header=\"Receive Date\"\r\n                        sortable filter filterPlaceholder=\"Search by Receive Date\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processedproductstockreceipts: state.processedproductstockreceipts.processedproductstockreceipts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProcessedProductStockReceipts} ) (ProcessedProductStockReceipts);\r\n","import axios from 'axios';\r\nimport { ADD_PROCESSED_PRODUCT_STOCK_RECEIPT, GET_PROCESSED_PRODUCT_STOCK_RECEIPTS, GET_PROCESSED_PRODUCT_STOCK_RECEIPT, DELETE_PROCESSED_PRODUCT_STOCK_RECEIPT } from '../types/processedproductstockreceiptTypes';\r\nimport { processedproductstockreceiptsURL } from '../constants';\r\n\r\n// Get\r\nexport const getProcessedProductStockReceipts=  () => dispatch => {\r\n    axios.get(processedproductstockreceiptsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_PROCESSED_PRODUCT_STOCK_RECEIPTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessedProductStockReceipt = (id) => dispatch => {\r\n    axios.delete(processedproductstockreceiptsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESSED_PRODUCT_STOCK_RECEIPT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addProcessedProductStockReceipt = processedproductstockreceipt => dispatch => {\r\n    axios.post(processedproductstockreceiptsURL, processedproductstockreceipt)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESSED_PRODUCT_STOCK_RECEIPT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessedProductStockReceipt = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/processed-product-stock-receipts/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESSED_PRODUCT_STOCK_RECEIPT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import React, { Component } from \"react\"\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport { connect } from 'react-redux';\r\nimport { getProcessProducts } from '..//../actions/processproducts';\r\n\r\n\r\nclass ProcessedProductStockReceiptLine extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         debit_account: null,\r\n\r\n    //     }\r\n                 \r\n    //     this.onAccount = this.onAccount.bind(this);\r\n\r\n    // }\r\n\r\n    \r\n    \r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.getProcessProducts();\r\n    }\r\n    \r\n    render(){\r\n        const { processproducts } = this.props;\r\n\r\n        let ProductOptions = processproducts.length > 0\r\n            && processproducts.map((item, i) => {\r\n            return (\r\n              <option key={i} value={item.id}>{item.name}</option>\r\n            )\r\n          }, this);\r\n\r\n        return (\r\n           this.props.lines.map((val, idx) => {\r\n            let item = `item-${idx}`, quantity = `quantity-${idx}` \r\n            return (\r\n                <tr key={val.index}>\r\n                    <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"quantity\"\r\n                          data-id={idx}\r\n                          format=\"yy-mm-dd\"\r\n                          id={quantity}\r\n                          className=\"form-control\"\r\n                        />\r\n                    </td>\r\n\r\n                    <td>\r\n                        <select\r\n                          name=\"item\"\r\n                          id={item}\r\n                          data-id={idx}\r\n                          className=\"form-control\"\r\n                        >\r\n                           {ProductOptions}\r\n                        </select>\r\n                    </td>   \r\n\r\n                    <td>\r\n                        {\r\n                        idx===0?<Button onClick={()=>this.props.add()} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\" />\r\n                        : <Button icon='pi pi-trash' className=\"p-button-danger\" onClick={(() => this.props.delete(val))} />\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    processproducts: state.processproducts.processproducts\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProcessProducts }) (ProcessedProductStockReceiptLine);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProcessedProductStockReceipt } from '../../actions/processedproductstockreceipts';\r\nimport { getWarehouses } from '../../actions/warehouses';\r\nimport { getEmployees } from '../../actions/employees';\r\nimport { getProductionProcesses } from '../../actions/productionprocesses';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Calendar} from \"primereact/calendar\";\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport ProcessedProductStockReceiptLine from './ProcessedProductStockReceiptLine';\r\n\r\n\r\n\r\n\r\nexport class ProcessedProductStockReceipt extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        \tprocess: null,\r\n        \treceived_by: null,\r\n        \tship_to: null,\r\n        \treceive_date: '',\r\n            note: '',\r\n            lines: [{ index: Math.random(), item: '', quantity: '' }],\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.onWarehouse = this.onWarehouse.bind(this);\r\n        this.onEmployee = this.onEmployee.bind(this);\r\n        this.onProcess = this.onProcess.bind(this);\r\n\r\n\r\n    }\r\n\r\n    onWarehouse (e){\r\n        this.setState({ship_to: e.value})\r\n    }\r\n\r\n    onEmployee (e){\r\n        this.setState({received_by: e.value})\r\n    }\r\n\r\n    onProcess (e){\r\n        this.setState({process: e.value})\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        if ([\"quantity\", \"item\"].includes(e.target.name)) {\r\n            let lines = [...this.state.lines]\r\n            lines[e.target.dataset.id][e.target.name] = e.target.value;\r\n\r\n        } else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            lines: [...prevState.lines, { index: Math.random(), item: '', quantity: ''  }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            lines: this.state.lines.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            lines: this.state.lines.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n    \tthis.props.getEmployees();\r\n    \tthis.props.getProductionProcesses()\r\n    \tthis.props.getWarehouses()\r\n\r\n\r\n    }\r\n\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { note, ship_to, received_by, receive_date, process, lines } = this.state;\r\n        const receipt = { note, ship_to, received_by, receive_date, process, lines  };\r\n        this.props.addProcessedProductStockReceipt(receipt);\r\n        this.setState({\r\n            lines: [],\r\n            note: '',\r\n            received_by: '',\r\n            receive_date: '',\r\n            ship_to: '',\r\n            process: '',\r\n\r\n        });\r\n        // this.props.history.push('/processmachinegroups');\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcessedProductStockReceipt: PropTypes.func.isRequired,\r\n    }\r\n\r\n\r\n    render() {\r\n        const { note, lines, received_by, receive_date, ship_to, process} = this.state;\r\n        const { employees } = this.props;\r\n        const { warehouses } = this.props;\r\n        const { productionprocesses } = this.props;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n                <h2>RECEIVE STOCK</h2>\r\n                <form onSubmit={this.onSubmit} onChange={this.handleChange}>\r\n                    <div className=\"p-fluid p-formgrid p-grid\">\r\n                        \r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                                <InputTextarea\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                />\r\n                                <label htmlFor=\"inputtext\">NOTE</label>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n\t\t\t                <span className=\"p-float-label\">\r\n\t\t\t                <Calendar\r\n\t\t\t                    showIcon={true}\r\n\t\t\t                    className=\"form-control\"\r\n\t\t\t                    name=\"receive_date\"\r\n\t\t\t                    onChange={this.onChange}\r\n\t\t\t                    value={receive_date}\r\n\t\t\t                    dateFormat=\"yy-mm-dd\"\r\n\t\t\t                />\r\n\t\t\t                <label htmlFor=\"inputtext\">Date</label>\r\n\t\t\t                </span>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"p-field p-col-12 p-md-6\">\r\n\t\t\t                <span className=\"p-float-label\">\r\n\t\t\t                <Dropdown\r\n\t\t\t                    value={ship_to}\r\n\t\t\t                    onChange={this.onWarehouse}\r\n\t\t\t                    options={warehouses}\r\n\t\t\t                    filter={true}\r\n\t\t\t                    filterBy=\"name, id\"\r\n\t\t\t                    showClear={true}\r\n\t\t\t                    optionLabel=\"name\"\r\n\t\t\t                    optionValue=\"id\"\r\n\t\t\t                />\r\n\r\n\t\t\t                <label htmlFor=\"dropdown\">WAREHOUSE</label>\r\n\t\t\t                </span>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"p-field p-col-12 p-md-6\">\r\n\t\t\t                <span className=\"p-float-label\">\r\n\t\t\t                <Dropdown\r\n\t\t\t                    value={received_by}\r\n\t\t\t                    onChange={this.onEmployee}\r\n\t\t\t                    options={employees}\r\n\t\t\t                    filter={true}\r\n\t\t\t                    showClear={true}\r\n\t\t\t                    optionLabel=\"email\"\r\n\t\t\t                    optionValue=\"id\"\r\n\t\t\t                />\r\n\r\n\t\t\t                <label htmlFor=\"dropdown\">RECEIVED BY</label>\r\n\t\t\t                </span>\r\n\t\t\t            </div>\r\n\t\t\t            <div className=\"p-field p-col-12 p-md-6\">\r\n\t\t\t                <span className=\"p-float-label\">\r\n\t\t\t                <Dropdown\r\n\t\t\t                    value={process}\r\n\t\t\t                    onChange={this.onProcess}\r\n\t\t\t                    options={productionprocesses}\r\n\t\t\t                    filter={true}\r\n\t\t\t                    showClear={true}\r\n\t\t\t                    optionLabel=\"name\"\r\n\t\t\t                    optionValue=\"id\"\r\n\t\t\t                />\r\n\r\n\t\t\t                <label htmlFor=\"dropdown\">PRODUCTION PROCESS</label>\r\n\t\t\t                </span>\r\n\t\t\t            </div>\r\n                        <div className=\"p-field p-col-12 p-md-6\">\r\n                            <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                        </div>\r\n                        <table className=\"table\">\r\n                          <thead>\r\n                              <tr>\r\n                                <th>QUANTITY</th>\r\n                                <th>ITEM</th>\r\n\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              <ProcessedProductStockReceiptLine add={this.addNewRow} delete={this.clickOnDelete.bind(this)} lines={lines} />\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr><td colSpan=\"4\">\r\n                                    <Button onClick={this.addNewRow} type=\"button\" icon='pi pi-plus' className=\"p-button-warning\"/>\r\n                                </td></tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    employees: state.employees.employees,\r\n    productionprocesses: state.productionprocesses.productionprocesses,\r\n    warehouses: state.warehouses.warehouses,\r\n\r\n})\r\n\r\nexport default connect(\r\n\t\t\tmapStateToProps, \r\n\t\t\t{ addProcessedProductStockReceipt, getProductionProcesses, getWarehouses, getEmployees  })\r\n\t\t\t(ProcessedProductStockReceipt);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { GET_PROCESSES } from './types';\r\nimport { productionprocessesURL } from '../constants';\r\n\r\n\r\n// Get\r\nexport const getProductionProcesses = () => dispatch => {\r\n    axios.get(productionprocessesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESSES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}","import axios from 'axios';\r\nimport { ADD_PROCESSED_PRODUCT_STOCK_ADJUSTMENT, EDIT_PROCESSED_PRODUCT_STOCK_ADJUSTMENT, GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENTS, GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENT, DELETE_PROCESSED_PRODUCT_STOCK_ADJUSTMENT } from '../types/processedproductstockadjustmentTypes';\r\nimport { processedproductstockadjustmentsURL } from '../constants';\r\n\r\n// Get\r\nexport const getProcessedProductStockAdjustments=  () => dispatch => {\r\n    axios.get(processedproductstockadjustmentsURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENTS,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessedProductStockAdjustment = (id) => dispatch => {\r\n    axios.delete(processedproductstockadjustmentsURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESSED_PRODUCT_STOCK_ADJUSTMENT,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addProcessedProductStockAdjustment = processedproductstockadjustment => dispatch => {\r\n    axios.post(processedproductstockadjustmentsURL, processedproductstockadjustment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESSED_PRODUCT_STOCK_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessedProductStockAdjustment = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/processed-product-stock-adjustments/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESSED_PRODUCT_STOCK_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n\r\n//Edit\r\nexport const editProcessedProductStockAdjustment = (id, processedproductstockadjustment) => dispatch => {\r\n    axios.put(`http://127.0.0.1:8000/api/manufacture/processed-product-stock-adjustments/${id}/`, processedproductstockadjustment)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EDIT_PROCESSED_PRODUCT_STOCK_ADJUSTMENT,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n","import axios from 'axios';\r\nimport { ADD_PROCESSED_PRODUCT_STOCK_TAKE, GET_PROCESSED_PRODUCT_STOCK_TAKES, GET_PROCESSED_PRODUCT_STOCK_TAKE, DELETE_PROCESSED_PRODUCT_STOCK_TAKE } from '../types/processedproductstocktakeTypes';\r\nimport { processedproductstocktakesURL } from '../constants';\r\n\r\n// Get\r\nexport const getProcessedProductStockTakes=  () => dispatch => {\r\n    axios.get(processedproductstocktakesURL)\r\n        .then(res => {\r\n            dispatch({\r\n                type:  GET_PROCESSED_PRODUCT_STOCK_TAKES,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n//Delete\r\n\r\nexport const deleteProcessedProductStockTake = (id) => dispatch => {\r\n    axios.delete(processedproductstocktakesURL, id)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_PROCESSED_PRODUCT_STOCK_TAKE,\r\n                payload: id\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\n// Add\r\nexport const addProcessedProductStockTake = processedproductstocktake => dispatch => {\r\n    axios.post(processedproductstocktakesURL, processedproductstocktake)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_PROCESSED_PRODUCT_STOCK_TAKE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const getProcessedProductStockTake = id => dispatch =>{\r\n      axios.get(`http://127.0.0.1:8000/api/manufacture/processed-product-stock-takes/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PROCESSED_PRODUCT_STOCK_TAKE,\r\n                payload: res.data\r\n            });\r\n        }).catch(err => console.log(err))\r\n\r\n}\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport {Growl} from 'primereact/growl';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { getProcessedProductStockAdjustments, addProcessedProductStockAdjustment, editProcessedProductStockAdjustment, deleteProcessedProductStockAdjustment } from '..//../actions/processedproductstockadjustments';\r\nimport { getManufacturedStockItems } from '../../actions/manufacturedstockitems';\r\nimport { getProcessedProductStockTakes } from '../../actions/processedproductstocktakes';\r\nimport \"./form.css\";\r\n\r\nclass ProcessedProductStockAdjustments extends Component {\r\n\r\n    emptyProcessedProductStockAdjustment = {\r\n        warehouse_item: null,\r\n        adjustment: '',\r\n        note: '',\r\n        inventory_check: null\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processedproductstockadjustments : [],\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessedProductStockAdjustments: null,\r\n            processedproductstockadjustmentDialog: false,\r\n            deleteProcessedProductStockAdjustmentDialog: false,\r\n            deleteProcessedProductStockAdjustmentsDialog: false,\r\n            visibleNewDialog: false,\r\n            visibleEditDialog: false,\r\n            visibleDeleteDialog: false,\r\n            selectRow: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: '',\r\n                inventory_check: null\r\n            },\r\n            newData: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: '',\r\n                inventory_check: null\r\n            },\r\n            submitted: false,\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this);\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this);\r\n        this.formatDate = this.formatDate.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n\r\n        this.openNew = this.openNew.bind(this);\r\n        this.hideDialog = this.hideDialog.bind(this);\r\n        this.saveProcessedProductStockAdjustment = this.saveProcessedProductStockAdjustment.bind(this);\r\n        this.editProcessedProductStockAdjustment = this.editProcessedProductStockAdjustment.bind(this);\r\n        this.onOpenEditDialog = this.onOpenEditDialog.bind(this);\r\n        this.onHideEditDialog = this.onHideEditDialog.bind(this);\r\n        this.editDataValidateError = this.editDataValidateError.bind(this);\r\n        this.confirmDeleteProcessedProductStockAdjustment = this.confirmDeleteProcessedProductStockAdjustment.bind(this);\r\n        this.deleteProcessedProductStockAdjustment = this.deleteProcessedProductStockAdjustment.bind(this);\r\n        this.confirmDeleteSelected = this.confirmDeleteSelected.bind(this);\r\n        this.deleteSelectedProcessedProductStockAdjustments = this.deleteSelectedProcessedProductStockAdjustments.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.hideDeleteProcessedProductStockAdjustmentDialog = this.hideDeleteProcessedProductStockAdjustmentDialog.bind(this);\r\n        this.hideDeleteProcessedProductStockAdjustmentsDialog = this.hideDeleteProcessedProductStockAdjustmentsDialog.bind(this);\r\n        this.onWarehouseItem = this.onWarehouseItem.bind(this);\r\n        this.onInventoryCheck = this.onInventoryCheck.bind(this);\r\n    }\r\n\r\n    onWarehouseItem (e){\r\n        this.setState({warehouse_item: e.value})\r\n    }\r\n\r\n    onInventoryCheck (e){\r\n        this.setState({inventory_check: e.value})\r\n    }\r\n\r\n    static propTypes = {\r\n        processedproductstockadjustments : PropTypes.array.isRequired,\r\n        getProcessedProductStockAdjustments: PropTypes.func.isRequired,\r\n        getManufacturedStockItems: PropTypes.func.isRequired,\r\n        getProcessedProductStockTakes: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessedProductStockAdjustments();\r\n        this.props.getManufacturedStockItems();\r\n        this.props.getProcessedProductStockTakes();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    openNew() {\r\n        this.setState({\r\n            newData: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: '',\r\n                inventory_check: null\r\n            },\r\n            submitted: false,\r\n            processedproductstockadjustmentDialog: true\r\n        });\r\n    }\r\n\r\n    hideDialog() {\r\n        this.setState({\r\n            submitted: false,\r\n            processedproductstockadjustmentDialog: false\r\n        });\r\n    }\r\n\r\n    hideDeleteProcessedProductStockAdjustmentDialog() {\r\n        this.setState({ deleteProcessedProductStockAdjustmentDialog: false });\r\n    }\r\n\r\n    hideDeleteProcessedProductStockAdjustmentsDialog() {\r\n        this.setState({ deleteProcessedProductStockAdjustmentsDialog: false });\r\n    }\r\n\r\n    saveProcessedProductStockAdjustment = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            warehouse_item,\r\n            adjustment,\r\n            note,\r\n            inventory_check\r\n        } = this.state;\r\n        const processedproductstockadjustment = {\r\n            warehouse_item,\r\n            adjustment,\r\n            note,\r\n            inventory_check\r\n        };\r\n        this.props.addProcessedProductStockAdjustment(processedproductstockadjustment);\r\n        this.setState({\r\n            warehouse_item: null,\r\n            adjustment: '',\r\n            note: '',\r\n            inventory_check: null,\r\n            processedproductstockadjustmentDialog: false\r\n        });\r\n        this.props.history.push('/processedproductstockadjustments');\r\n    };\r\n\r\n\r\n    onHideEditDialog(event) {\r\n        this.setState({\r\n            visibleEditDialog: false,\r\n            selectRow: {\r\n                warehouse_item: null,\r\n                adjustment: '',\r\n                note: '',\r\n                inventory_check: null\r\n            }\r\n        });\r\n    }\r\n\r\n    //Edit Dialog\r\n    onOpenEditDialog(event, rowData) {\r\n        this.setState({\r\n            visibleEditDialog: true,\r\n            selectRow: rowData\r\n        });\r\n    }\r\n\r\n    editProcessedProductStockAdjustment(e) {\r\n        const errors = this.editDataValidateError();\r\n        const {\r\n            warehouse_item,\r\n            adjustment,\r\n            note,\r\n            inventory_check\r\n        } = this.state.selectRow;\r\n        const processedproductstockadjustment = {\r\n            warehouse_item,\r\n            adjustment,\r\n            note,\r\n            inventory_check\r\n        };\r\n        if (errors.length !== 0) {\r\n            this.growl.show(errors);\r\n        } else {\r\n            this.props.editProcessedProductStockAdjustment(this.state.selectRow.id, processedproductstockadjustment);\r\n            this.onHideEditDialog(e);\r\n            this.growl.show({severity: 'success', summary: 'Succesfully', detail: 'Edited'});\r\n        }\r\n    }\r\n\r\n    editDataValidateError() {\r\n        const errorList = [];\r\n        if (!this.state.selectRow.name) {\r\n            errorList.push({\r\n                severity: 'error',\r\n                summary: 'cant be left blank!',\r\n                detail: 'Add'\r\n            });\r\n        }\r\n        return errorList;\r\n    }\r\n\r\n    confirmDeleteProcessedProductStockAdjustment(processedproductstockadjustment) {\r\n        this.setState({\r\n            processedproductstockadjustment,\r\n            deleteProcessedProductStockAdjustmentDialog: true\r\n        });\r\n    }\r\n\r\n    deleteProcessedProductStockAdjustment() {\r\n        this.props.deleteProcessedProductStockAdjustment();\r\n        this.setState({\r\n            deleteProcessedProductStockAdjustmentDialog: false,\r\n            processedproductstockadjustment: this.emptyProcessedProductStockAdjustment\r\n        });\r\n    }\r\n\r\n    confirmDeleteSelected() {\r\n        this.setState({ deleteProcessedProductStockAdjustmentsDialog: true });\r\n    }\r\n\r\n    deleteSelectedProcessedProductStockAdjustments() {\r\n        this.props.deleteProcessedProductStockAdjustment();\r\n        this.setState({\r\n            deleteProcessedProductStockAdjustmentsDialog: false,\r\n            selectedProcessedProductStockAdjustments: null\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Processed Product Stock Adjustment</h1>\r\n                <div className=\"datatable-icons\">\r\n                    <div className=\"h\"><FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} label=\"Import\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\" /></div>\r\n                    <div className=\"fancy-icon\"><Button label=\"EXPORT TO CSV\" icon=\"pi pi-upload\" className=\"p-button-rounded p-button-help\" onClick={this.export} /></div>\r\n                    <Button label=\"CREATE NEW PROCESSED PRODUCT STOCK ADJUSTMENT\" className=\"p-button-success p-mr-2\" onClick={this.openNew} />\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"EXPORT TO PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate(rowData) {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"button\"\r\n                    icon=\"pi pi-pencil\"\r\n                    className=\"p-button-success\"\r\n                    style={{marginRight: '.5em', fontSize: '12px'}}\r\n                    onClick={(e) => {\r\n                        this.onOpenEditDialog(e, rowData);\r\n                    }}>\r\n                </Button>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => this.confirmDeleteProcessedProductStockAdjustment(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n    render() {\r\n        const processedproductstockadjustmentDialogFooter = (\r\n            <>\r\n                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={this.hideDialog} />\r\n                <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={this.saveProcessedProductStockAdjustment} />\r\n            </>\r\n        );\r\n\r\n        const editDialogFooter = (\r\n            <div>\r\n\r\n                <Button label=\"Cancel\" className=\"p-button-danger\" icon=\"pi pi-times\" onClick={this.onHideEditDialog}/>\r\n                <Button label=\"Save\" className=\"p-button-success\" icon=\"pi pi-check\" onClick={this.editProcessedProductStockAdjustment}/>\r\n            </div>\r\n        );\r\n\r\n        const header = this.renderHeader();\r\n        const {\r\n          warehouse_item,\r\n          adjustment,\r\n          note,\r\n          inventory_check\r\n        } = this.state;\r\n\r\n        const { manufacturedstockitems } = this.props;\r\n        const { processedproductstocktakes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Growl ref={(el) => this.growl = el}/>\r\n                <div className=\"datatable-doc-demo\">\r\n                    <DataTable ref={(el) => this.dt = el} value={this.props.processedproductstockadjustments}\r\n                        style={{backgroundColor: '#4EB08E'}}\r\n                        header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                        selection={this.state.selectedProcessedProductStockAdjustments} onSelectionChange={e => this.setState({selectedProcessedProductStockAdjustments: e.value})}\r\n                        paginator rows={10} emptyMessage=\"No Processed Product Stock Adjustments found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            selectionMode=\"multiple\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"id\" header=\"ID\"\r\n                            sortable filter filterPlaceholder=\"Search by ID\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"warehouse_item\"\r\n                            header=\"Warehouse Item\"\r\n                            sortable filter filterPlaceholder=\"Search by Warehouse Item\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"adjustment\"\r\n                            header=\"Adjustment\"\r\n                            sortable filter filterPlaceholder=\"Search by Adjustment\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"inventory_check\"\r\n                            header=\"Inventory Check\"\r\n                            sortable filter filterPlaceholder=\"Search by Inventory Check\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"adjustment_value\"\r\n                            header=\"Adjustment Value\"\r\n                            sortable filter filterPlaceholder=\"Search by Adjustment Value\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"prev_quantity\"\r\n                            header=\"Prev Quantity\"\r\n                            sortable filter filterPlaceholder=\"Search by Prev Quantity\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            field=\"reference_number\"\r\n                            header=\"Reference Number\"\r\n                            sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                            style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                        <Column\r\n                            className=\"table-field\"\r\n                            header=\"EDIT\"\r\n                            body={this.actionBodyTemplate}\r\n                            headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                            bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                        />\r\n                    </DataTable>\r\n                    <Dialog\r\n                        visible={this.state.processedproductstockadjustmentDialog}\r\n                        style={{ width: '900px' }}\r\n                        header=\" Create Processed Product Stock Adjustment\"\r\n                        modal\r\n                        className=\"p-fluid\"\r\n                        footer={processedproductstockadjustmentDialogFooter}\r\n                        onHide={this.hideDialog}\r\n                    >\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <label>Adjustment</label>\r\n                                <InputNumber\r\n                                    name=\"adjustment\"\r\n                                    onChange={this.onChange}\r\n                                    value={adjustment}\r\n                                    showButtons\r\n                                    buttonLayout=\"horizontal\"\r\n                                    decrementButtonClassName=\"p-button-danger\"\r\n                                    incrementButtonClassName=\"p-button-success\"\r\n                                    incrementButtonIcon=\"pi pi-plus\"\r\n                                    decrementButtonIcon=\"pi pi-minus\"\r\n                                    step={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-12\">\r\n                                <span className=\"p-float-label\">\r\n                                    <InputTextarea\r\n                                        name=\"note\"\r\n                                        onChange={this.onChange}\r\n                                        value={note}\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">Note</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={warehouse_item}\r\n                                        onChange={this.onWarehouseItem}\r\n                                        options={manufacturedstockitems}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"item\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT WAREHOUSE ITEM</label>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"p-field p-col-12 p-md-6\">\r\n                                <span className=\"p-float-label\">\r\n                                    <Dropdown\r\n                                        value={inventory_check}\r\n                                        onChange={this.onInventoryCheck}\r\n                                        options={processedproductstocktakes}\r\n                                        filter={true}\r\n                                        filterBy=\"id,name\"\r\n                                        showClear={true}\r\n                                        optionLabel=\"reference_number\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                    <label htmlFor=\"inputtext\">SELECT INVENTORY CHECK</label>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </Dialog>\r\n                    <Dialog\r\n                        header=\"UPDATE PROCESSED PRODUCT STOCK ADJUSTMENT\"\r\n                        footer={editDialogFooter}\r\n                        visible={this.state.visibleEditDialog}\r\n                        className=\"p-fluid\"\r\n                        style ={{ width: '700px'}}\r\n                        modal={true}\r\n                        onHide={this.onHideEditDialog}\r\n                    >\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inAdjustment\">Adjustment </label>\r\n                            <InputNumber\r\n                                id=\"inAdjustment\"\r\n                                value={this.state.selectRow.adjustment}\r\n                                style={{marginLeft: '.5em'}}\r\n                                mode=\"decimal\"\r\n                                showButtons\r\n                                buttonLayout=\"horizontal\"\r\n                                decrementButtonClassName=\"p-button-danger\"\r\n                                incrementButtonClassName=\"p-button-success\"\r\n                                incrementButtonIcon=\"pi pi-plus\"\r\n                                decrementButtonIcon=\"pi pi-minus\"\r\n                                step={1}\r\n                                onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        adjustment: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <label htmlFor=\"inNote\">Note </label>\r\n                            <InputTextarea id=\"inNote\" value={this.state.selectRow.note}\r\n                                       style={{marginLeft: '.5em'}} onChange={(e) =>\r\n                                this.setState({\r\n                                    selectRow: {\r\n                                        ...this.state.selectRow,\r\n                                        note: e.target.value\r\n                                    }\r\n                                })\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inWarehouseItem\"\r\n                                value={this.state.selectRow.warehouse_item}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            warehouse_item: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={manufacturedstockitems}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"p-field p-col-12 p-md-12\">\r\n                            <span className=\"p-float-label\">\r\n                            <Dropdown\r\n                                id=\"inInventoryCheck\"\r\n                                value={this.state.selectRow.inventory_check}\r\n                                onChange={(e) => this.setState({\r\n                                        selectRow: {\r\n                                            ...this.state.selectRow,\r\n                                            inventory_check: e.target.value\r\n                                        }\r\n                                    })\r\n                                }\r\n                                options={processedproductstocktakes}\r\n                                filter={true}\r\n                                filterBy=\"id,name\"\r\n                                showClear={true}\r\n                                optionLabel=\"reference_number\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            </span>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processedproductstockadjustments: state.processedproductstockadjustments.processedproductstockadjustments,\r\n    processedproductstocktakes: state.processedproductstocktakes.processedproductstocktakes,\r\n    manufacturedstockitems: state.manufacturedstockitems.manufacturedstockitems,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getProcessedProductStockAdjustments,\r\n        addProcessedProductStockAdjustment,\r\n        deleteProcessedProductStockAdjustment,\r\n        editProcessedProductStockAdjustment,\r\n        getManufacturedStockItems,\r\n        getProcessedProductStockTakes\r\n    }) (ProcessedProductStockAdjustments);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProcessedProductStockAdjustment } from '../../actions/processedproductstockadjustments';\r\nimport { getManufacturedStockItems } from '../../actions/manufacturedstockitems';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\n\r\n\r\n\r\nexport class ProcessedProductStockAdjustmentForm extends Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        warehouse_item: null,\r\n        adjustment: '',\r\n        note: '',\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onWarehouseItem = this.onWarehouseItem.bind(this);\r\n    }\r\n\r\n    onWarehouseItem (e){\r\n      this.setState({warehouse_item: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        warehouse_item,\r\n        adjustment,\r\n        note,\r\n      } = this.state;\r\n      const processedproductstockadjustment = {\r\n        warehouse_item,\r\n        adjustment,\r\n        note,\r\n      };\r\n      this.props.addProcessedProductStockAdjustment(processedproductstockadjustment);\r\n      this.setState({\r\n        warehouse_item: '',\r\n        adjustment: '',\r\n        note: '',\r\n      });\r\n      this.props.history.push('/processedproductstockadjustments');\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcessedProductStockAdjustment: PropTypes.func.isRequired,\r\n        getManufacturedStockItems: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.getManufacturedStockItems()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {\r\n          warehouse_item,\r\n          adjustment,\r\n          note,\r\n        } = this.state;\r\n\r\n        const { manufacturedstockitems } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Add Processed Product Stock Adjustment</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>Note</label>\r\n                    <InputTextarea\r\n                      name=\"note\"\r\n                      onChange={this.onChange}\r\n                      value={note}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>Adjustment</label>\r\n                    <InputNumber\r\n                      name=\"adjustment\"\r\n                      onChange={this.onChange}\r\n                      value={adjustment}\r\n                      showButtons\r\n                      buttonLayout=\"horizontal\"\r\n                      decrementButtonClassName=\"p-button-danger\"\r\n                      incrementButtonClassName=\"p-button-success\"\r\n                      incrementButtonIcon=\"pi pi-plus\"\r\n                      decrementButtonIcon=\"pi pi-minus\"\r\n                      step={1}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT WAREHOUSE ITEM\"\r\n                      value={warehouse_item}\r\n                      onChange={this.onWarehouseItem}\r\n                      options={manufacturedstockitems}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"name\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                  </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    manufacturedstockitems: state.manufacturedstockitems.manufacturedstockitems,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getManufacturedStockItems, addProcessedProductStockAdjustment })(ProcessedProductStockAdjustmentForm);\r\n","import 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {Calendar} from 'primereact/calendar';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\nimport { getProcessedProductStockTakes} from '..//../actions/processedproductstocktakes';\r\nimport \"./form.css\";\r\n\r\n\r\nclass ProcessedProductStockTakes extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            processedproductstocktakes : null,\r\n            globalFilter: null,\r\n            dateFilter: null,\r\n            selectedProcessedProductStockTakes: null,\r\n\r\n        };\r\n\r\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this);\r\n        this.filterDate = this.filterDate.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.renderDateFilter = this.renderDateFilter.bind(this)\r\n        this.onDateFilterChange = this.onDateFilterChange.bind(this)\r\n        this.formatDate = this.formatDate.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        processedproductstocktakes : PropTypes.array.isRequired,\r\n        getProcessedProductStockTakes: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getProcessedProductStockTakes();\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div className=\"table-head\">\r\n                <h1>Manage Processed Product Stock Takes</h1>\r\n                <div className=\"datatable-fancy-icons\">\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-pdf\" iconPos=\"right\" label=\"PDF\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-file-excel\" iconPos=\"right\" label=\"CSV\" onClick={this.export}></Button></div>\r\n                    <div className=\"fancy-icon\"><Button type=\"button\" className=\"p-button-warning p-button-rounded\" icon=\"pi pi-print\" iconPos=\"right\" label=\"PRINT\" onClick={this.export}></Button></div>\r\n                    <InputText className=\"fancy-icon\" type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Search\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    activityBodyTemplate(rowData) {\r\n        return <ProgressBar value={rowData.activity} showValue={false} />;\r\n    }\r\n\r\n    actionBodyTemplate() {\r\n        return (\r\n            <Link to=\"/\" >\r\n                <Button type=\"button\" label=\"VIEW-ME\" icon=\"pi pi-pencil\" className=\"p-button-warning p-button-rounded\"></Button>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n\r\n    renderDateFilter() {\r\n        return (\r\n            <Calendar value={this.state.dateFilter} onChange={this.onDateFilterChange} placeholder=\"Registration Date\" dateFormat=\"yy-mm-dd\" className=\"p-column-filter\" />\r\n        );\r\n    }\r\n\r\n    onDateFilterChange(event) {\r\n        if (event.value !== null)\r\n            this.dt.filter(this.formatDate(event.value), 'date', 'equals');\r\n        else\r\n            this.dt.filter(null, 'date', 'equals');\r\n\r\n        this.setState({dateFilter: event.value});\r\n    }\r\n\r\n    filterDate(value, filter) {\r\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n            return true;\r\n        }\r\n\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n\r\n        return value === this.formatDate(filter);\r\n    }\r\n\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    formatDate(date) {\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        if (month < 10) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        if (day < 10) {\r\n            day = '0' + day;\r\n        }\r\n\r\n        return date.getFullYear() + '-' + month + '-' + day;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const header = this.renderHeader();\r\n\r\n        return (\r\n            <div className=\"datatable-doc-demo\">\r\n                <DataTable ref={(el) => this.dt = el} value={this.props.processedproductstocktakes}\r\n                    style={{backgroundColor: '#4EB08E'}}\r\n                    header={header} responsive className=\"table-head\" dataKey=\"id\" rowHover globalFilter={this.state.globalFilter}\r\n                    selection={this.state.selectedProcessedProductStockTakes} onSelectionChange={e => this.setState({selectedProcessedProductStockTakes: e.value})}\r\n                    paginator rows={10} emptyMessage=\"No Processed Product Stock Takes found\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" rowsPerPageOptions={[10,25,50]}>\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        selectionMode=\"multiple\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"id\" header=\"ID\"\r\n                        sortable filter filterPlaceholder=\"Search by ID\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"adjusted_by\"\r\n                        header=\"Adjusted By\"\r\n                        sortable filter filterPlaceholder=\"Search by Adjusted By\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"reference_number\"\r\n                        header=\"Reference Number\"\r\n                        sortable filter filterPlaceholder=\"Search by Reference Number\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"warehouse\"\r\n                        header=\"Warehouse\"\r\n                        sortable filter filterPlaceholder=\"Search by Warehouse\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        field=\"value_of_all_adjustments\"\r\n                        header=\"Value Of All Adjustments\"\r\n                        sortable filter filterPlaceholder=\"Search by Value Of All Adjustments\"\r\n                        style={{width:'3em', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                    <Column\r\n                        className=\"table-field\"\r\n                        header=\"EDIT\"\r\n                        body={this.actionBodyTemplate}\r\n                        headerStyle={{width: '3em', textAlign: 'center', backgroundColor: '#4EB0A5'}}\r\n                        bodyStyle={{textAlign: 'center', overflow: 'visible', backgroundColor: '#4EB0A5'}}\r\n                    />\r\n                </DataTable>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    processedproductstocktakes: state.processedproductstocktakes.processedproductstocktakes\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProcessedProductStockTakes} ) (ProcessedProductStockTakes);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProcessedProductStockTake } from '../../actions/processedproductstocktakes';\r\nimport { getWarehouses } from '../../actions/warehouses';\r\nimport { getEmployees } from '../../actions/employees';\r\nimport PropTypes from 'prop-types';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\nimport 'primeflex/primeflex.css';\r\nimport {Button} from 'primereact/button';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {Calendar} from \"primereact/calendar\";\r\n\r\n\r\nexport class ProcessedProductStockTakeForm extends Component{\r\n    constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        date: '',\r\n        adjusted_by: null,\r\n        warehouse: null,\r\n        comments: '',\r\n      }\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.onAdjustedBy = this.onAdjustedBy.bind(this);\r\n      this.onWarehouse = this.onWarehouse.bind(this);\r\n    }\r\n\r\n    onAdjustedBy (e){\r\n      this.setState({adjusted_by: e.value})\r\n    }\r\n\r\n    onWarehouse (e){\r\n      this.setState({warehouse: e.value})\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        date,\r\n        adjusted_by,\r\n        warehouse,\r\n        comments,\r\n      } = this.state;\r\n      const processedproductstocktake = {\r\n        date,\r\n        adjusted_by,\r\n        warehouse,\r\n        comments,\r\n      };\r\n      this.props.addProcessedProductStockTake(processedproductstocktake);\r\n      this.setState({\r\n        date: '',\r\n        adjusted_by: '',\r\n        warehouse: '',\r\n        comments: '',\r\n      });\r\n      this.props.history.push('/processedproductstocktakes');\r\n    };\r\n\r\n    static propTypes = {\r\n        addProcessedProductStockTake: PropTypes.func.isRequired,\r\n        getWarehouses: PropTypes.func.isRequired,\r\n        getEmployees: PropTypes.func.isRequired,\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.getWarehouses()\r\n      this.props.getEmployees()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {\r\n          date,\r\n          adjusted_by,\r\n          warehouse,\r\n          comments,\r\n        } = this.state;\r\n\r\n        const { warehouses } = this.props;\r\n        const { employees } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-body mt-4 mb-4\">\r\n              <h2>Add Processed Product Stock Take</h2>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                    <label>Comments</label>\r\n                    <InputTextarea\r\n                      name=\"comments\"\r\n                      onChange={this.onChange}\r\n                      value={comments}\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-12\">\r\n                  <label>Date</label>\r\n                      <Calendar\r\n                        showIcon={true}\r\n                        className=\"form-control\"\r\n                        name=\"date\"\r\n                        onChange={this.onChange}\r\n                        value={date}\r\n                        dateFormat=\"yy-mm-dd\"\r\n                      />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT ADJUSTED BY\"\r\n                      value={adjusted_by}\r\n                      onChange={this.onAdjustedBy}\r\n                      options={employees}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"id_number\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Dropdown\r\n                      placeholder =\"SELECT WAREHOUSE\"\r\n                      value={warehouse}\r\n                      onChange={this.onWarehouse}\r\n                      options={warehouses}\r\n                      filter={true}\r\n                      filterBy=\"id,name\"\r\n                      showClear={true}\r\n                      optionLabel=\"name\"\r\n                      optionValue=\"id\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"p-field p-col-12 p-md-6\">\r\n                    <Button label=\"Submit\" className=\"p-button-success p-button-rounded\" />\r\n                  </div>\r\n                </div>\r\n             </form>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    warehouses: state.warehouses.warehouses,\r\n    employees: state.employees.employees\r\n})\r\n\r\nexport default connect(mapStateToProps, { getWarehouses, getEmployees, addProcessedProductStockTake })(ProcessedProductStockTakeForm);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { withAlert } from 'react-alert';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Alerts extends Component {\r\n  static propTypes = {\r\n    error: PropTypes.object.isRequired,\r\n    message: PropTypes.object.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, alert, message } = this.props;\r\n    if (error !== prevProps.error) {\r\n\r\n      if (error.msg.name) alert.error(`Name: ${error.msg.name.join()}`);\r\n      if (error.msg.rate) alert.error(`Rate: ${error.msg.rate.join()}`);\r\n      if (error.msg.symbol) alert.error(`Symbol: ${error.msg.symbol.join()}`);\r\n      if (error.msg.id) alert.error(`ID: ${error.msg.id.join()}`);\r\n      if (error.msg.account_type) alert.error(`Accouttype: ${error.msg.account_type.join()}`);\r\n      if (error.msg.description) alert.error(`Description: ${error.msg.description.join()}`);\r\n      if (error.msg.initial_balance) alert.error(`Initial Balance: ${error.msg.initial_balance.join()}`);\r\n      if (error.msg.is_active) alert.error(`Is Active: ${error.msg.is_active.join()}`);\r\n      if (error.msg.is_contra) alert.error(`Is Contra: ${error.msg.is_contra.join()}`);\r\n      if (error.msg.order) alert.error(`Order: ${error.msg.order.join()}`);\r\n      if (error.msg.memo) alert.error(`Memo: ${error.msg.memo.join()}`);\r\n      if (error.msg.vendor) alert.error(`Vendor: ${error.msg.vendor.join()}`);\r\n      if (error.msg.date) alert.error(`Date: ${error.msg.date.join()}`);\r\n      if (error.msg.due) alert.error(`Due: ${error.msg.due.join()}`);\r\n      if (error.msg.debit_account) alert.error(`Debit-Account: ${error.msg.debit_account.join()}`);\r\n      if (error.msg.amount) alert.error(`Amount: ${error.msg.amount.join()}`);\r\n      if (error.msg.reference) alert.error(`Reference: ${error.msg.reference.join()}`);\r\n      if (error.msg.pricing_method) alert.error(`Pricing-Method: ${error.msg.pricing_method.join()}`);\r\n      if (error.msg.direct_price) alert.error(`DirectPrice: ${error.msg.direct_price.join()}`);\r\n      if (error.msg.margin) alert.error(`Margin: ${error.msg.margin.join()}`);\r\n      if (error.msg.markup) alert.error(`Markup: ${error.msg.markup.join()}`);\r\n      if (error.msg.sku) alert.error(`SKU: ${error.msg.sku.join()}`);\r\n      if (error.msg.quantity) alert.error(`Quantity: ${error.msg.quantity.join()}`);\r\n      if (error.msg.product) alert.error(`Product: ${error.msg.product.join()}`);\r\n      if (error.msg.review_needed) alert.error(`Reviewed-Needed: ${error.msg.review_needed.join()}`);\r\n      if (error.msg.category) alert.error(`Category: ${error.msg.category.join()}`);\r\n      if (error.msg.location) alert.error(`Location: ${error.msg.location.join()}`);\r\n      if (error.msg.updated) alert.error(`Updated: ${error.msg.updated.join()}`);\r\n      if (error.msg.status) alert.error(`Status: ${error.msg.status.join()}`);\r\n      if (error.msg.notes) alert.error(`NOTES: ${error.msg.notes.join()}`);\r\n      if (error.msg.product_component) alert.error(`PRODUCT-COMPONENT: ${error.msg.product_component.join()}`);\r\n      if (error.msg.minimum_order_level) alert.error(`MANIMUM-ORDER-LEVEL: ${error.msg.minimum_order_level.join()}`);\r\n      if (error.msg.maximum_stock_level) alert.error(`MAXIMUM-STOCK-LEVEL: ${error.msg.maximum_stock_leve.join()}`);\r\n      if (error.msg.lines) alert.error(`LINES: ${error.msg.lines.join()}`);\r\n      if (error.msg.items) alert.error(`ITEMS: ${error.msg.items.join()}`);\r\n      if (error.msg.customer) alert.error(`CUSTOMER: ${error.msg.customer.join()}`);\r\n      if (error.msg.purchase_order_number) alert.error(`PURCHASE-ORDER-NUMBER: ${error.msg.purchase_order_number.join()}`);\r\n      if (error.msg.validated_by) alert.error(`INVOICE-VALIDATOR: ${error.msg.validated_by.join()}`);\r\n      if (error.msg.draft) alert.error(`Draft: ${error.msg.draft.join()}`);\r\n      if (error.msg.cashier) alert.error(`SALES PERSON: ${error.msg.cashier.join()}`);\r\n      if (error.msg.terms) alert.error(`TERMS: ${error.msg.terms.join()}`);\r\n      if (error.msg.comments) alert.error(`COMMENTS: ${error.msg.comments.join()}`);\r\n      if (error.msg.ship_from) alert.error(`SHIP FROM: ${error.msg.ship_from.join()}`);\r\n      if (error.msg.validated_by) alert.error(`VALIDATED BY: ${error.msg.validated_by.join()}`);\r\n      if (error.msg.expected_receipt_date) alert.error(`EXPECTED DATE: ${error.msg.expected_receipt_date.join()}`);\r\n      if (error.msg.supplier) alert.error(`SUPPLIER: ${error.msg.supplier.join()}`);\r\n      if (error.msg.entries) alert.error(`ENTRIES: ${error.msg.entries.join()}`);\r\n      if (error.msg.shipping_cost_entries) alert.error(`SHIPPING ENTRIES: ${error.msg.shipping_cost_entries.join()}`);\r\n      if (error.msg.ship_to) alert.error(`SHIP TO: ${error.msg.ship_to.join()}`);\r\n      // if (error.msg.notes) alert.error(`NOTES: ${error.msg.notes.join()}`);\r\n      if (error.msg.issuing_inventory_controller) alert.error(`STAFF: ${error.msg.issuing_inventory_controller.join()}`);\r\n      if (error.msg.tax) alert.error(`TAX: ${error.msg.tax.join()}`);\r\n\r\n      if (error.msg.type) alert.error(`TYPE: ${error.msg.type.join()}`);\r\n      if (error.msg.unit) alert.error(`UNIT: ${error.msg.unit.join()}`);\r\n      if (error.msg.finished_goods) alert.error(`FINISHED GOODS: ${error.msg.finished_goods.join()}`);\r\n      if (error.msg.inventory_product) alert.error(`INVENTORY PRODUCT: ${error.msg.inventory_product.join()}`);\r\n      if (error.msg.product_list) alert.error(`PRODUCT LIST: ${error.msg.product_list.join()}`);\r\n      if (error.msg.non_field_errors) alert.error(error.msg.non_field_errors.join());\r\n    }\r\n\r\n    if (message !== prevProps.message) {\r\n      if (message.taxDeleted) alert.success(message.taxDeleted);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Fragment />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.errors,\r\n  message: state.messages,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withAlert()(Alerts));\r\n","import React, {Component, Fragment} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport { Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport './App.css';\r\nimport Home from './components/Home/Home';\r\nimport Default from './components/Home/Default';\r\nimport Content from \"./dashboard/Content\";\r\nimport Dashboard from './dashboard/components/Dashboard';\r\n\r\n//accounts\r\nimport AccountingConfigurationForm from './accounts/accountingconfiguration/AccountingConfigurationForm';\r\n\r\nimport Taxes from './accounts/taxes/Taxes';\r\n\r\nimport Journals from './accounts/journals/Journals';\r\n\r\nimport Assets from './accounts/assets/Assets';\r\n\r\nimport Currencies from './accounts/currencies/Currencies';\r\n\r\nimport Accounts from './accounts/accounts/Accounts';\r\n\r\nimport InterestBearingAccounts from './accounts/interestbearingaccounts/InterestBearingAccounts';\r\n\r\nimport BillPayments from './accounts/billpayments/BillPayments';\r\n\r\nimport Ledgers from './accounts/ledgers/Ledgers';\r\n\r\nimport AccountingPosts from './accounts/accountingposts/AccountingPosts';\r\n\r\nimport Workbooks from './accounts/workbooks/Workbooks';\r\n\r\nimport AccountingAdjustments from './accounts/accountingadjustments/AccountingAdjustments';\r\n\r\nimport Debits from './accounts/debits/Debits';\r\n\r\nimport Credits from './accounts/credits/Credits';\r\n\r\nimport FullyPaidNotVerifiedBills from './accounts/fullypaidnotverifiedbills/FullyPaidNotVerifiedBills';\r\n\r\nimport FullyPaidBills from './accounts/fullypaidbills/FullyPaidBills';\r\n\r\nimport UnpostedAndUnadjustedJournalEntries from './accounts/unpostedandunadjustedjournalentries/UnpostedAndUnadjustedJournalEntries';\r\n\r\nimport UnadjustedJournalEntries from './accounts/unadjustedjournalentries/UnadjustedJournalEntries';\r\n\r\nimport UnpostedJournalEntries from './accounts/unpostedjournalentries/UnpostedJournalEntries';\r\n\r\nimport PostedJournalEntries from './accounts/postedjournalentries/PostedJournalEntries';\r\n\r\nimport InActiveAccounts from './accounts/inactiveaccounts/InActiveAccounts';\r\n\r\nimport Bills from './accounts/bills/Bills';\r\nimport BillForm from './accounts/bills/BillForm';\r\n\r\n//customers\r\nimport DeactivatedCustomers from './customers/deactivatedcustomers/DeactivatedCustomers';\r\n\r\nimport CustomerAddresses from './customers/customeraddresses/CustomerAddresses';\r\n\r\nimport ActiveCustomers from './customers/activecustomers/ActiveCustomers';\r\n\r\n//employees\r\nimport EmployeePayrollSchedules from './employees/employeepayrollschedules/EmployeePayrollSchedules';\r\n\r\nimport Employees from './employees/employees/Employees';\r\nimport EmployeeForm from './employees/employees/EmployeeForm';\r\n\r\nimport CompanyShareholders from './employees/companyshareholders/CompanyShareholders';\r\n\r\nimport CompanyManagers from './employees/companymanagers/CompanyManagers';\r\n\r\nimport CompanyBookkeepers from './employees/companybookkeepers/CompanyBookkeepers';\r\n\r\nimport CompanyPayrollOfficers from './employees/companypayrollofficers/CompanyPayrollOfficers';\r\n\r\nimport CompanyDrivers from './employees/companydrivers/CompanyDrivers';\r\n\r\nimport CompanyManufacturingPersonells from './employees/companymanufacturingpersonells/CompanyManufacturingPersonells';\r\n\r\nimport CompanyInventoryControllers from './employees/companyinventorycontrollers/CompanyInventoryControllers';\r\n\r\nimport CompanySalesreps from './employees/companysalesreps/CompanySalesreps';\r\n\r\nimport PendingEmployeeLeaves from './employees/pendingemployeeleaves/PendingEmployeeLeaves';\r\n\r\nimport AuthorisedEmployeeLeaves from './employees/authorisedemployeeleaves/AuthorisedEmployeeLeaves';\r\n\r\nimport DeclinedEmployeeLeaves from './employees/declinedemployeeleaves/DeclinedEmployeeLeaves';\r\n\r\nimport EmployeeContracts from './employees/employeecontracts/EmployeeContracts';\r\n\r\nimport EmployeeContractsTerminations from './employees/employeecontractsterminations/EmployeeContractsTerminations';\r\n\r\nimport EmployeeDepartments from './employees/employeedepartments/EmployeeDepartments';\r\n\r\nimport EmployeeLeaves from './employees/employeeleaves/EmployeeLeaves';\r\n\r\nimport EmployeePaygrades from './employees/employeepaygrades/EmployeePaygrades';\r\n\r\nimport EmployeeAllowances from './employees/employeeallowances/EmployeeAllowances';\r\n\r\nimport EmployeePayDeductions from './employees/employeepaydeductions/EmployeePayDeductions';\r\n\r\nimport EmployeePayCommissionRules from './employees/employeepaycommissionrules/EmployeePayCommissionRules';\r\n\r\nimport EmployeePayrollTaxes from './employees/employeepayrolltaxes/EmployeePayrollTaxes';\r\n\r\nimport EmployeePayrollDates from './employees/employeepayrolldates/EmployeePayrollDates';\r\n\r\nimport EmployeePayslips from './employees/employeepayslips/EmployeePayslips';\r\n\r\nimport EmployeeConfigForm from './employees/employeeconfig/EmployeeConfigForm';\r\n\r\nimport EmployeeAttendanceTimesheets from './employees/employeeattendancetimesheets/EmployeeAttendanceTimesheets';\r\n\r\n//events\r\nimport EventConfigForm from './events/eventconfig/EventConfigForm';\r\n\r\nimport UpcomingEvents from './events/upcomingevents/UpcomingEvents';\r\n\r\nimport CompletedEvents from './events/completedevents/CompletedEvents';\r\n\r\n//inventory\r\nimport InventoryCategories from './inventory/inventorycategories/InventoryCategories';\r\n\r\nimport DebitNotes from './inventory/debitnotes/DebitNotes';\r\nimport DebitNoteForm from './inventory/debitnotes/DebitNoteForm';\r\n\r\nimport InventoryOrders from './inventory/inventoryorders/InventoryOrders';\r\nimport InventoryOrderForm from './inventory/inventoryorders/InventoryOrderForm';\r\n\r\nimport InventoryOrderpayments from './inventory/inventoryorderpayments/InventoryOrderpayments';\r\n\r\nimport Warehouses from './inventory/warehouses/Warehouses';\r\n\r\nimport InventoryStockItems from './inventory/inventorystockitems/InventoryStockItems';\r\n\r\nimport StorageMedias from './inventory/storagemedias/StorageMedias';\r\n\r\nimport InventoryReceipts from './inventory/inventoryreceipts/InventoryReceipts';\r\n\r\nimport StockAdjustments from './inventory/stockadjustments/StockAdjustments';\r\n\r\nimport InventoryStockTakes from './inventory/inventorystocktakes/InventoryStockTakes';\r\n\r\nimport ActiveSuppliers from './inventory/activesuppliers/ActiveSuppliers';\r\n\r\nimport DeActivedSuppliers from './inventory/deactivedsuppliers/DeActivedSuppliers';\r\n\r\nimport SupplierAddresses from './inventory/supplieraddresses/SupplierAddresses';\r\n\r\nimport RawMaterials from './inventory/rawmaterials/RawMaterials';\r\n\r\nimport Equipments from './inventory/equipments/Equipments';\r\n\r\nimport Consumables from './inventory/consumables/Consumables';\r\n\r\nimport FullyReceivedAndTotalPaidForOrders from './inventory/fullyreceivedandtotalpaidfororders/FullyReceivedAndTotalPaidForOrders';\r\n\r\nimport FullyReceivedTotalPaidForAndVerifiedOrders from './inventory/fullyreceivedtotalpaidforandverifiedorders/FullyReceivedTotalPaidForAndVerifiedOrders';\r\n\r\n//invoicing\r\nimport CreditNotes from './invoicing/creditnotes/CreditNotes';\r\n\r\nimport Payments from './invoicing/payments/Payments';\r\n\r\nimport Receipts from './invoicing/receipts/Receipts';\r\n\r\nimport InvoiceLines from './invoicing/invoicelines/InvoiceLines';\r\n\r\nimport SalesGroupsPricingDiscounts from './invoicing/salesgroupspricingdiscounts/SalesGroupsPricingDiscounts';\r\nimport SalesGroupsPricingDiscountForm from './invoicing/salesgroupspricingdiscounts/SalesGroupsPricingDiscountForm';\r\n\r\nimport Quotations from './invoicing/quotations/Quotations';\r\n\r\nimport UnverifiedInvoices from './invoicing/unverifiedinvoices/UnverifiedInvoices';\r\n\r\nimport OverdueInvoices from './invoicing/overdueinvoices/OverdueInvoices';\r\n\r\nimport VoidedInvoices from './invoicing/voidedinvoices/VoidedInvoices';\r\n\r\nimport RefundedInvoices from './invoicing/refundedinvoices/RefundedInvoices';\r\n\r\nimport FullypaidNotYetSalesInvoices from './invoicing/fullypaidnotyetsalesinvoices/FullypaidNotYetSalesInvoices';\r\n\r\nimport Sales from './invoicing/sales/Sales';\r\nimport SalesForm from './invoicing/sales/SalesForm';\r\n\r\n//manufacture\r\nimport UnverifiedProductionProcesses from './manufacture/unverifiedproductionprocesses/UnverifiedProductionProcesses';\r\n\r\nimport VerifiedProductionProcesses from './manufacture/verifiedproductionprocesses/VerifiedProductionProcesses';\r\n\r\nimport ManufacturedStockItems from './manufacture/manufacturedstockitems/ManufacturedStockItems';\r\nimport ManufacturedStockItemForm from './manufacture/manufacturedstockitems/ManufacturedStockItemForm';\r\n\r\nimport ProcessMachines from './manufacture/processmachines/ProcessMachines';\r\n\r\nimport ProcessMachineGroups from './manufacture/processmachinegroups/ProcessMachineGroups';\r\nimport ProcessMachineGroupForm from './manufacture/processmachinegroups/ProcessMachineGroupForm';\r\n\r\nimport Shifts from './manufacture/shifts/Shifts';\r\nimport ShiftForm from './manufacture/shifts/ShiftForm';\r\n\r\nimport ShiftSchedules from './manufacture/shiftschedules/ShiftSchedules';\r\nimport ShiftScheduleForm from './manufacture/shiftschedules/ShiftScheduleForm';\r\n\r\nimport ProcessRates from './manufacture/processrates/ProcessRates';\r\nimport ProcessRateForm from './manufacture/processrates/ProcessRateForm';\r\nimport ProductionProcessForm from './manufacture/productionprocess/ProductionProcessForm';\r\n\r\nimport ProductionOrders from './manufacture/productionorders/ProductionOrders';\r\n\r\nimport ManufacturingTeams from './manufacture/manufacturingteams/ManufacturingTeams';\r\nimport ManufacturingTeamForm from './manufacture/manufacturingteams/ManufacturingTeamForm';\r\n\r\nimport ManufacturingPersonels from './manufacture/manufacturingpersonels/ManufacturingPersonels';\r\nimport ManufacturingPersonelForm from './manufacture/manufacturingpersonels/ManufacturingPersonelForm';\r\n\r\nimport ProcessProducts from './manufacture/processproducts/ProcessProducts';\r\nimport ProcessProductForm from './manufacture/processproducts/ProcessProductForm';\r\n\r\nimport WasteGenerationReports from './manufacture/wastegenerationreports/WasteGenerationReports';\r\nimport WasteGenerationReportForm from './manufacture/wastegenerationreports/WasteGenerationReportForm';\r\n\r\nimport ProcessedProductStockReceipts from './manufacture/processedproductstockreceipts/ProcessedProductStockReceipts';\r\nimport ProcessedProductStockReceiptForm from './manufacture/processedproductstockreceipts/ProcessedProductStockReceiptForm';\r\n\r\nimport ProcessedProductStockAdjustments from './manufacture/processedproductstockadjustments/ProcessedProductStockAdjustments';\r\nimport ProcessedProductStockAdjustmentForm from './manufacture/processedproductstockadjustments/ProcessedProductStockAdjustmentForm';\r\n\r\nimport ProcessedProductStockTakes from './manufacture/processedproductstocktakes/ProcessedProductStockTakes';\r\nimport ProcessedProductStockTakeForm from './manufacture/processedproductstocktakes/ProcessedProductStockTakeForm';\r\n\r\nimport Alerts from './components/alerts/Alert';\r\n\r\n//Alert Options\r\nconst alertOptions = {\r\n\ttimeout: 30000,\r\n\tposition: 'top center'\r\n}\r\n\r\nclass App extends Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<AlertProvider template={AlertTemplate} {...alertOptions} >\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t< Alerts />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path='/' component={Home} />\r\n\t\t\t\t\t\t\t<Route exact path='/dashboard' component={Content} />\r\n\t\t\t\t\t\t\t<Route exact path='/dash-view' component={Dashboard} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/unverifiedproductionprocesses' component={UnverifiedProductionProcesses} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/verifiedproductionprocesses' component={VerifiedProductionProcesses} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/manufacturedstockitems' component={ManufacturedStockItems} />\r\n\t\t\t\t\t\t\t<Route exact path='/manufacturedstockitems/create' component={ManufacturedStockItemForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/processmachines' component={ProcessMachines} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/processmachinegroups' component={ProcessMachineGroups} />\r\n\t\t\t\t\t\t\t<Route exact path='/processmachinegroups/create' component={ProcessMachineGroupForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/shifts' component={Shifts} />\r\n\t\t\t\t\t\t\t<Route exact path='/shifts/create' component={ShiftForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/shiftschedules' component={ShiftSchedules} />\r\n\t\t\t\t\t\t\t<Route exact path='/shiftschedules/create' component={ShiftScheduleForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/processrates' component={ProcessRates} />\r\n\t\t\t\t\t\t\t<Route exact path='/processrates/create' component={ProcessRateForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/productionorders' component={ProductionOrders} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/manufacturingteams' component={ManufacturingTeams} />\r\n\t\t\t\t\t\t\t<Route exact path='/manufacturingteams/create' component={ManufacturingTeamForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/manufacturingpersonels' component={ManufacturingPersonels} />\r\n\t\t\t\t\t\t\t<Route exact path='/manufacturingpersonels/create' component={ManufacturingPersonelForm} />\r\n\t\t\t\t\t\t\t<Route exact path='/productionprocess' component={ProductionProcessForm} />\r\n\t\t\t\t\t\t\t<Route exact path='/processproducts' component={ProcessProducts} />\r\n\t\t\t\t\t\t\t<Route exact path='/processproducts/create' component={ProcessProductForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/wastegenerationreports' component={WasteGenerationReports} />\r\n\t\t\t\t\t\t\t<Route exact path='/wastegenerationreports/create' component={WasteGenerationReportForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/processedproductstockreceipts' component={ProcessedProductStockReceipts} />\r\n\t\t\t\t\t\t\t<Route exact path='/processedproductstockreceipts/create' component={ProcessedProductStockReceiptForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/processedproductstockadjustments' component={ProcessedProductStockAdjustments} />\r\n\t\t\t\t\t\t\t<Route exact path='/processedproductstockadjustments/create' component={ProcessedProductStockAdjustmentForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/processedproductstocktakes' component={ProcessedProductStockTakes} />\r\n\t\t\t\t\t\t\t<Route exact path='/processedproductstocktakes/create' component={ProcessedProductStockTakeForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/creditnotes' component={CreditNotes} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/payments' component={Payments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/receipts' component={Receipts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/invoicelines' component={InvoiceLines} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/salesgroupspricingdiscounts' component={SalesGroupsPricingDiscounts} />\r\n\t\t\t\t\t\t\t<Route exact path='/salesgroupspricingdiscounts/create' component={SalesGroupsPricingDiscountForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/quotations' component={Quotations} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/unverifiedinvoices' component={UnverifiedInvoices} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/overdueinvoices' component={OverdueInvoices} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/voidedinvoices' component={VoidedInvoices} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/refundedinvoices' component={RefundedInvoices} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/fullypaidnotyetsalesinvoices' component={FullypaidNotYetSalesInvoices} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/sales' component={Sales} />\r\n\t\t\t\t\t\t\t<Route exact path='/sales/create' component={SalesForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inventorycategories' component={InventoryCategories} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/debitnotes' component={DebitNotes} />\r\n\t\t\t\t\t\t\t<Route exact path='/debitnotes/create' component={DebitNoteForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inventoryorders' component={InventoryOrders} />\r\n\t\t\t\t\t\t\t<Route exact path='/inventoryorders/create' component={InventoryOrderForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inventoryorderpayments' component={InventoryOrderpayments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/warehouses' component={Warehouses} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inventorystockitems' component={InventoryStockItems} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/storagemedias' component={StorageMedias} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inventoryreceipts' component={InventoryReceipts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/stockadjustments' component={StockAdjustments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inventorystocktakes' component={InventoryStockTakes} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/activesuppliers' component={ActiveSuppliers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/deactivedsuppliers' component={DeActivedSuppliers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/supplieraddresses' component={SupplierAddresses} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/rawmaterials' component={RawMaterials} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/equipments' component={Equipments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/consumables' component={Consumables} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/fullyreceivedandtotalpaidfororders' component={FullyReceivedAndTotalPaidForOrders} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/fullyreceivedtotalpaidforandverifiedorders' component={FullyReceivedTotalPaidForAndVerifiedOrders} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/completedevents' component={CompletedEvents} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/eventconfig' component={EventConfigForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/upcomingevents' component={UpcomingEvents} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employees' component={Employees} />\r\n\t\t\t\t\t\t\t<Route exact path='/employees/create' component={EmployeeForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companyshareholders' component={CompanyShareholders} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companymanagers' component={CompanyManagers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companybookkeepers' component={CompanyBookkeepers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companypayrollofficers' component={CompanyPayrollOfficers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companydrivers' component={CompanyDrivers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companymanufacturingpersonells' component={CompanyManufacturingPersonells} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companyinventorycontrollers' component={CompanyInventoryControllers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/companysalesreps' component={CompanySalesreps} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/pendingemployeeleaves' component={PendingEmployeeLeaves} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/authorisedemployeeleaves' component={AuthorisedEmployeeLeaves} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/declinedemployeeleaves' component={DeclinedEmployeeLeaves} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeecontracts' component={EmployeeContracts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeecontractsterminations' component={EmployeeContractsTerminations} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeedepartments' component={EmployeeDepartments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeeleaves' component={EmployeeLeaves} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepaygrades' component={EmployeePaygrades} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeeallowances' component={EmployeeAllowances} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepaydeductions' component={EmployeePayDeductions} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepaycommissionrules' component={EmployeePayCommissionRules} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepayrolltaxes' component={EmployeePayrollTaxes} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepayrolldates' component={EmployeePayrollDates} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepayslips' component={EmployeePayslips} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeeconfig' component={EmployeeConfigForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeeattendancetimesheets' component={EmployeeAttendanceTimesheets} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/deactivatedcustomers' component={DeactivatedCustomers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/customeraddresses' component={CustomerAddresses} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/activecustomers' component={ActiveCustomers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/taxes' component={Taxes} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/accountingconfiguration' component={AccountingConfigurationForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/assets' component={Assets} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/journals' component={Journals} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/currencies' component={Currencies} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/accounts' component={Accounts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/interestbearingaccounts' component={InterestBearingAccounts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/ledgers' component={Ledgers} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/accountingposts' component={AccountingPosts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/workbooks' component={Workbooks} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/accountingadjustments' component={AccountingAdjustments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/debits' component={Debits} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/credits' component={Credits} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/fullypaidnotverifiedbills' component={FullyPaidNotVerifiedBills} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/fullypaidbills' component={FullyPaidBills} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/unpostedandunadjustedjournalentries' component={UnpostedAndUnadjustedJournalEntries} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/unadjustedjournalentries' component={UnadjustedJournalEntries} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/unpostedjournalentries' component={UnpostedJournalEntries} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/postedjournalentries' component={PostedJournalEntries} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/inactiveaccounts' component={InActiveAccounts} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/bills' component={Bills} />\r\n\t\t\t\t\t\t\t<Route exact path='/bills/create' component={BillForm} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/billpayments' component={BillPayments} />\r\n\r\n\t\t\t\t\t\t\t<Route exact path='/employeepayrollschedules' component={EmployeePayrollSchedules} />\r\n\r\n\t\t\t\t\t\t\t<Route component={Default} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t</AlertProvider>\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import {Component} from 'react';\r\nimport {withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\nimport ScrollToTop from './ScrollToTop';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <ScrollToTop>\n            <App />\n        </ScrollToTop>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}